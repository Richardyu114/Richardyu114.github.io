<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>自拙集</title>
  
  <subtitle>Work cures everything</subtitle>
  <link href="http://densecollections.top/atom.xml" rel="self"/>
  
  <link href="http://densecollections.top/"/>
  <updated>2024-02-18T13:19:26.694Z</updated>
  <id>http://densecollections.top/</id>
  
  <author>
    <name>Richard YU</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2023-2024-人生徐徐</title>
    <link href="http://densecollections.top/posts/Summaryofthisyear-5/"/>
    <id>http://densecollections.top/posts/Summaryofthisyear-5/</id>
    <published>2024-02-18T05:59:17.000Z</published>
    <updated>2024-02-18T13:19:26.694Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>且夫天地之间，物各有主，苟非吾之所有，虽一毫而莫取。惟江上之清风，与山间之明月，耳得之而为声，目遇之而成色，取之无禁，用之不竭。是造物者之无尽藏也，而吾与子之所共适。</strong></p><footer><strong>苏轼-赤壁赋</strong></footer></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-5/icon.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-5/tree.jpg" alt></p><h3 id="写在前面">写在前面</h3><p>每年都让人觉得过得飞快，今年更甚，办了不少事，事业和生活上都一步步地往前（被）推进着，角色上瞬间发生转变。以前那种悠哉悠哉的空挡真的少了很多，书读得少了，独处的机会也几乎没有了，好在还有点机会出去转转，即使没能走遍祖国的秀丽山河，但能够和朋友家人到处走走，舒舒心也算是一件幸事。</p><blockquote><p>the computation is the new oil.</p></blockquote><span id="more"></span><p>今年是LLM大语言模型元年，各家都在奋力追上OpenAI的步伐，我所在的团队赶上了模型加速的东风，也做了一些<a href="https://github.com/intel/neural-speed">成果</a>。今年多模态模型（VLM, text-to-video), MOE等组合模型和一些加速上的技巧肯定还是会层出不穷的，抓住这个机会，也能迎接新一轮的变革。</p><p>2023年年初家里迎来了新成员，一只丑萌的三花猫，由于她对人类的需求太高以至于在国庆假期期间差点把我们的小出租屋毁了。我一怒之下差点把她丢掉（幸好及时挽救），现在家里已经少不了她了，大猫也慢慢地接受了她的存在（虽然并不想和她玩）。我在家办公时候她就会在我脚边睡觉，有时候喊她她也会答应，一推就倒，任我蹂躏，就是胆子太小，风声鹤唳的。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-5/caibao.jpg" alt></p><p>当然，23年最重要的就是完成了立了多年的flag，终于下定决心买了电子琴，开始自学钢琴。照着B站上V叔的钢琴入门课，开始慢慢学习指法和乐理，纯当自娱自乐。但是这玩意需要坚持和指导，24年还是决定好好找个老师上课。虽然过程很漫长，但是终究有一天可以弹教授坂本龙一和贝多芬的曲子吧。</p><h3 id="画">画</h3><p>23年年中开始接触油画棒，相对来说其价格比传统油画材料便宜太多，入门的门槛低，而且也容易出作品，不需要精细的临摹。可以更方便地表达自己地情绪，让人产生强烈的绘画兴趣。玩油画棒就像自己回到了小时候在幼儿园拿着笔和纸随便涂涂画画的时光，不失为保持童心和想象力的一种方式。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-5/oil-painting-1.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-5/oil-painting-2.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-5/oil-painting-3.jpg" alt></p><h3 id="展览">展览</h3><p>23年4月末时候去看了上海博物馆的<a href="https://shangbo-exhibition.yit.com/sb-ygz/index.html">“从波提切利到梵高”</a>的合作展览，本以为接近展览尾声的时候人应该不会太多，谁知依旧人山人海，每一幅画都没法近距离凑上去看一下，观感体验就很差。说回展览本身，这次上博从英国国家美术馆拿到了1400到1800期间的几十幅作品，涉及到了波提切利，拉斐尔，提香，卡拉瓦乔，伦勃朗，塞尚，雷诺阿，莫奈，梵高等，总体还是值回票价的，不过和之前在南博，或者其他上海的美术展一样，真正出自展览名称的大师的作品基本只有一两幅，并且也是特别有名的代表作，大部份都是同时期的画家的作品，相对来说，资源上还是差点。<br>西方绘画上还是重在表现物体的细腻度和光影，很多画作近距离观看确实会被其中的细节震撼到，这种追求和国画完全不同。若是时间和空间足够的话，仔细欣赏其中油墨涂抹的层次，光影的调节分布，以及远近景的构图，还是会自身很有帮助的。</p><p>23年劳动节前夕去看了西岸美术馆的<a href="https://mp.weixin.qq.com/s/IgUh5uQ3aQCpvZxLK59vtg">本源之画-超现实主义与东方</a>。</p><blockquote><p>展览将溯源此前未曾被充分讨论过的<strong>超现实主义与东方文化</strong>的关系，藉由胡安·米罗、安德烈·马松、赵无极等诸多超现实主义和抽象主义大师的作品，着重展现这一艺术流派的抽象特性，另辟维度审视超现实主义，引领观众步入一趟追寻20世纪人类思想文明轨迹的精神之旅。</p></blockquote><p>实际上超现实主义我此前没有任何接触，去看之前感觉应该和抽象主义差不太多，因此也报了不小的期待，但是看完之后发现不达预期。很多画个人认为是形式大于内容。还是国画好看些。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-5/gallery-1.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-5/gallery-2.jpg" alt></p><p>23年年中去看了孟京辉的<a href="https://www.douban.com/location/drama/3167344/">恋爱的犀牛</a>的现场版。之前看了廖一梅的原著剧本，也看了段奕宏-郝蕾的录像版，因此看之前也没有抱很大的期待（私以为应该没有人可以超越段奕宏那版的诠释和舞台效果）。不过实际看下来还不错，虽然我感觉男女主就是照着段奕宏和郝蕾的样子去演的。这一版去除了之前开场大钟的众人舞，有些台词做了修改，角色的台词也顺应时代潮流加了一些新梗，马路的三个好基友也起到了不错的喜剧效果。戏时长大概两个小时，看起来挺长的，实际上看下来觉得有些仓促，尤其是马路和明明的感情纠葛细分不如以前足（当然这也可能是我现在观影习惯变坏了）。</p><p>虽然我买的是第三排的票，但是由于不是中间的座位（右边），观感还是大打折扣，剧中除了马路会时不时正对着右边，其他情况下基本所有的演员都是正对中间或者左边，因此看不清演员的情绪。这一点下次买票还是要注意。</p><p>下面说说对这部戏的感受。</p><p>看剧本和录像那段时间，我停留在新世纪恋爱的议题下，新世界的消费注意和快节奏，人的意识觉醒，狗血却又常见？的三角恋爱情。我观感的重心在马路和明明受到的爱情折磨上，以及思考什么是爱情（多巴胺，几粒康泰克就可以解决的感冒）。直到今年再看现场版时，我不再对主角之间爱情的纠葛感兴趣，甚至说无感，结合我自身的社会体验，我发现这部戏与我脱节了，看到马路对着明明“舔”，对着明明发出爱的嘶吼，拆着俄罗斯娃娃式的白纸礼物（W看到这段时印象很深，她说自己期待的爱情一层层拨开后发现什么都不是，什么都没有），我突然觉得马路不是我熟悉的任何人。回家后我翻了孟京辉在B站传的段奕宏版本的<a href="https://www.bilibili.com/video/BV1Ku411f7Vy/?vd_source=c5232e4564e248b018835fa2077d9950">录像</a>，看到了一个朋友的评论</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-5/ladxn-comments.png" alt></p><p>我的心绪突然被打开了，我也觉得“犀牛”这部剧不是在单纯讲爱情，先锋戏剧不会那么容易的得到主题，荒诞，奇特不合常规的对话和表演结构下往往是氤氲着一些“虚无缥缈”的主题，而这些主题是当代人类会struggle的一些东西。“犀牛”不歌颂人，不展现人的性格，不展示历史和富有魅力的故事，它展现是的这个时代，发展到现在，对人的一种“异化”，人对人自身的一种不满足，对自身的情感不能适应快节奏的时代的一种渐进式的“丢弃”，对执着的摒弃，以及人为了快速完成“传统生活任务”（诸如结婚）而做出的一种不在意的妥协等。</p><p>经典的戏剧常看常新，这也是经典的意义。非常推荐大家去看看这部戏，不管是录像还是现场版。</p><p>23年年末的时候去看了国家地理的摄影展，其中头条就是那幅著名的”阿富汗少女“。展出的作品不算多，但是条理清晰，有些作品也挺有趣的。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-5/nation-geo-1.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-5/nation-geo-2.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-5/nation-geo-3.jpg" alt></p><h3 id="书">书</h3><p><a href="https://book.douban.com/subject/27624390/">云彩收集者手册</a>，真的是做的很不错的一本书，里面介绍了在地球观测到的现存的所有的云彩，附带插图和形成原理的介绍，并且标记了每种云的“稀有”程度。当初是为了练习画云而买的一本书，当然我自己也是很喜欢拍云彩，希望可以拍出一个系列的云彩摄影机出来。现在这本出已经躺在了我的书包里，属于出门必携带的东西，抬头看的时候翻阅。云彩真的是一种美丽有治愈的东西。</p><p><a href="https://book.douban.com/subject/33372580/">科幻编年史</a>。科幻小说和科幻电影的一本“百科全书”，作者按照时间线和时代划分了几个科幻时代，简要介绍了当时创作的背景，故事内容以及影响，对有些非常著名的作品（比如人猿星球，异形，银翼杀手等）加了图片和故事的时间轴，非常适合科幻骨灰粉观看。不过有些内容编排有点乱，讲的也不够深入，这也是“百科全书”的通病，权当手边书翻翻。</p><h3 id="影视">影视</h3><p>今年有空的话都在B站刷短视频了，书看的少，优秀的影视看的也很少了。以前在大学还会专门挑获奖作品看看，23年却一点提不起兴趣。不得不说，成年人的生活和工作是真累，没有容易二字。</p><p><a href="https://movie.douban.com/subject/35517450/">克拉克森的农场-第二季</a>，从一打开就停不下来的神片。从<a href="https://movie.douban.com/subject/5154008/">Top Gear</a>入坑“猩猩&quot;,我真的太喜欢克拉克森的节目和吐槽了。这个show主要说的对农业一窍不通的克拉克森，晚年回去经营自己的农场，弄出一系列”啼笑皆非“的故事，里面也有不少对英国政府的讽刺。</p><p><a href="https://movie.douban.com/subject/25848328/">最后生还者-第一季</a>，同名经典索尼的游戏改变而成的，当年应该没钱买PS，云通关了这款游戏，故事剧情确实令人印象深刻，甚至超越了很多原创影视作品的水准。曼达洛人<a href="https://movie.douban.com/celebrity/1329628/">帕斯卡</a>试验游戏主角乔尔，更加拉高了我的期待值。第一季的制作不负我的期待，故事紧凑，有些改编剧情也很优秀（尤其是前半截），后半截有些许偷懒。期待第二季的改编。</p><p><a href="https://movie.douban.com/subject/26647087/">三体第一季-腾讯版</a>，虽然有国产剧注水的通病，但是诚意满满，古筝计划那段神还原了。这一版的 选角也是我心目中对原著人物想象的样子。希望第二部能搞快点。:eyes:</p><p><a href="https://movie.douban.com/subject/35267208/">流浪地球2</a>，相比1来说特效进步太多了，已经让我有种看好莱坞大片的错觉了。故事也不赖，紧凑不拖沓。希望能继续把这个系列做下去呀。</p><p><a href="https://movie.douban.com/subject/35178776/">雾山五行之犀川幻紫林篇</a>。国画风超爱，打斗场面依然是绚丽的，只不过这一部感觉进度稍微拖沓了些，不够看。</p><p><a href="https://movie.douban.com/subject/35769236/">鬼灭之刃</a>。前年看了无限列车篇，今年一口气追完了动画版本的游郭和锻刀村和漫画版的剩余故事。动画制作的高水准是毋庸置疑的，不过看完了觉得也就这样，逻辑上也有很多硬伤，有不少东京食尸鬼和进击的巨人的影子。</p><p><a href="https://movie.douban.com/subject/30391186/">蜘蛛侠之纵横宇宙</a>。索尼蜘蛛侠动画电影三部曲的第二部，画面依然是炫酷的，同时风格独特多样。由于我对漫画的内容一概不知，所以故事上也就是看个热闹。国内也出版了前两部的艺术设定集（<a href="https://book.douban.com/subject/34986217/">1</a>, <a href="https://book.douban.com/subject/36304876/">2</a>），某宝上也有卖的电子版，可以找来看看。</p><p><a href="https://movie.douban.com/subject/35433177/">warrior(战士) s1-s3</a>。根据李小龙生前的手稿创作的一部旧金山华人黑帮美剧，应该也是小黄台HBO出品，片头和权游，西部世界类似。故事背景设定在美国南北战争之后，一战之前，大清还没亡。人物众多，除了华人黑帮之外，还有爱尔兰人，警察，资本大鳄，政治家，黑人，墨西哥人等等故事线。这段历史的美剧我以前没怎么看过，更何况还是以旧金山华人劳工为主线，并且展现了刻在美国骨子里的方方面面的种族歧视。整部剧在宏观上看还是不错的，虽然华人部分有些认知和剧情看起来怪怪的（毕竟是美国人出品，演员也大多ABC?甚至主角团都是华裔的），但是值得一看，最主要是有种耳目一新的感觉。前三季中个人觉得第二季最好，导演之前也是导过权游，一集铺垫，一集高潮，反转迭起，毫不拖拉的让角色领盒饭，一时间我以为我在看权游衍生剧。第一季主要是建立世界观，各种角色登场，中规中矩吧，第三季节奏稍慢，主角阿山戏份似乎少了很多，操作也有一些割裂（和前两季而言）？。另外每一季的中间集都会固定拍西部风格的惩恶扬善剧情（美国人的武侠？），阿山和黑帮少爷一起探索新地图，解救弱势群体，还是有点意思的。期待下第四季，让我看看编剧怎么收尾。最后，还是很难想象李小龙是怎么想出这个剧的，也不知道编剧编的和李小龙设想的差别有多大。。</p><p><a href="https://movie.douban.com/subject/2210001/">大明王朝1566</a>。根据刘和平的同名小说翻拍的，算是国产历史政治剧的巅峰了。我是看的B站的<a href="https://www.bilibili.com/video/BV1Ue4y1w7bk/">分集解说</a>，并没有单独一集集磕原片。除了感慨嘉靖帝的制衡之术，也对中华文化的博大和丰富发出由衷的赞叹。以前忽略了这一点，后面准备陆续看看其他历史剧（东周列国传，大秦帝国，汉武大帝，贞观之治，雍正王朝等）和书籍（周易，左传，春秋，史记，资治通鉴，古文观止等）。</p><h3 id="结语">结语</h3><p>在20岁最后的这几年里，我希望自己能够继续接触不同的东西，充实自己，深入了解自己和这个世界，进而改造自己，提升自己。不求轰轰烈烈，只求有趣快乐。当然，最主要是还是希望家人和自己健康平安，这样才能享受生活，感受世界。</p><p>ok, 按照惯例，继续列一下24年的计划：</p><ul><li>精进人像摄影</li><li>多看一些舞台剧和展览</li><li>出国玩一玩</li><li>学会游泳</li><li>多多练习钢琴</li><li>好好看书</li><li>多开车出去转转</li><li>有空画画</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-5/sd-1.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-5/sd-2.png" alt></p><p>明年再见！</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;且夫天地之间，物各有主，苟非吾之所有，虽一毫而莫取。惟江上之清风，与山间之明月，耳得之而为声，目遇之而成色，取之无禁，用之不竭。是造物者之无尽藏也，而吾与子之所共适。&lt;/strong&gt;&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;苏轼-赤壁赋&lt;/strong&gt;&lt;/footer&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-5/icon.jpg&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-5/tree.jpg&quot; alt&gt;&lt;/p&gt;
&lt;h3 id=&quot;写在前面&quot;&gt;写在前面&lt;/h3&gt;
&lt;p&gt;每年都让人觉得过得飞快，今年更甚，办了不少事，事业和生活上都一步步地往前（被）推进着，角色上瞬间发生转变。以前那种悠哉悠哉的空挡真的少了很多，书读得少了，独处的机会也几乎没有了，好在还有点机会出去转转，即使没能走遍祖国的秀丽山河，但能够和朋友家人到处走走，舒舒心也算是一件幸事。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;the computation is the new oil.&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="纪录与总结" scheme="http://densecollections.top/categories/%E7%BA%AA%E5%BD%95%E4%B8%8E%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="summary" scheme="http://densecollections.top/tags/summary/"/>
    
    <category term="life" scheme="http://densecollections.top/tags/life/"/>
    
    <category term="reflections" scheme="http://densecollections.top/tags/reflections/"/>
    
  </entry>
  
  <entry>
    <title>浅谈LLM Memory Bound的原因</title>
    <link href="http://densecollections.top/posts/why-llm-is-memory-bound/"/>
    <id>http://densecollections.top/posts/why-llm-is-memory-bound/</id>
    <published>2023-09-22T13:19:07.000Z</published>
    <updated>2023-09-22T13:35:56.775Z</updated>
    
    <content type="html"><![CDATA[<p>现在针对 LLM的部署推理框架都会花很多精力优化IO，公认这种大的decoder-only的模型推理瓶颈在memory侧。对此，我们简单分析一下原因。</p><p>首先LLM进行text-generation的流程如下：</p><ol><li>加载模型架构</li><li>填充weight</li><li>输入tokenization化 （tokenizer encode prompt)</li><li>计算+后处理 （auto-regression, top_p_top_k, beam_search等）</li><li>输出字符（tokenizer decode tokens)</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/why-llm-is-memory-bound/GPT_inference_procedure.png" alt></p><ul><li>⭐架构层面，基本都是transformer decoder搭建的，也就是embedding → decoder_layer (attention_block, norm, residual add, activation op,  softmax, …) → lm_head. 其中除了attention_block和lm_head中的GEMM外，其余可以认为都是IO密集型算子 （norm, rope, add, softmax等）。不过现在的推理框架基本都是支持算子 融合（op fusion)，比如 residual add可以作为gemm的post op，reduction维度算完即可相加然后存储，softmax通过flash attention在reduction维度滑动更新， <code>gelu, relu, silu</code> 这种FFN里面的激活函数也可以算出一个block就直接计算等等。总得来说，fusion op来减少反复从memory中反复读写的操作，让核心（core)一次算多点。因此IO OPs方面相对来说比较好解决（profiling看哪个op好事多就想办法fuse起来，压力来到kernel这边）。</li><li>⭐⭐填充weight，也就是 参数量层面。另外模型的层数多，隐藏维度大，导致整体的weight比较大，load起来也比较费时。所以这个是memory bound的第一个原因。但是，现在低精度，混合精度推理相对成熟（ <code>k_quant</code> , <code>weight_only 4 bit</code> 等)，甚至更激进的2 bit也有，因此只要保证精度损失在可接受范围内 （ <code>smooth quant</code> , <code>AWQ</code> , <code>GPTQ</code> 等，压力来到PTQ量化算法这边)，weight就可以压缩好几倍，大幅度减少memory load的时间。</li><li>输入tokenization化，这个是标准操作，每个模型有自己独特的tokenizer进行prompt编码，这个词表查询一般没什么优化技巧，也只在first_token推理中进行</li><li>⭐⭐⭐计算+后处理。这个应该算是最大的IO瓶颈了，大头就是 <code>kv cache</code> ，我们知道LLM都是自回归式（前向注意力）的来计算下一个token，除了prompt的first-token步骤，后面的都必须要串行计算，也就是说下一个token依赖上一个token，以此类推。其中 <code>kv cache</code> 是为了不重复计算之前出现过的token的 <code>K,V</code> activation值进行的优化，也就是**用空间换时间，**防止计算量逐iteration增长。以<a href="https://arxiv.org/pdf/2302.13971.pdf">llama-7b</a> 为例，<code>layer=32, n_hidden_size=4096, context_window=2048</code> , 如果存储fp32 dtype，需要的内存大小为 <code>32x4096x2048x2x4 /1024 /1024=2048M=2GB</code> ，这个还是单batch的，如果想要实现多batch，比如continuous batching，还得乘上max_bs数。第二个是LLM的next_token计算截断，输入的是尺寸是 <code>bsx1</code> ,如果是单batch下，尺寸就非常小，对GEMM来说，计算量小了很多，bottleneck自然就慢慢往IO bound那边倾斜，然后计算阶段还要额外load <code>kv cache</code> 然后进行memory_cpy 最新计算出的 <code>K, V</code> activation值，然后再统一送给下面的 MHA或者flash attention截断。当然，我们可以增大输入的尺寸，比如经典的<a href="https://www.usenix.org/system/files/osdi22-yu.pdf">ORCA</a> 论文的continuous  batching通过把多个request拼成一个sentence来增加计算量，充分利用 <code>core</code> 核心，但是相应的 <code>kv cache</code> 也会成倍增大。因此这一块是最大的瓶颈，没法很好地解决 （tradeoff)，当然 <code>kv cache</code> 也是可以使用低精度来存储，然后计算时候再根据需求反量化回去，比如常见的F16, INT8等，减少IO存储，另一方面比如vllm的 <code>paged attention</code> 来分散其存储位置，减少空间不够的内存搬运等问题。后处理上如果是top_p_top_k这种增加多样性生成的采样方法，应该还好，只是算一次top_k的时间，如果是像 beam_search这种关注句子质量的采样方法，由于要保持多个beam，等于是变向增加了batch_size，因此瓶颈也是在 <code>kv_cache</code> 这里，虽然可以通过common_perfix这种规避掉一些内存，但是可能还要涉及到beam之间的<code>kv_cache</code> 的内存拷贝等，因此memory_bound也很明显。</li><li>输出字符方面和输入类似，只能在tokenizer方面做文章，因为暂时没什么优化，大家都差不多。</li></ul><p>综上，LLM推理的memory_bound最根本的原因还是 <code>kv cache</code> ，而<code>kv cache</code> 是由LLM架构中的前向注意力自回归导致的。如果未来有新的架构可以前向一次prompt吐出多个带前后顺序的tokens，那么<code>kv cache</code> 的问题就能得到很好的缓解了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;现在针对 LLM的部署推理框架都会花很多精力优化IO，公认这种大的decoder-only的模型推理瓶颈在memory侧。对此，我们简单分析一下原因。&lt;/p&gt;
&lt;p&gt;首先LLM进行text-generation的流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;加载模型架构&lt;/li&gt;
</summary>
      
    
    
    
    <category term="LLM部署" scheme="http://densecollections.top/categories/LLM%E9%83%A8%E7%BD%B2/"/>
    
    
    <category term="LLM" scheme="http://densecollections.top/tags/LLM/"/>
    
    <category term="Inference" scheme="http://densecollections.top/tags/Inference/"/>
    
  </entry>
  
  <entry>
    <title>2022-2023-Suffering</title>
    <link href="http://densecollections.top/posts/Summaryofthisyear-4/"/>
    <id>http://densecollections.top/posts/Summaryofthisyear-4/</id>
    <published>2022-12-29T08:48:19.000Z</published>
    <updated>2023-01-08T10:09:37.181Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>Do not go gentle into that good night,                          不要温和地走进那个良夜,</strong><br><strong>Old age should burn and rave at close of day;            白昼将尽,暮年仍应燃烧咆哮;</strong><br><strong>Rage, rage against the dying of the light.                      怒斥吧,怒斥光的消逝。</strong><br><strong>Though wise men at their end know dark is right,      虽然在白昼尽头,智者自知该踏上夜途,</strong> 　　<br><strong>Because their words had forked no lightning they      因为言语未曾迸发出电光,他们</strong><br><strong>Do not go gentle into that good night. 　                      不要温和地走进那个良夜。</strong> 　　<br><strong>Good men, the last wave by, crying how bright            好人,当最后一浪过去,高呼着他们脆弱的善行</strong><br><strong>Their frail deeds might have danced in a green bay,   本来也许可以在绿湾上快意地舞蹈,</strong><br><strong>Rage, rage against the dying of the light.                       所以,他们怒斥,怒斥光的消逝。</strong> 　　<br><strong>Wild men who caught and sang the sun in flight,         狂人抓住稍纵即逝的阳光,为之歌唱,</strong><br><strong>And learn, too late, they grieved it on its way,               并意识到,太迟了,他们过去总为时光伤逝,</strong><br><strong>Do not go gentle into that good night.                            不要温和地走进那个良夜。</strong> 　　<br><strong>Grave men, near death, who see with blinding sight   严肃的人,在生命尽头,用模糊的双眼看到</strong><br><strong>Blind eyes could blaze like meteors and be gay,        失明的眼可以像流星般闪耀,欢欣雀跃,</strong><br><strong>Rage, rage against the dying of the light. 　                  所以,他们怒斥,怒斥光的消逝。</strong>　　<br><strong>And you, my father, there on the sad height,                而您,我的父亲,在生命那悲哀之极,</strong><br><strong>Curse, bless, me now with your fierce tears, I pray.     我求您现在用您的热泪诅咒我,祝福我吧</strong><br><strong>Do not go gentle into that good night.                            不要温和地走进那个良夜。</strong><br><strong>Rage, rage against the dying of the light.                        怒斥吧,怒斥光的消逝。</strong></p><footer><strong>Dylan Thomas-Do not go gentle into that good night</strong></footer></blockquote><img src="https://images.unsplash.com/photo-1644691568805-fd9a88e0f057?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2664&q=80" style="zoom:33%;"><h3 id="写在前面">写在前面</h3><p>我的童年一直都是在快乐中进行的，尽管我小时候做了不少家庭劳动。那会我从未有”疲惫“的概念，顶多开始认识到寂寞和孤独。上了中学以后，我和身边大多数人一样，埋头学习，阅读书籍，开始思索孤独，生命，生活之类的概念、意义和自身的命运。幸运的是，我那会还未真正地感受到宇宙的广袤和冰冷，乖乖地处于其他人的保护之中，我只是迫不及待地拿这些思索的结果，堆砌成供我炫耀吹嘘的资本，所以青少年时期过得很安稳，性格上也只是收敛了”吵闹“的元素。自高中之后，我情愿或不情愿般地走出了童年时期的小屋，疯狂地探索这个世界，涉猎各个领域，渐渐地也开始了自己有意识的”苦痛“之旅。同样地，外界的负反馈和压力也逐渐侵入到我的生活里。主观加客观的煎熬、折磨、失望等构成了苦痛的绝大部分，如果是伟人的话，或许可以据此创作出一些不错的作品出来，而我却只是举棋不定，自我消耗。</p><span id="more"></span><p>大学期间，这种自我内耗将我困住了很长时间，幸好骑行的习惯给了我疏导自己的机会，才不至于让自己”废掉“。有很长一段时间，我天天都会骑到学校周围某处的公园的一个湖边，我站在空旷的草地上，看着河对岸的明月和迷幻的霓虹灯，仰望着无边无际的漆黑天空。终于在一个时刻，我的视线穿越了无边的黑暗，看到了太空中漂浮的碎片，看到了绚丽的星球，看到了恒星躁动的火焰，也看到了永恒的寂静。自此之后，我释放了我自己的灵魂，不再让其受梏于这些那些执念，欲望的枷锁，我把自己交还给了宇宙，归于尘土，归于时间。</p><p>我还是在受苦，但我换了一种心情。我不再求回报，不再抱太多希望，也不再对一切现象起太多波澜。我已完全把自己的生命之旅看成体验之旅。快乐也好，辛酸也好，苦痛也好，死亡也好，都是我不再拒绝和逃避的体验场景。和索拉里斯星一样，我们都是宇宙尘埃组成的有机体，身体是我的意识体验这个世界的载体。不过，要是我的”意识“是模拟出来的话，不知道体验还属不属于我自己的了。</p><p>现在的我变得有些偏执，总要挑那些看上要有更多挑战和“痛苦”的路去、去试，就好像管理和政治上总要把事情变复杂一样，但是却并不相同。“现在的我，正变得有些多余。”受苦让我体验，却也在一定程度上削平了我的意志。一年又一年，我变得麻木，愚钝和跳脱，我屈服于各种各样琐碎的事情里…</p><p>工作是suffering, 疫情是suffering，很多的交际是suffering ，感觉生活的大部分时间都在无意义的消耗中度过，但是每个行为都会留下痕迹？也不算无意义了吧。把人生转变成一场修行？内在的进化是主要目的，外在的体验也最终化成精神的养料。</p><hr><p>2022年，算是见证了很多历史的一年。经济全球化的失败，ZZ的失信以及鲁迅先生所写的故事依旧在生活中上演等等。期间W还在跟我说想收集一些素材来汇成一部“疫情编年史”，后来也没有付诸行动，我想可能会有人把这三年的故事拍成纪录片来给后人展示这样一个“大瘟疫时代”下的种种现象。类似“人生能有多少个十年”，疫情也让我内心发出“人生能有多少个三年”的感慨。最终以“群体免疫”收尾的“战斗宣告一个阶段的结束，回首几乎都在封控中度过的这三年，我完成了从校园到社会，从一个人到两个人的过渡。虽然没能在知识上收获多少，但是重新塑造了自己对生活和生民的认识，也重新感受到”体验“的重要性。</p><p>2022年应该是我最单调的一年了，前半年因为上海疫情封控，一边在家办公，一边想方设法收集物资度日。因为烦躁，书没能好好看，自身技能也没得到啥增长，倒是打了不少游戏，看了不少短视频。后半年因为工作上比较忙，又赶上全球裁员潮，浑浑噩噩就迎来了”元旦“。总之，就是什么事都还没做就结束了。</p><h3 id="工作">工作</h3><p>工作上么，相对于去年刚入职手忙脚乱的”菜鸟新人“，慢慢开始”驾轻就熟“，各种规则和敏感的地方都能较好地把控下来。今年的coding重心也转移到了C++上面来，开始从系统层面思考我们的AI推理架构，也会看看别人写的不错的代码和设计思路。事实上，很多人都不太满足自己的现状，都会对自己的单位和工作内容挑出一些毛病，但这也不妨碍我去拿身边现有的资源去精进自己（听起来老套，但是确实很有用）。还是那句话，工作就是工作，工作时候好好工作和学习，下了班就要好好生活（所以国内996这种情况，以后要是跳槽怕是没什么太多的选择，哈哈）。</p><h3 id="音乐-公开课">音乐&amp;公开课</h3><p>音乐上，今年似乎没听啥新专辑，感觉这几年全球的乐坛都比较疲软？我还是继续随机播放着以前的歌单，偶尔兴致来了，也会挑着听听别人分享的歌单，主题无非是爵士啊，流行啊和一些钢琴曲，没什么特别的东西。前两年还一直坚持听着古典音乐，今年都快彻底丢了这个习惯了。果然啊，有失望就会有痛苦，有痛苦就会有挣扎，有挣扎就啥也干不了。</p><p>公开课上年末完整地看完了<a href="https://www.bilibili.com/video/BV15v4y1g7EU/?">机器学习编译</a>，<a href="https://mlc.ai/summer22-zh">课程主页</a>。大名鼎鼎的<a href="https://tqchen.com/">陈天奇</a>制作的介绍机器学习编译（部署）相关的系列教程，紧密结合了他开发的<a href="https://tvm.apache.org/">TVM</a>，正好我工作的内容跟这个相关，也想来学习一下TVM，所以就找来看看。天奇大神讲得还是蛮细致的，也很有诚意，用几节课把机器学习编译中的重要的关键点给拎出来介绍了一下，还是十分推荐观看的，可以结合<a href="https://tvm.hyper.ai/docs/">TVM文档</a>一起食用。其实看这个课的另外一个目的是我打算写一系列AI推理框架的博客，想系统的思考，梳理和总结一下AI推理框架的各个元素，包括模型解析，算子映射，子图融合，kernel注册，dispatcher,内存管理等等，同时也加入AI编译器，LLVM, MLIR, Tensor  IR等等这样相互关联的内容，毕竟都是为了解决模型的部署推理问题（多样的硬件，请求场景等）。</p><p>22年自己也定了很多要看的课，像国学类的（复旦王德峰的王阳明心学，佛学，北大杨立华的庄子），计算机图形学（GAMES101,闫令琪），c++等等，不少都是看到中途就莫名其妙“结束了”。明年还是尝试一下碎片时间用看，用听的方式来多涉略一些不同领域的公开课，要是专门周末定个时间反而会激发我的“反骨”，导致没法进行下去。</p><h3 id="摄影与游记">摄影与游记</h3><p>上半年因为上海的疫情，基本都是在家里度过了，没法出去转转。本来工作上事情比较多，心烦意乱的，于是和W决定一起去看看海，听听海浪，舒缓一下紧绷的神经。去年毕业那会短暂在威海待了一上午，干净的海面和安静的周边环境令我印象深刻，所以我们来了一场”说走就走的旅行“，沿着海岸线好好玩了几天。正好9月份过了禁渔期，海鲜种类多，而且威海靠近韩国，各种韩料都很正宗（烤肉，海苔，炸酱面，泡菜）。</p><table><thead><tr><th><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-4/weihai_1.jpg" alt="合庆码头，这里可以买到刚捕捞上来的海鲜"></th><th><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-4/weihai_2.jpg" alt="威海之窗"></th><th><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-4/weihai_3.jpg" alt="那香海，可以待一整天。在这里可以释怀一切"></th></tr></thead><tbody></tbody></table><table><thead><tr><th><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-4/weihai_4.jpg" alt="潮涨潮落，让海水浸润我的脚丫"></th><th><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-4/weihai_5.jpg" alt="海鲜锅加韩料"></th><th><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-4/weihai_6.jpg" alt="特产无花果，很难想象这个外观平平无奇的水果有这么甜"></th></tr></thead><tbody></tbody></table><p>去年纠结了好久买的NIKON-Z6，今年拿出来摸摸的次数都少得可怜，摄影类相关的视频，介绍也好，教学也好，审美鉴赏也好，观看次数和种类也屈指可数。emmm,感觉今年真的是废掉了(╬▔︹▔)。这导致我年末翻手机相册几乎看到什么作品，更别说满意的作品了（摊手）。今年正儿八经带着相机出去拍的除了9月份的威海，剩下的也就是酷暑那段时间去了趟家附近的植物园，拍的一长串的树的照片。</p><table><thead><tr><th><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Text-2-Images/photography_1.jpg" alt="上迪的小熊维尼，晃动镜头抓拍，有一丝可怖的气息，哈哈"></th><th><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Text-2-Images/photography_2.jpg" alt="朋友家的小猫”阿皮“，&quot;侠客&quot;视角"></th></tr></thead><tbody></tbody></table><table><thead><tr><th><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Text-2-Images/photography_5.jpg" alt="树！树！树！"></th><th><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Text-2-Images/photography_4.jpg" alt="树！树！树！"></th><th><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Text-2-Images/photography_3.jpg" alt="树！树！树！"></th></tr></thead><tbody></tbody></table><h3 id="书-话剧-影视">书/话剧/影视</h3><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-4/movies.jpg" alt></p><ul><li><a href="https://movie.douban.com/subject/35436582/">爱死机第三季</a>，内容和形式上和第一季很类似，但是值得一看。当然最震撼的视觉风格来自于压轴的最后一集，惊喜的是该集的画师<a href="http://www.albertomielgo.com/">Alberto Mielgo</a>也画了第一季的&quot;<a href="https://movie.douban.com/subject/30424374/episode/3/">证人</a>&quot;。最后一集的艺术创作可能借鉴了<a href="https://zh.wikipedia.org/wiki/%E5%8F%A4%E6%96%AF%E5%A1%94%E5%A4%AB%C2%B7%E5%85%8B%E6%9E%97%E5%A7%86">克林姆特</a>的<a href="https://zh.wikipedia.org/wiki/%E5%90%BB_(%E7%95%AB)">“吻”</a>。希望能够续订。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Text-2-Images/kiss.jpg" alt="“吻”"></p><ul><li><a href="https://movie.douban.com/subject/33386178/">麦克白的悲剧</a>，科恩兄弟之一的乔尔科恩导演的作品，也是个人比较喜欢的独立电影公司<a href="https://a24films.com/">A24</a>出品的电影。黑白复古风格，摄影构图让我爱不释手。莎翁的《麦克白》我自己并没有在之前读过，所以这算是我第一次看“麦克白”有关的作品，还是改编之后的，故事的观感个人感觉一般，台词也是类似于舞台剧本的古英语？但是影片散发的神秘感还是那浓浓的A24味道。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-4/the_tragedy_of_macbeth.png" alt="麦克白的悲剧-剧照"></p><ul><li><p><a href="https://movie.douban.com/subject/34825976/">白蛇传·情</a>。首部4K粤剧电影，好几年前看到预告片时就很期待。故事进度比较快，画面唯美，特效水墨风十足。真古典，新生命。</p></li><li><p><a href="https://movie.douban.com/subject/35206532/">异星灾变 第二季</a>。等于两年，第二季终于来了。当时冲着雷公老爷子的名号去看的，故事框架看上去还可以，可是第二季节奏过慢了，很多东西把人胃口吊得十足，不知道后面还能不能在把坑填完整的同时保持着宗教性，哲学性，未来学这样的基调。</p></li><li><p><a href="https://movie.douban.com/subject/35597581/">瑞克和莫蒂 第六季</a>。真希望能一年出一季啊。我也是才知道《瑞克和莫蒂》有漫画，等后面有空了要好好补补。</p></li><li><p><a href="https://movie.douban.com/subject/35109779/">外星也难民 第三季</a>。同是贾斯汀罗兰（瑞克和莫蒂的编剧之一）参与编剧的作品，感觉不如前两季好看了，尤其是“矮人国”。这一季同样是各种“美黑”，不少梗我难以get到，也难得去看解说了，权当是等《瑞克和莫蒂》更新期间拿来调节一下。</p></li><li><p><a href="https://movie.douban.com/subject/35118256/">赛博朋克·边缘行者</a>。2020年大热游戏<a href="https://www.cyberpunk.net/cn/zh-cn/">赛博朋克2077</a>的衍生动漫作品，时间线在游戏主人公V之前。风格和游戏很统一，故事非常浪漫，非常值得一看。</p></li><li><p><a href="https://movie.douban.com/subject/34825964/">龙之家族第一季</a>。《权力的游戏》衍生剧，讲的是”龙妈“的塔格利安家族由盛转衰的”血龙狂舞“的家族王位纷争的故事。第一季拍的还是很紧凑的，摄影和布景和《权力的游戏》无缝衔接，很值得一看。就是某些演员的选角感觉很迷，<a href="https://movie.douban.com/celebrity/1197648/">马特·史密斯</a>演的戴蒙每次出场都会让我出戏。好在演技都十分在线，HBO还是很稳的。</p></li><li><p><a href="https://movie.douban.com/subject/30222734/">吉尔莫·德尔·托罗的奇思妙想</a>。《铁甲钢拳》的导演”陀螺“制作的克式恐怖剧集，有些故事内容还不错，但是拍的差强人意。个人最喜欢是第七集”鉴赏会“（虽然剧情和节奏一言难尽…）,因为它确实把我整害怕了，san值狂掉。</p></li><li><p><a href="https://movie.douban.com/subject/34990593/">万神殿第一季</a>。”人类不在仰望星空，而是沉迷虚幻现实”，“科幻的尽头是爱”。一部涉及人类意识，数字化等主题的科幻动画剧集，华裔科幻作家刘宇昆编剧。作者将上载意识的人神华，几乎可以随意掌控人类的数字世界，比游戏里《赛博朋克2077》里的“黑客”玄幻太多。不过这可能是刘宇昆针对中西文化结合有意而为之，片头即可管中窥豹，供奉“神”的地方 从现实世界的古罗马转移到了云端。</p></li><li><p><a href="https://movie.douban.com/subject/4811774/">阿凡达2-水之道</a>。水下奇观叹为观止，虽然故事谈不上出色，但是电影里满满的细节，给我一种潘多拉真实存在，并且这部电影真的是在外星球拍的错觉。卡神的想象力和执行力确实是蓝星一流。</p></li><li><p><a href="https://movie.douban.com/subject/35118954/">子弹列车</a>。这电影挺有意思的，动作戏借鉴了成龙的风格，go-pro的物品视角和循环的“命运”主题总让我想起昆汀的《低俗小说》。皮特演这种角色挺好玩的，因为他本身看上去就很有“禅意”？看完我才发现这部戏的导演也是《John Wick》和《极寒之城》的导演，哈哈，有点意思。</p></li><li><p><a href="https://movie.douban.com/subject/35134230/">有史以来最棒的啤酒运送</a>。好哥们给他的在越南打仗的兄弟送美国啤酒，以显示家人和国家对他们的支持，并顺带随着主角心态的改变展示一些越战反思。这电影改编自真人真事，前半段有点幽默温情，最后小半部分，跟着罗素克劳扮演的战地记者，主角改变了既往对国家意志盲目信任的态度。这故事是个好故事，值得一看，拍的呢就像一篇优秀的应试作文，最后的反思也仅仅是升华而已，浅尝辄止，典型的好莱坞剧本。</p></li><li><p>漫威的剧集以及电影。自《复联4》之后漫威的作品都有点差强人意，这一年也有不少的扩展宇宙剧集和电影，看的我有点目不暇接，整体上只有<a href="https://movie.douban.com/subject/30331432/">《洛基第一季》</a>和<a href="https://movie.douban.com/subject/30331433/">《旺达幻世》</a>能拿得出手。风格上没有隔壁DC那样多元，在爆米花合家欢上越走越脱，很多我都是看UP主解说直接了解一下剧情。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-4/three_body.jpg" alt="三体插画"></p><p>今年看的书比去年稍多些，因为搬家的缘故，地铁通勤上的时间可以拿来看看列表里收藏的书。之前一直使用kindle阅读电子书，但是地铁上拿着kindle就没法很顺滑的用手机回消息，索性就丢下kindle转而用微信读书。用了几次之后，我还挺惊讶微信读书的藏书量的，虽然基本都是要会员卡之类的权限，好在每日阅读的时间可以兑换会员体验卡，因此也还凑合使用。今年看的书基本都是科幻小说，我也尝试在中间看一些其他类型的，比如《存在主义咖啡馆》这类哲学介绍书籍，《万历十五年》这类历史剖析书籍等，但是地铁停停顿顿的让我不太能安心看这些需要耐心和思考的书，所以后面我都挑的想看的科幻小说来看，只要故事线一直把握住就好。</p><ul><li><p><a href="https://github.com/openmlsys/openmlsys-zh">机器学习系统</a>是我从知乎上偶然看到推介去翻的，因为毕业之后一直在从事模型压缩，加速方面的工作，慢慢开始了解MLOps这样一个大的领域，所以也想找些资料来系统性学一学。这本书以华为的<a href="https://github.com/mindspore-ai/mindspore">MindSpore</a>为例，大致列出了现金AI框架设计上需要注意的问题，从数据处理，网络搭建的易用性和多扩展性，到静态图，动态图，AI编译器，分布式，部署等，涵盖的内容较为丰富，但是可能是因为要讲的东西太多，写的不算太好，很多东西浅尝辄止，我也权当一个介绍性的梳理大纲来看。</p></li><li><p><a href="https://book.douban.com/subject/2567698/">三体三部曲</a>。为了看电视剧而终于下定决心看完了这套科幻小说，个人最喜欢第二部。大刘的想象力着实丰富，但是故事我确实并没有特别喜欢，人物描写模版化，但具有典型性，比如叶文洁，第一部铺垫了许久，终于说清了她的动机，但是她最后也成了一个刽子手（这一点也比较突然），比较套路。整个故事都是从宏观上以第三人称来叙述，通过堆积一串串具象化的词语来做比喻，画面感十足，非常适合拍出来。看完这套小说给我最大的感受不是宇宙的冰冷和无限，也不是人类后来几百年的历史消亡，而是把自己的想法实现出来的软件工程的流程，就像你为了实现一个需求，定制大致的结构，一边写，遇到问题再构思解决，最红完成了一个精细的系统。我私下里也看了一些刘慈欣的访谈对程心的评价（毕竟这是我第三部里最关心的人物创作动机），他说，”傲慢和泛滥抽象的爱是种自私，写这个人就没想过让读者喜欢，这不是读者会喜欢的人。她其实很自私，但这种自私和普通的自私不一样，因为她自己觉察不到。遵循道德的人其实很自私，因为他们除了道德和良心什么都不管，程心恰恰就是一个这样的人。她会认为自己很崇高，认为自己不自私，认为自己的价值观和道德准则是普世的、正确的。至于遵循它会带来什么后果，她只考虑能不能让自己的良心得到平安。这种人有牺牲精神，能够为自己的价值观和道德准则牺牲生命，但这也不能改变他们自私的本质。在小说里，真正做到“大爱无仁”不自私的人，会从人类的整体去考虑，因为牺牲良心是最难的事情，比牺牲生命要难得多”。</p><p>大刘眼中的程心，两段采访的原文：</p><blockquote><p>从本质上说，程心不是一个人物，她是一个符号。<br>简单说来，程心就是正常环境下的一个很完美的人。如果把她放在正常环境下，而不是那种大灾难的环境下，你肯定不会觉得她讨厌，会觉得她很完美。<br>她在关键时刻做得每一个决定，都是我们正常人觉得好人在那个关键时刻要做出的决定，她做出的每一个决定都符合我们主流的道德价值观、符合我们的普世价值。<br>但恰恰是这一连串的、符合普世价值的决定把整个人类推向毁灭的深渊。<br>这是科幻小说的一种思想实验：它表明我们现在认为理所当然的某些东西，换一个环境和一个世界设定，它可能就变得不那么理所当然；有些我们认为很恒定的东西，会随着时间变化的，包括价值观、社会体制等等都会随着时间变化来适应当时的环境。</p></blockquote><p>腾讯原本7月计划播的电视剧后来不知因为什么原因迟迟没有消息，这版选角我还很满意的，很可惜。只能期待网飞的魔改版了。</p></li><li><p><a href="https://book.douban.com/subject/26362836/">献给阿尔吉侬的花束</a>。这是一部难得的让人看得心碎又深思的科幻小说。我很喜欢的一类科幻小说是那种在科幻背景包裹下的探讨人性，社会学，勾勒情感，唤起回忆的故事，像我之前推介的那些《银翼杀手》，《索拉里斯星》那样。科幻只是一层皮，叙述的内容都离不开人性，《献给阿尔吉侬的花束》就属于这类，不仅如此，这部小说篇幅不长，确让我在阅读时倍感难受，最后主角查理·高登的选择让我时时落泪。艾丽斯和查理的感情线也充满后劲。</p><ol><li>解构自己再也无法拼接回去。</li><li>日复一日的机械生活中似乎并不容易，无法像佛家中的日日是好日实现，开始变得无法交流，我仿佛变成了一个弱智，无法真正关心一切事物。</li><li>回忆是一件危险的事。</li><li>人的某个阶段，也会出现人格分裂似的经历，好像我不属于我，自己却很难认识到，这就是所谓的进化般的变化吗？</li></ol></li><li><p><a href="https://book.douban.com/subject/35330057/">未来学大会</a>。莱姆的代表作之一，故事短小精悍，细思极恐，大刘的《三体》应该借鉴了其中不少关于未来的想象。 整个故事可以说就是一团梦境，一个套一个或者说一个接一个（编辑：而仔细思量，“梦中梦”的说法也许并不确切，可能只是梦后梦，因为我们会记得第一个梦、第二个梦分别是怎么醒来的，但不会记得第一个梦是怎么进去的，因此实际情况可能只是第一个梦醒来后，接着做第二个梦，并没有严格的嵌套关系。电影《盗梦空间》里有这么一句相关解释：如果是在梦里，那你不会记得是怎样来到这地方的。从这个角度来看，本书的多重幻觉，可能也类似，一个幻觉醒来，才进入下一个幻觉，而并不是一层幻觉还没退出就进入下一层的嵌套关系。）。这里面最可怖的设定在于各种心化药丸，让人类分不清现实与梦境，让人沉迷一切都变得容易，甚至可以解决一切人类问题 （完全蒙蔽人类的大脑和精神），这种控制比机器控制更惨，肉体存在但是感觉、精神不在属于你自己，自然感觉和人工感受彻底错位。除此之外，莱姆还探讨了虚拟现实，心灵异化，情感计算，语言变异，世界对立等等符合逻辑的想象，总之非常值得一读。</p></li></ul><h3 id="结语">结语</h3><p>22年真的是“存在感”很低的一年，莫名其妙，稀里糊涂地就这么过去了。22年很难说过得充实，但起码很快乐，自从搬来和W一起住后，吃吃喝喝，每天都溜得很快，相互之间的陪伴和照顾也相互治愈彼此。不过有时候会觉得个人的时间变少，个人的空间被压缩，不像以前一个人生活那会可以在任意时刻做任意喜欢的事。倒不是说对方会束缚自己，只是这个问题应该是每个情侣都会遇到的问题，所以23年我得好好地去适应和调解，把时间充分利用上（毕竟自己有很多时候都是无所事事，犯懒）。</p><p>展览上，年初买了宝龙美术馆的《现代的脉动》的票，后来因为疫情没能去成，展览也取消了。后来疫情结束又看到有关印象派，毕加索之类的展览，也懒得去看了（参考去年去看的“遇见印象派的”的展览），我总觉得商业为太浓，博人眼球，实际的作品还是太少。以后可能多在网上看看云展览，看看美术历史的书籍介绍。</p><p>反正今年也是各种理由没有学琴，疫情啊，工作啊，犹豫着要不要买琴啊各种各样的借口，年底的时候和W商量着明年要不要一起去学乐器，她学吉他，我来学钢琴。反正明年疫情放开后应该没各种意外的限制了，也不好再拿各种借口，还是得行动起来才行。<br>画画的话，今年画的次数屈指可数吧，ipad也被冷落一旁，只是每周拿来充个电而已。况且下半年的text2image的惊人表现，让我对绘画作品的创作有了新的认识和想法，stable diffusion上各种<a href="https://densecollections.top/FunStuff/">无拘无束的风格和创意</a>，几秒生成的图像，让我自己慢慢摸索生成一个个主题的画册有了更便捷的方式。当然绘画还是会去兼顾一下，总之就是慢慢来吧🙃</p><p>现在和W一起生活，虽然个人的时间和空间会少了点，但是两个人一起走确实比一个人走要开心，坚实许多。疫情和工作让我们今年没法多出去转转，来年希望可以能多跑跑别的城市，陪她吃喝玩乐，也让自己有更多的机会远离尘嚣。</p><p>今年好歹多读了几本书，虽然基本都是科幻小说。我深感在这个世界的无力感，很多事情从古至今一直没有变过，为了更好地体验不同的生活，为了能保持自己独立思考的能力，为了能更好地认识世界，改变自己，还是要去多读书，多读不同领域，不同题材的书籍。我想起来前年脑袋一热买的“迅哥”全集，回首疫情期间各种各样“光怪陆离”的事情，现在看来“迅哥”应该都剖析了一遍。<strong>多看国学，多看长篇，多看不同类别的书，看迅哥，看尤利西斯，挑战自己。</strong></p><p>结束之前，照例来列一下23年计划要去做的清单（当然，做不做得到又是另一回事了…）：</p><ul><li>学琴！学琴！学琴！</li><li>多看看书</li><li>多出去走走，多摸摸相机</li><li>图画之类的事（画画or调教AI)继续下去</li></ul><p>最后，希望世界和平，希望人民幸福。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;Do not go gentle into that good night,                          不要温和地走进那个良夜,&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Old age should burn and rave at close of day;            白昼将尽,暮年仍应燃烧咆哮;&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Rage, rage against the dying of the light.                      怒斥吧,怒斥光的消逝。&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Though wise men at their end know dark is right,      虽然在白昼尽头,智者自知该踏上夜途,&lt;/strong&gt; 　　&lt;br&gt;
&lt;strong&gt;Because their words had forked no lightning they      因为言语未曾迸发出电光,他们&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Do not go gentle into that good night. 　                      不要温和地走进那个良夜。&lt;/strong&gt; 　　&lt;br&gt;
&lt;strong&gt;Good men, the last wave by, crying how bright            好人,当最后一浪过去,高呼着他们脆弱的善行&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Their frail deeds might have danced in a green bay,   本来也许可以在绿湾上快意地舞蹈,&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Rage, rage against the dying of the light.                       所以,他们怒斥,怒斥光的消逝。&lt;/strong&gt; 　　&lt;br&gt;
&lt;strong&gt;Wild men who caught and sang the sun in flight,         狂人抓住稍纵即逝的阳光,为之歌唱,&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;And learn, too late, they grieved it on its way,               并意识到,太迟了,他们过去总为时光伤逝,&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Do not go gentle into that good night.                            不要温和地走进那个良夜。&lt;/strong&gt; 　　&lt;br&gt;
&lt;strong&gt;Grave men, near death, who see with blinding sight   严肃的人,在生命尽头,用模糊的双眼看到&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Blind eyes could blaze like meteors and be gay,        失明的眼可以像流星般闪耀,欢欣雀跃,&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Rage, rage against the dying of the light. 　                  所以,他们怒斥,怒斥光的消逝。&lt;/strong&gt;　　&lt;br&gt;
&lt;strong&gt;And you, my father, there on the sad height,                而您,我的父亲,在生命那悲哀之极,&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Curse, bless, me now with your fierce tears, I pray.     我求您现在用您的热泪诅咒我,祝福我吧&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Do not go gentle into that good night.                            不要温和地走进那个良夜。&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Rage, rage against the dying of the light.                        怒斥吧,怒斥光的消逝。&lt;/strong&gt;&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;Dylan Thomas-Do not go gentle into that good night&lt;/strong&gt;&lt;/footer&gt;&lt;/blockquote&gt;
&lt;img src=&quot;https://images.unsplash.com/photo-1644691568805-fd9a88e0f057?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2664&amp;q=80&quot; style=&quot;zoom:33%;&quot;&gt;
&lt;h3 id=&quot;写在前面&quot;&gt;写在前面&lt;/h3&gt;
&lt;p&gt;我的童年一直都是在快乐中进行的，尽管我小时候做了不少家庭劳动。那会我从未有”疲惫“的概念，顶多开始认识到寂寞和孤独。上了中学以后，我和身边大多数人一样，埋头学习，阅读书籍，开始思索孤独，生命，生活之类的概念、意义和自身的命运。幸运的是，我那会还未真正地感受到宇宙的广袤和冰冷，乖乖地处于其他人的保护之中，我只是迫不及待地拿这些思索的结果，堆砌成供我炫耀吹嘘的资本，所以青少年时期过得很安稳，性格上也只是收敛了”吵闹“的元素。自高中之后，我情愿或不情愿般地走出了童年时期的小屋，疯狂地探索这个世界，涉猎各个领域，渐渐地也开始了自己有意识的”苦痛“之旅。同样地，外界的负反馈和压力也逐渐侵入到我的生活里。主观加客观的煎熬、折磨、失望等构成了苦痛的绝大部分，如果是伟人的话，或许可以据此创作出一些不错的作品出来，而我却只是举棋不定，自我消耗。&lt;/p&gt;</summary>
    
    
    
    <category term="纪录与总结" scheme="http://densecollections.top/categories/%E7%BA%AA%E5%BD%95%E4%B8%8E%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="summary" scheme="http://densecollections.top/tags/summary/"/>
    
    <category term="life" scheme="http://densecollections.top/tags/life/"/>
    
    <category term="reflections" scheme="http://densecollections.top/tags/reflections/"/>
    
  </entry>
  
  <entry>
    <title>2021-2022-走在人生的路口</title>
    <link href="http://densecollections.top/posts/Summaryofthisyear-3/"/>
    <id>http://densecollections.top/posts/Summaryofthisyear-3/</id>
    <published>2022-01-11T13:02:45.000Z</published>
    <updated>2022-09-09T03:30:59.483Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>细雨斜风作晓寒，淡烟疏柳媚晴滩。入淮清洛渐漫漫。</strong><br><strong>雪沫乳花浮午盏，蓼茸蒿笋试春盘。人间有味是清欢。</strong></p><footer><strong>苏轼</strong></footer></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/tree_1.jpg" alt="迷人的树，大部分都是在南京中山陵所拍"></p><p>近些年来，总是会觉得时间过得越来越快，一眨眼之间，自己期盼的日子就会到来，然后瞬间溜走，变成记忆中的录像带。自5月工作以来，21年就加快了流逝的步伐，生活中的酸甜苦辣，欢喜忧伤，焦躁迷茫都瞬间成了往事，当时的心情也慢慢不复存在。<strong>我也逐渐认识并重视起”时间“这个资源，开始要求自己去学会取舍，把时间花在刀刃上，充分并合理利用时间</strong>，把时间多多用在投资自己身上（当然也要陪陪家人），比如下班坚持抽出些时间”输入“（阅读，学东西，发展兴趣）和”输出“（写博客，写小说），对于那些不感兴趣，或者不擅长的，并且在工作生活中也可以不用具备的，可以不用非得花时间攻克，直接请专门的人做好了，比如做饭，打扫，”造轮子“等等。不过，目前只是有这个意识，想法和计划都不太成熟，也有待具体实施。</p><p>21年最大的变化就是离开校园，步入工作，同时加入了两个人一起生活的阵营∩▂∩。20年秋招不是很理想，一直想逃离”996“，于是21年1-3月都在积极投春招，最后终于赶上了末班车，拿到了Intel MLP部门的offer。不过也有点”病急乱投医“，糊里糊涂去里面做了模型加速的工作，从”黑盒“转到了”白盒“的方向，更偏向于系统开发。这大半年主要是在组内开发一个NLP模型intermediate representation graph转换和计算图融合优化的工作，虽然兴趣不大，但好歹工作量大部分都可以估量，所以中规中矩吧。21年另一个惊喜的变化则是认识了W，现在两个人在一起，很多兴趣，想法以及价值观都类似，虽然属于自己的时间变少了，但倒也很享受。</p><p>W自己养了一只小猫咪（美短），我以前也一直有工作之后养小动物的念头，不过刚工作那会那还没准备好，正好W给了我这个机会。听说猫咪是人类的好伙伴，可以察觉到人类的情绪变化，而且更是很多艺术家（比如村上春树，深濑昌久以及众多日本艺术家）的小“缪斯”？  其实我一直是喜欢狗多于猫的（不过之前也从没和一只猫认真生活过），和W生活的这几个月，慢慢地也和家里的小猫咪建立了联系和信任，现在蹲下来摸摸她，她也会主动敞开肚皮，就是胆子太小了，到现在都不愿意给我们长时间抱抱，哈哈。除了平时不听话（之前因为我的闯入导致焦虑还乱尿了一阵子），其他时候还是超级可爱的。●ω●</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/cat_1.jpg" alt="一只名叫“老大”的小猫咪"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog//Summaryofthisyear-3/cat.jpg" alt></p><h3 id="工作">工作</h3><p>一年前，我认为工作只是用来谋生的手段而已，后来经历了工作中遇到的各种事，慢慢地接受了“人是不能缺少工作”这样的结论，当然我这里说的工作应该不能包含那种重复的，机械的劳动，而是带着一些协作，挑战和鼓励个人主观能动性的那种。在Intel工作的大半年，我总结出自己需要注意的三点，<strong>一是吸收和思考，二是做好选择，三是合理规划。</strong></p><p>走出校园，进入工作，社会角色发生改变，加上自己身上的约束短暂的变少了一些，随后而来的则是更多无形的约束，各方的要求变高，对我们的忍耐性也降低，因此我需要在适应和试错中，提升自己的生活方式，悟出新的经验教训。当然，试错是需要很大成本的，所以我很愿意抓住机会听一些前辈的分享和分析，学习他们的思维和建议。在我有限的观察中，大部分愿意来公开做presentation的都是“积极入世”的 人，给的建议都是诸如管理时间，多阅读，多发展人脉，改变自己的认知方式，并积极付诸行动，那些相对“佛系”或者“随遇而安”，显得“不那么积极”的人，基本都是在偶然的情况下，聊得投机才会和我多说几句。这还是比较有趣的现象，当然，这都得自己积极主动，显得足够真诚才行，否则别人的建议也不一定能给的足够“可靠”。其实，听取建议也像是在观看他们讲演人的一部浓缩的半自传电影（说半自传可能是因为会给那时的故事添油加醋），这和我看电影一样，都是感受一个个不同的故事和人生，以此慢慢塑造和完善自己的认知。也有很多“故事”我是听了之后不久就忘了（对自己来说无价值），有些呢是属于知道（千万不要仅仅做一个”知道分子“，而是”知识分子“），但现在并不理解，这些就得随着实践来强化了。除此之外，平时也得多多反思总结，我目前在很多道理上只能意会，无法很流畅地归纳总结出来，这也还是不够的，要形成了自己的方法论，来指导自己。</p><p>第二个是选择，我们都知道，选择的好，可以让自己走很多弯路，甚至加速自己的成长。选择在很大程度上和自己的认知，得到的信息量，以及“投资风格”（激进，长线，等等）有关，目前来说我所关注的选择大部分上是和未来的经济有关，比如职业方向，技术路线，居住区域等等（选择什么样的生活我想我自己已经基本确定了）。认知呢，我目前只能通过阅读，多听，多想来提升；信息量呢是个很随机的东西，大概率得看有无贵人相助了；“投资风格”呢有点像自己的个人习性，这种东西无法评价，只能说各有利弊。当然选择只是一个手段，不能忽视自己的需求和喜好，最终都是要朝着自己喜欢的方向去的。</p><p>最后是合理的规划，细粒度的是对自己当下时间的把控和利用，粗粒度的是对自己的未来几年的规划，大跨度时间的模糊目标。这一点自己目前做的也不是很好，自律性还没那么强，有时候只是想虚度时光，发发呆，做些“无意义”的事。怎么说呢，还是得把握好属于自己的平衡吧。</p><h3 id="音乐-公开课">音乐&amp;公开课</h3><p>音乐方面，古典音乐计划还是没能很好推进下去（兴趣还是没培养起来），今年听歌听得太少过头了，而且也没发现几张不错的专辑，不知道是不是乐坛开始倒退了。公开课层面就更惨不忍睹了，很多课程都是开了个头，最后不了了之，一有时间就光打游戏，逛B站看短视频去了ㄟ(▔皿▔ㄟ)。22年真的要努力摆脱一些电子产品的沉迷。</p><h3 id="展览">展览</h3><p>今年在<a href="https://mp.weixin.qq.com/s/qhWLpx2z6l58DRxdwNIyyQ">金鹰美术馆</a>第一现场看了一些当代艺术的作品，想借着感受现代艺术对自己固有观念的冲击来暂时舒缓一下烦闷的情绪。美术馆那会也建不久，展品也不算太多，当时只看了《全景：世界的因缘际会》项目，努力让自己在四个板块的主题展览中窥见一些创作上的东西。这些艺术作品，或者说这类艺术作品，似乎愈发关注人的内心和精神状态，以及在整个生存环境下遭受到的挣扎、变异和回应，解构周围的生存环境，然后以一种别样的方式重塑。金鹰美术馆虽然不是很大，但是空间的布局恰好和内部的展品融合在了一起，似乎展品加上展览空间再加上观者本身，才真正地达到了它作为一个艺术品的身份。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/gallery-1.jpg" alt="方力钧的一幅版画，这也是我驻足观看最久的一个作品"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/gallery-4.jpg" alt="是不是有点像一个小小的地球村"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/gallery-2.jpg" alt="作品名为”一万年“，本次展出中个人最喜欢的作品，海和光都是我最喜欢的两种元素，很有美感"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/gallery-3.jpg" alt="喜欢这个单纯是因为摄影，并给照片赋予了故事和意义"></p><p>除了“全景”之外，当时还有一个名为“构成8号”的实验性质的小展览，是有关抽象派先驱人物<a href="https://artsandculture.google.com/entity/%E7%93%A6%E8%A5%BF%E9%87%8C%C2%B7%E5%BA%B7%E5%AE%9A%E6%96%AF%E5%9F%BA/m0856z?categoryId=artist&amp;hl=zh-CN">康定斯基</a>的同名代表作品，我突然想到了<a href="https://www.zhihu.com/question/20447604">罗斯科</a>，以后要是有机会能见到真迹就好了。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/Composition_8.jpg" alt="构成8号"></p><p>刚入夏那会来SH工作，正好西岸美术馆举办了<a href="https://www.thepaper.cn/newsDetail_forward_12479034">康定斯基的生涯回顾作品展</a>，非常开心能够见到真迹，毕竟抽象画对空间感的强调会比其他类型的画更多些，现场观赏和线下看图片的感觉是截然不同的。第一个模块是康定斯基对东亚艺术的兴趣以及从中寻求灵感的热情，其实有不少西方画家都对东亚艺术作品痴迷，最主要的观念可能在于人们创作的东西似乎更应该表情达意，并追求与其他形式作品的统一，譬如中国的写意山水画，基本不具备纪录的功能，而是创作者内心世界的反映。从展览上看下来，康定斯基的抽象艺术基本观念应该是“点线面”，其拥有缜密逻辑学背景（法律），所以画作看上去工整协调，整洁优雅，没有什么天马行空的内容。实际上康定斯基的抽象画我并不总是喜欢（个人最喜爱的是罗斯科的那种类型），但是他对色彩、色块的使用却让我非常难忘。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/Kandinsky_1.jpg" alt="康定斯基的油画习作"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/Kandinsky_2.jpg" alt="“歌”"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/Kandinsky_7.jpg" alt="“灰色之中”"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/Kandinsky_5.jpg" alt="“无题”，被认为是第一幅抽象画"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/Kandinsky_4.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/Kandinsky_3.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/Kandinsky_6.jpg" alt="康定斯基的调色板"></p><p>上海21年一年间全年都在展出印象派的作品，但是总打着莫奈的旗号，难免觉得有些“招摇撞骗”之嫌。自从上次在南京博物院只看到米开朗琪罗的《哀悼基督》的复制品之后，我就不再抱有在国内看到大师作品真迹的希望了。2022年年初，为了弥补和W在21没能一起看展的遗憾，所以特地选了“遇见博物馆”的“遇见印象派”展览。</p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/impressionism_ticket.jpg" alt="展览门票" style="zoom:10%;"><p>近年来，随着看展览的次数增多，自己的观赏心境和角度也在慢慢发生变化。在这一次的观摩里，我主要尝试着去分析，学习画家描绘的角度，使用的色彩，表达的情绪，以及画法或者说表现上的一些创新等等（毕竟去年给自己定了目标要开始好好学画画，还特地买了Ipad和procreate，结果也没能好好坚持下来， (✖╭╮✖)， 这是后话了）。当然这种分析目前也是比较naive的，不成熟的，都是从直觉上，一眼看上去上给的反馈，还没有认真学习一些正规的，学院派的一些技法和知识，这等后面慢慢积累吧。</p><p>展览中一些个人比较喜欢的作品：</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/impressionism_3.jpg" alt="鲜艳的色彩，照片的质感，勾起回忆"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/impressionism_4.jpg" alt="其实感觉像比较“普通”的风景画啦，但是这个颜色使用和之间的层次感还是蛮不错的，多看看以指导我学习后面的画画"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/impressionism_5.jpg" alt="这幅画看上去有种“纸质书插画”的感觉，明朗的线条感，角度也很有意思"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/impressionism_6.jpg" alt="这幅画印象感很足了，又有点抽象派的意思，虽然看得出是个桥"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/impressionism_7.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/impressionism_9.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/impressionism_8.jpg" alt="莫奈的画只出现这一幅，虽然失望但也做好心理准备了"></p><h3 id="摄影与游记">摄影与游记</h3><p>很久就想去海边看看，因为我一直觉得海是我们最后的归宿，不管是肉体还是灵魂。她纯净，神秘，热烈宁静又凶猛，彷佛包含了所有生物的情感和记忆。之前看的《索拉里斯星》又让我看到了永恒的无限可能性。不过说了这么多矫情的话，现阶段看海倒只是像追求一丝慰藉，让无边无际的海水冲淡所有的忧愁和苦痛。正好今年借着毕业和工作的那段空闲时间，和朋友一同去了舟山群岛，烟台，蓬莱和威海，几天时间逛了东海，黄海和渤海，过足了瘾。</p><p>舟山:</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/year_shot_2.jpg" alt> <img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/year_shot_3.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/year_shot_1.jpg" alt></p><p>烟台:</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/year_shot_4.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/year_shot_6.jpg" alt></p><p>威海:</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/year_shot_12.jpg" alt></p><p>蓬莱:</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/year_shot_5.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/year_shot_7.jpg" alt="黄海，渤海交界处"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/year_shot_8.jpg" alt></p><p>另外年中搬来上海，参加工作，闲暇之余拍的一些照片：</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/year_shot_9.jpg" alt="浦东美术馆,和W一起在黄浦江边散步,傍晚看的景色,落日和晚霞倒印在美术馆的玻璃墙上,甚是好看"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/year_shot_10.jpg" alt="这个其实是W拍的水纹般的云啦,我也很喜欢,如果有胶卷的话可以弄个双重曝光,梦幻的感觉就更浓了"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/year_shot_11.jpg" alt="崇明岛的日出,正好是1.1日,同好友们一大早爬起来迎接新的一年,可惜是多云天气,太阳出来一会就躲进云层了,不过好歹出来之时分外好看,也不枉我们站在那里瑟瑟发抖地等了好一会"></p><p>现在自己拍摄的内容基本都是以景为主，所以暂时就把摄影和游记放一起写了。在人像摄影上，自己几乎处于空白状态（主要是自己放不开 ⊙_⊙），有时候拍人的角度过于“刁钻”，比较难看，也被W嘲笑了很久。所以今年也买了一些人像画册，继续看看一些<a href="https://space.bilibili.com/451150087">尾麦</a>老师和其他人像摄影UP主作品展示的视频，希望2022年能有进一步的探索与进步。</p><h3 id="书-话剧-电影">书/话剧/电影</h3><p>今年最遗憾的事就是书读得太少了，只在毕业之前无聊时花一个下午读了一本。而后不管是闲暇时光还是工作之余都没能耐下心来读读kindle里面的书，尤其是那本林语堂的《苏东坡传》，来来回回快有两年了，一般都还没读到，实在是惭愧。 (⊙﹏⊙✿)。以后每年都得提前准备好列个书单，比如包含文学，社科，经济，科技和历史，然后和W一起错开来看，这样也可以相互监督和交流。</p><p><a href="https://book.douban.com/subject/26367364/">爱吃沙拉的狮子</a>是村上春树的一个小随笔集，《大萝卜和难挑的鳄梨》的姊妹篇，都这个单纯是为了了解村上这个人，充满奇思妙想和童心，插科打诨中也能看到一个大叔对生活的经验之谈，蛮有意思的。</p><blockquote><p>​        于是，午后一点左右在沙发上躺下，有一搭没一搭地听着舒伯特的弦乐五重奏，心中感谢人生：”啊，今天也安然无恙，心灵没受伤，好像可以舒舒服服地睡个午觉，太好啦。“</p><p>​        我觉得，好像年纪轻轻时越是四处碰壁，被社会打击得遍体鳞伤，等到上了年纪，就越快活自在。假如遇上烦心事，就盖好被子呼呼大睡。不管怎么说，这都是最好地对策，加油干吧。</p></blockquote><p>来上海之后真正感受到了城市艺术资源的丰富，话剧，或者是舞台剧上的展演层出不穷，但是一些优秀的剧也是一票难求。秋中那会应朋友L的提议，第一次去看了开心麻花的舞台剧<a href="https://www.douban.com/location/drama/34868527/">贼想得到你</a>，讲的是一群骗子和盗贼围绕抢劫伯明翰银行的大钻石而展开的冲突不断的故事。舞美布景都很不错，后半段渐入佳境，有几处确实很好笑，倒是应了票根上的那句话“上班压力大，下班看麻花”。唯一觉得美中不足的是密集的社会梗，有些似乎看起来毫无意义，这样可能会冲淡了戏本身的连贯性和后劲。不过喜剧本来也不是冲着教育的主题去的，就是图一乐，这是最大的目的。</p><p>21年也有一些比较出圈的舞台剧，像是<a href="https://www.douban.com/location/drama/35368474/">隐秘的角落</a>，<a href="https://www.douban.com/location/drama/35368473/">沉默的真相</a>，<a href="https://www.douban.com/location/drama/35403910/">摇滚浮士德</a>等等，不过我对悬疑的剧现在基本无感了，已经审美疲劳了，基本也都没去看。另外像孟京辉的<a href="https://www.douban.com/location/drama/3167344/">《恋爱的犀牛》</a>，赖声川的<a href="https://www.douban.com/location/drama/5993288/">《暗恋桃花源》</a>等经典剧目，由于不是自己特别喜欢的阵容，所以即使一票难求，也能想着去抢票看，毕竟从某种程度上说，剧本和演员是相互成就的，我也就有空看看录像，“拌着”NT LIVE的舞台剧一起看。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/movies_1.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-3/movies_2.jpg" alt></p><p>说来凑巧，今年的影视剧啥的看的也少了，看来真的是工作对自己的影响太大了，接下来得要好好调整才行（虽然已经在努力调整过一次了）。主要来说，今年看的基本都是热门的作品，也有一些是以往的老作品（基本也是照着豆瓣TOP来，害），我挑了一些个人觉得还可以的，大部分热门作品，像<a href="https://movie.douban.com/subject/30228394/">觉醒年代</a>，<a href="https://movie.douban.com/subject/35033654/">山海情</a>，<a href="https://movie.douban.com/subject/34988709/">九号秘事第六季</a>，<a href="https://movie.douban.com/subject/30458949/">无依之地</a>， <a href="https://movie.douban.com/subject/30337388/">失控玩家</a>， <a href="https://movie.douban.com/subject/33407124/">浪客剑心-最终章</a> ，<a href="https://movie.douban.com/subject/26741632/">X特遣队</a>就不必多说了，下面简单聊聊其他的。</p><p><a href="https://movie.douban.com/subject/30191791/">哈姆雷特-莫娘版</a>，撕心裂肺的一版，这也是我第一次看哈姆雷特的整个故事，情绪充沛，台词激烈，布景配乐啥的都很到位。后面再和奥利弗、卷福版本的对比着看看。</p><p><a href="https://movie.douban.com/subject/1302827/">人工智能</a>，结尾被斯皮尔伯格处理得如此温情，令人动容，不知道如果是库布里克做的完整版会是什么样的结局。</p><p><a href="https://movie.douban.com/subject/34446269/">万物生灵</a>，根据吉米·哈利的小说<a href="https://book.douban.com/subject/4187411/">万物有灵且美</a>改编，不管是小说还是电视剧都非常治愈。远离喧嚣，在大片绿油油的农场上照顾小动物，和一群淳朴的人交往。</p><p><a href="https://movie.douban.com/subject/30450313/">前程似锦的女孩</a>，这部电影完全是因为<a href="https://www.douban.com/personage/27230876/">凯瑞·穆里根</a>扮演才去看的，故事是关于一位受过伤的女人复仇男人的故事，但是剧情并不像爽文一样刺激暴力，结局挺悲惨的，正如英文名“Promising Young Woman ”，带有的讽刺意味。</p><p><a href="https://movie.douban.com/subject/1477916/">心理游戏</a>，<a href="https://movie.douban.com/celebrity/1274339/">汤浅政明</a>的一部动画电影，故事比较“奇特”，视觉冲击也很强，但是我第一次看，并没有看懂其中的意义。之前因为看了<a href="https://movie.douban.com/subject/26997470/">恶魔人</a>而对他有比较大的印象，21年会多找些相关作品看看。</p><p><a href="https://movie.douban.com/subject/1295742/">洛奇系列</a>，虽然是拳击，但是讲的是男人对于家庭，自己的认知和责任。“镜子中的里是你最大的敌人”，朴素的故事，朴素的台词，但是有着动人的，无穷的力量。</p><p><a href="https://movie.douban.com/subject/35231889/">戏剧新生活</a>，21年最惊喜的综艺了，可以让戏剧爱好者真正地看到国内戏剧工作者的创作和生存环境，综艺中无不体现出戏剧人对自己事业的热爱，里面的几出短剧也是颇具风采。非常期待能看到后续几季的出现，但是还没看到消息，这样的内容在国内可能还是太小众了些。</p><p>总体来说，21年看的作品应该是“有史以来”最少的了，可能是因为在慢慢适应工作，调整状态的缘故，“好的作品是我生活和探索的养料”，22年希望能够慢慢恢复过来。</p><hr><h3 id="结语">结语</h3><p>21年是我人生的一个转折点，慢慢开始成家立业，走向三十而立。21年告别了许多人，也结交了很多不错的朋友，“每个人只能陪你走一段路”，在我开心或者忧愁的时候都有一些很好的朋友陪我一起度过，这也算是我人生的幸事。未来的三到五年，希望自己可以保持前进和学习的心态，拒绝油腻，并且多多关注身边的人和事。</p><p>翻翻去年定的计划，只有2和4做到了，5和6只是短暂的开了个头，1和3基本是没什么进展，看来对自己的预估还是不太准确。22年的计划与去年差不多，慢慢地适应了工作，也希望自己可以多利用起空余时间，好好“投资”自己。</p><ol><li>多读书，多读书，多读书！列出的书单可以读完70%以上；</li><li>继续学procreate数字绘画，好好临摹，熟能生巧；</li><li>规划好自己的职业领域和方向；</li><li>多看展，多看话剧，无论是线上或线下；</li><li>报班继续钢琴，这个大概率随缘了＋▂＋ ；</li><li>锻炼身体（游泳和打羽毛球），增强自律性；</li></ol><p>做好规划，充实自己，享受生活，关心他人，22年也要多多成长才好。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;细雨斜风作晓寒，淡烟疏柳媚晴滩。入淮清洛渐漫漫。&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;雪沫乳花浮午盏，蓼茸蒿笋试春盘。人间有味是清欢。&lt;/strong&gt;&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;苏轼&lt;/strong&gt;&lt;/foot</summary>
      
    
    
    
    <category term="纪录与总结" scheme="http://densecollections.top/categories/%E7%BA%AA%E5%BD%95%E4%B8%8E%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="summary" scheme="http://densecollections.top/tags/summary/"/>
    
    <category term="life" scheme="http://densecollections.top/tags/life/"/>
    
    <category term="reflections" scheme="http://densecollections.top/tags/reflections/"/>
    
    <category term="balance" scheme="http://densecollections.top/tags/balance/"/>
    
  </entry>
  
  <entry>
    <title>KK给年轻人的建议</title>
    <link href="http://densecollections.top/posts/kk-suggestions-for-young/"/>
    <id>http://densecollections.top/posts/kk-suggestions-for-young/</id>
    <published>2021-05-10T12:15:18.000Z</published>
    <updated>2022-09-09T03:29:41.476Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://kk.org/thetechnium/99-additional-bits-of-unsolicited-advice/">原文链接</a></p><p><a href="https://kk.org/about-me">KEVIN KELLY</a></p><p><a href="https://mp.weixin.qq.com/s/jVoZ_zWOyFj9TdF29P_OTA">阮一峰的网络日志</a></p><p>翻译有参考<a href="https://zxs.io/article/1819">此处</a></p><ol><li>That thing that made you weird as a kid could make you great as an adult — if you don’t lose it. 在孩童时期，那些让你看上去与周围人格格不入的部分，以后可能让你在成年人中脱颖而出—前提是你没有丢失它们。</li><li>If you have any doubt at all about being able to carry a load in one trip, do yourself a huge favor and make two trips. 如果你对自己一次旅行能够承载的重量有任何疑虑，那就请帮自己变成两次旅行。-- 如果你对自己是否能一次搞定怀有任何疑虑的话，就对自己好点，分两次搞定吧。</li><li>What you get by achieving your goals is not as important as what you become by achieving your goals. At your funeral people will not recall what you did; they will only remember how you made them feel. <strong>实现目标后得到什么并不重要，重要的是你变成了什么样子。在你的葬礼上，亲友们不会回忆你做了什么，而是仅仅记住了对你的感觉。</strong></li><li>Recipe for success: under-promise and over-deliver. <strong>成功的秘诀是：少承诺，多交付。</strong>（废话少说，直接开干）</li><li>It’s not an apology if it comes with an excuse. It is not a compliment if it comes with a request. 带有借口的就不是致歉，带有请求的就称不上赞美。</li><li>Jesus, Superman, and Mother Teresa never made art. Only imperfect beings can make art because art begins in what is broken. <strong>耶稣，超人和特蕾莎修女从未创造过艺术，只有不完美的人才能创造艺术，因为艺术始于破碎的世界。</strong>（譬如痛苦是创作的源泉，之前种种苦难的经历造就了许多大师）</li><li>If someone is trying to convince you it’s not a pyramid scheme, it’s a pyramid scheme. 如果有人试图让你相信这不是传销，那它肯定就是传销。</li><li>Learn how to tie a bowline knot. Practice in the dark. With one hand. For the rest of your life you’ll use this knot more times than you would ever believe. 学会怎样去打套结，在黑暗中练习，用一只手练习，因为在你的余生中你将用到这个结很多次，多到你自己都不敢相信。（熟练基础，简单的技巧，形成肌肉记忆？）</li><li>If something fails where you thought it would fail, that is not a failure. 如果某件事在你认为它可能会失效的地方失效了，那就不算失败。</li><li>Be governed not by the tyranny of the urgent but by the elevation of the important. 不要被紧急的事统治，而是跟着重要的程度走。–不要被紧迫性的专横牵着鼻子走，做事应该要基于对重要性的评估。</li><li>Leave a gate behind you the way you first found it. 你穿过的门原来是什么样子，走过去以后也要保持那个样子。</li><li>The greatest rewards come from working on something that nobody has a name for. If you possibly can, work where there are no words for what you do. 最大的回报来自那些工作于无法命名的事情上，如果可以的话，就去做哪些难以用言语形容的事情上。（新的领域，不要扎堆？）</li><li>A balcony or porch needs to be at least 6 feet (2m) deep or it won’t be used. 阳台，门廊那样的东西必须得有2m深，否则是不可能被用上的。（德要配位？）</li><li>Don’t create things to make money; make money so you can create things. The reward for good work is more work. 不要为了赚钱而创造东西，而是为了创造东西而赚钱，干得不错的奖励是更多随之而来的工作。</li><li>In all things — except love — start with the exit strategy. Prepare for the ending. Almost anything is easier to get into than out of. <strong>所有的事情–除了爱，都是从退出策略开始的，要为事情的结局做好准备，几乎任何事都是进去比出来要容易。</strong></li><li>Train employees well enough they could get another job, but treat them well enough so they never want to. 训练你的雇员足够好以至于他们可以找到另一份工作，但是又要对他们足够好以至于他们不想去换工作。</li><li>Don’t aim to have others like you; aim to have them respect you. <strong>你的目标不是让别人喜欢你，而是让别人尊重你</strong>。（不可能每个人都喜欢你，比如利益冲突，但是他们依然可以尊敬你）</li><li>The foundation of maturity: Just because it’s not your fault doesn’t mean it’s not your responsibility. 成熟的基础是：不是你的错但不意味着不是你的责任。</li><li>A multitude of bad ideas is necessary for one good idea. 好的想法是从大量的坏主意中产生的，并不会“拍之即来”。</li><li>Being wise means having more questions than answers. 变得睿智意味着有更多的疑问，而不是解答。</li><li>Compliment people behind their back. It’ll come back to you. 多在别人背后赞扬别人，赞扬也会来到你身边（尊重与发现别人的闪光点，不要咄咄逼人）。</li><li>Most overnight successes — in fact any significant successes — take at least 5 years. Budget your life accordingly. 大多数一夜之间的成功–实际上任何重大的成功，–都需要花费至少5年的时间。因此相应地给你自己的生活做好预估，规划你的人生。</li><li>You are only as young as the last time you changed your mind. <strong>只要能够改变你自己的头脑，你就可以永远保持年轻。</strong></li><li>Assume anyone asking for your account information for any reason is guilty of scamming you, unless proven innocent. The way to prove innocence is to call them back, or login to your account using numbers or a website that you provide, not them. Don’t release any identifying information while they are contacting you via phone, message or email. You must control the channel. 假设任何人以任何理由询问你的帐户信息都犯了诈骗罪，除非被证明是无辜的。 证明清白的方法是给他们回电，或者使用你提供的号码或网站登录你的帐户，而不是他们。 当他们通过电话、消息或电子邮件与你联系时，不要透露任何身份信息。 你必须控制住你自己的这些东西和主动权。</li><li>Sustained outrage makes you stupid. 永不消停的愤怒只会让你变得愚蠢。</li><li>Be strict with yourself and forgiving of others. The reverse is hell for everyone. 严于律己，宽以待人，否则的话对任何人来说都会饱受地狱之苦。</li><li>Your best response to an insult is “You’re probably right.” Often they are. 对侮辱攻击的最好回应就是“你或许是对的”。通常他们确实是对的（哈哈）。</li><li>The worst evils in history have always been committed by those who truly believed they were combating evil. Beware of combating evil. <strong>历史上最严重的罪恶总是由那些真正相信他们在与邪恶作斗争的人所犯。 与邪恶作斗争时你自己要保持好清醒。</strong> （can’t agree more. 留心自己打击罪恶的想法）</li><li>If you can avoid seeking approval of others, your power is limitless. <strong>如果你可以避免寻求他人的认可，那么你的潜力是不可限量的。</strong></li><li>When a child asks an endless string of “why?” questions, the smartest reply is, “I don’t know, what do you think?” 当一个孩童持续不断地问你“为什么”的时候，最为明智的回复是”我不知道，你觉得该是什么呢？“</li><li>To be wealthy, accumulate all those things that money can’t buy. 想要变得富有，就去不断积累那些金钱买不到的东西。</li><li>Be the change you wish to see. <strong>做出那些你乐意看到的改变。</strong></li><li>When brainstorming, improvising, jamming with others, you’ll go much further and deeper if you build upon each contribution with a playful “yes — and” example instead of a deflating “no — but” reply. 头脑风暴、即兴以及与其他人合奏的时候，如果你可以充满兴致地表示「是的，而且……」并愿意在彼此的基础上更进一步，而不是令人泄气地表示「不是，而是……」的话，那么你将会走得更远更深。</li><li>Work to become, not to acquire. 努力成为，而不是获得。</li><li>Don’t loan money to a friend unless you are ready to make it a gift. 不要把钱借给朋友，除非你准备好把它当作礼物。</li><li>On the way to a grand goal, celebrate the smallest victories as if each one were the final goal. No matter where it ends you are victorious. 在通往宏伟目标的道路上，庆祝最小的胜利，就好像每一场胜利都是最终目标一样。 无论结局如何，你都会是胜利者。</li><li>Calm is contagious. 沉着冷静是会感染他人的。</li><li>Even a foolish person can still be right about most things. Most conventional wisdom is true. <strong>即使是一个愚蠢的人，在大多数事情上仍然是正确的。 大多数传统的经验智慧都是正确的。</strong></li><li>Always cut away from yourself. 切东西的时候不要冲着自己。（做好防范措施，不要伤害到自己）</li><li>Show me your calendar and I will tell you your priorities. Tell me who your friends are, and I’ll tell you where you’re going. 给我看你的日历，我会告诉你你的优先事项。 向我介绍你的朋友，我会告诉你你将要去向何方。（从自己的周边事物反思自己的属性？）</li><li>When hitchhiking, look like the person you want to pick you up. 搭便车时，让自己表现得像那种你愿意让他搭便车的人。</li><li>Contemplating the weaknesses of others is easy; contemplating the weaknesses in yourself is hard, but it pays a much higher reward. 注意到别人的缺点很容易，注意到自己的缺陷却很难，但是做成了就能带来不小的回报。</li><li>Worth repeating: measure twice, cut once. 值得重复说的是：两次测量，一次切断。（也就是说反复确认，下定决心之后就毫不犹豫地执行。）</li><li>Your passion in life should fit you exactly; but your purpose in life should exceed you. Work for something much larger than yourself. <strong>你对生活的热情应该恰到好处； 但你的人生目标应该超越你自己。 为那些比自己宏大得多的事情工作</strong>。（享受当下，不满足于现在的成就，不断追求进步）。</li><li>If you can’t tell what you desperately need, it’s probably sleep. 如果你不知道你迫切的想要什么，那么很可能你现在需要的是睡眠。</li><li>When playing Monopoly, spend all you have to buy, barter, or trade for the Orange properties. Don’t bother with Utilities. 玩《大富翁》的时候，把你所有的钱都用来购买、交换或交易橙色物业。不用管那些公共设施。</li><li>If you borrow something, try to return it in better shape than you received it. Clean it, sharpen it, fill it up. 如果你借了什么东西，记得清洁、打磨和填充它，让它在被归还的时候显得比你借到时的样子更好。</li><li>Even in the tropics it gets colder at night than you think. Pack warmly. 即使在热带地区，晚上的气温也比你想象的要凉。记得裹得暖和一点。</li><li>To quiet a crowd or a drunk, just whisper. 想要让人群或醉汉安静下来的话，只需要小点声说话就行。</li><li>Writing down one thing you are grateful for each day is the cheapest possible therapy ever. 每天写下一件让自己感恩的事情，就是最便宜的治愈之法。</li><li>When someone tells you something is wrong, they’re usually right. When someone tells you how to fix it, they’re usually wrong. 当有人告诉你某件事是错的时候，他们通常都是对的。当有人告诉你如何解决这个错误的时候，他们通常都是错的。</li><li>If you think you saw a mouse, you did. And, if there is one, there are more. 如果你觉得你看到了一只老鼠，那么你肯定就是看到了。而且，如果有一只的话，实际上会有更多。</li><li>Money is overrated. Truly new things rarely need an abundance of money. If that was so, billionaires would have a monopoly on inventing new things, and they don’t. Instead almost all breakthroughs are made by those who lack money, because they are forced to rely on their passion, persistence and ingenuity to figure out new ways. Being poor is an advantage in innovation. 金钱被高估了。真正新鲜的事物很少会需要很多钱。不然的话，百万富翁们应该早就垄断了对新事物的发明了，但他们并没有。相反，几乎所有的突破都来自那些缺钱的人，因为他们被迫不得不依靠自己的热情、坚持与才智，去找到新的方法。贫穷是创新上的优势。</li><li>Ignore what others may be thinking of you, because they aren’t. 请忽视别人对你的看法，因为他们压根就没在想你。</li><li><strong>Avoid hitting the snooze button. That’s just training you to oversleep. 尽量别老是贪睡，因为久而久之你就会睡过头。</strong></li><li><strong>Always say less than necessary. 言多必失</strong></li><li>You are given the gift of life in order to discover what your gift ‘in’ life is. You will complete your mission when you figure out what your mission is. This is not a paradox. This is the way. 你得到的生命这份馈赠，是为了让你发现自己生命中的天赋。你的使命就是找到自己的使命是什么。这不是一个悖论，这才是正途。</li><li>Don’t treat people as bad as they are. Treat them as good as you are.    不要睚眦必报，而要以德服人。</li><li>It is much easier to change how you think by changing your behavior, than it is to change your behavior by changing how you think. Act out the change you seek. 通过改变行为来改变想法要比通过改变想法来改变行为更加容易，要尽快付出行动去实现你想做出的改变。</li><li>You can eat any dessert you want if you take only 3 bites. <strong>你可以去吃任何甜品，如果你能控制只吃三口的话</strong>。（自律，控制自己）</li><li>Each time you reach out to people, bring them a blessing; then they’ll be happy to see you when you bring them a problem. 每次联络别人的时候，别忘了带给他们祝福，这样当你给他们带来麻烦时他们就不会对你厌烦。</li><li>Bad things can happen fast, but almost all good things happen slowly. 好事不出门，坏事传千里。</li><li>Don’t worry how or where you begin. As long as you keep moving, your success will be far from where you start. 不要担心你是从哪里或者如何开始的，只要你保持前行，成功就会离你更近一步。</li><li>When you confront a stuck bolt or screw: righty tighty, lefty loosey. 当你面对一个拧不动的螺栓或螺丝钉的时候：右转是拧紧，左转是拧松。</li><li>If you meet a jerk, overlook them. If you meet jerks everywhere everyday, look deeper into yourself. 如果你碰到一个混蛋，忽略他就好，如果你老是遇到混蛋，那你最好仔细审视你自己。</li><li>Dance with your hips. 用臀部来跳舞。</li><li>We are not bodies that temporarily have souls. We are souls that temporarily have bodies. 我们不是短暂拥有灵魂的躯体。我们是短暂拥有躯体的灵魂。</li><li>You can reduce the annoyance of someone’s stupid belief by increasing your understanding of why they believe it. 一些人拥有的愚蠢的信仰会让你恼怒，但是你可以提高对他们为何相信的原因的理解来减少自己的恼怒。</li><li>If your goal does not have a schedule, it is a dream. 如果你的目标没有时间表，那它就只是一个梦想。</li><li><strong>All the greatest gains in life — in wealth, relationships, or knowledge —come from the magic of compounding interest — amplifying small steady gains. All you need for abundance is to keep adding 1% more than you subtract on a regular basis. 生活中所有最重要的收益——财富、关系或知识——都来自复利可以放大稳定微小收益的魔法。你只需不断稳定地净增1%，就可以达到富足。</strong></li><li>The greatest breakthroughs are missed because they look like hard work. 人们之所以会错过最伟大的突破，就是因为它们看上去就很难。</li><li><strong>People can’t remember more than 3 points from a speech. 人们在演讲中能记住的点不超过3个。</strong></li><li><strong>I have never met a person I admired who did not read more books than I did.  我遇到的那些让我钦佩的人，无一例外都比我读的书多。</strong></li><li><strong>The greatest teacher is called “doing”. 最好的老师就是「行动」。</strong> （在经历和教训中学习并提升自我）</li><li>Finite games are played to win or lose. Infinite games are played to keep the game going. Seek out infinite games because they yield infinite rewards. 有限的游戏是为了输赢。无限的游戏是为了让游戏继续。应该去寻找无限的游戏，因为它们会产出无限的收益。</li><li>Everything is hard before it is easy. The day before something is a breakthrough, it’s a stupid idea. 任何事情在变容易之前都是困难的。在某个东西达到突破之前，它都只是来自一个愚蠢的想法。</li><li>A problem that can be solved with money is not really a problem. 能用钱解决的问题，都不是真的问题。</li><li><strong>When you are stuck, sleep on it. Let your subconscious work for you. 如果你被困住了，去睡一觉。让你的潜意识来帮你解决问题。</strong></li><li><strong>Your work will be endless, but your time is finite. You cannot limit the work so you must limit your time. Hours are the only thing you can manage. 你的工作是无穷无尽的，但你的时间是有限的。你无法限制你的工作，所以你必须限制自己的时间。时间是你唯一可以管理的东西。</strong> （rare and valuable)</li><li><strong>To succeed, get other people to pay you; to become wealthy, help other people to succeed. 想要成功，就让别人付钱给你；想要富有，就去帮助别人成功。</strong> （创业的逻辑？）</li><li>Children totally accept — and crave — family rules. “In our family we have a rule for X” is the only excuse a parent needs for setting a family policy. In fact, “I have a rule for X” is the only excuse you need for your own personal policies. 孩子完全接受——甚至渴望——家规。「在我们家，我们对 X 有一个规矩」是家长设立家庭规范时所需的唯一理由。事实上，「我对 X 有一个规矩」是你给自己设定规范所需的唯一理由。</li><li>All guns are loaded. 所有的枪都上了膛。</li><li>Many backward steps are made by standing still.很多退步都来自停步不前。（逆水行舟，不进则退。）</li><li>This is the best time ever to make something. None of the greatest, coolest creations 20 years from now have been invented yet. You are not late. 现在是去创造一些东西的最好时机。未来 20 年最伟大、最酷的发明都还没有出现。你现在做（入场）并不晚。</li><li>No rain, no rainbow. 不经历风雨，怎么见彩虹。</li><li><strong>Every person you meet knows an amazing lot about something you know virtually nothing about. Your job is to discover what it is, and it won’t be obvious. 你遇见的每一个人，都对某些你一无所知的东西了如指掌。你要做的就是去发现那是什么东西，当然那并不会很明显。</strong> （从每个人身上学习， 三人行必有我师焉）</li><li>You don’t marry a person, you marry a family. 和你结婚的，不只是一个人，而是一个家庭。</li><li><strong>Always give credit, take blame. 永远要分享荣誉，承担责备</strong>。（有福同享，有难我扛）</li><li>Be frugal in all things, except in your passions splurge. 永远保持节俭，除非是为了自己的热情。</li><li><strong>When making something, always get a few extras — extra material, extra parts, extra space, extra finishes. The extras serve as backups for mistakes, reduce stress, and fill your inventory for the future. They are the cheapest insurance. 做东西的时候，总要多备上一些——额外的材料、额外的部件、额外的空间、额外的饰面。 这些额外的东西可以为错误提供备份、减轻压力，还可以为未来储备资源。它们是最便宜的保险。</strong></li><li>Something does not need to be perfect to be wonderful. Especially weddings. 有些东西不需要达到完美，就已经足够精彩了。特别是婚礼。</li><li><strong>Don’t let your email inbox become your to-do list. 不要让你的收件箱变成代办清单。</strong></li><li>The best way to untangle a knotty tangle is not to “untie” the knots, but to keep pulling the loops apart wider and wider. Just make the mess as big, loose and open as possible. As you open up the knots they will unravel themselves. Works on cords, strings, hoses, yarns, or electronic cables. 打开纠缠在一起的绳结的最好方法，不是要去「解开」绳结，而是要不断地把松动的部分拉得更宽。尽可能把那团乱麻弄大、弄松、弄开。当你打开绳结的时候，它们就会自行解开。这招适用于绳索、线、软管、毛线或者电线。</li><li>Be a good ancestor. Do something a future generation will thank you for. A simple thing is to plant a tree. 做一个良善的先人。做一些让未来世代感激你的事情。其中一件简单的事情就是去种一棵树。</li><li><strong>To combat an adversary, become their friend. 要想打败对手，就成为他们的朋友。</strong></li><li>Take one simple thing — almost anything — but take it extremely seriously, as if it was the only thing in the world, or maybe the entire world is in it — and by taking it seriously you’ll light up the sky. 去拿一个很简单的东西——几乎任何东西都行，但是极其认真地对待它，就好像它是世上唯一的东西一样，或者就像整个世界都在它里面一样。通过认真对待这件东西，你将会点亮天空。（日日是好日）</li><li>History teaches us that in 100 years from now some of the assumptions you believed will turn out to be wrong. A good question to ask yourself today is “What might I be wrong about?” 历史教育我们，你现在相信的假定在 100 年后很可能会被证明是错的。一个在今天就可以问自己的好问题就是「我可能错在哪里了？」</li><li>Be nice to your children because they are going to choose your nursing home. 对你的孩子好一点，因为他们未来会给你选养老院。</li><li><strong>Advice like these are not laws. They are like hats. If one doesn’t fit, try another. 这些建议都不是定律。它们更像是帽子。如果其中一顶不合适的话，就试试另一顶。</strong></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://kk.org/thetechnium/99-additional-bits-of-unsolicited-advice/&quot;&gt;原文链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://kk.org/about-me&quot;&gt;KEVIN KE</summary>
      
    
    
    
    <category term="杂看杂读" scheme="http://densecollections.top/categories/%E6%9D%82%E7%9C%8B%E6%9D%82%E8%AF%BB/"/>
    
    
    <category term="growing" scheme="http://densecollections.top/tags/growing/"/>
    
    <category term="suggestions" scheme="http://densecollections.top/tags/suggestions/"/>
    
  </entry>
  
  <entry>
    <title>2020-2021-人间喜乐</title>
    <link href="http://densecollections.top/posts/Summaryofthisyear-2/"/>
    <id>http://densecollections.top/posts/Summaryofthisyear-2/</id>
    <published>2021-01-17T07:55:36.000Z</published>
    <updated>2022-09-09T03:30:41.873Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-2/1.jpg" alt></p><p>2020年应该是我们这一代人过的比较奇特的一年吧，新冠肺炎突然大面积爆发传播，导致整个社会的组织运作都发生了不小的改变，我自己作为即将毕业的应届生，求职之路和科研毕设之类的工作也变得艰难起来。如今全球的疫情形势依旧十分复杂，病毒的源头也一直众说纷纭（好像最近指向了美国的一个病毒/细菌的研究机构？），虽然国内控制得比较出色，但具体局势还是很复杂，难以预料。我作为一个普通人，在平时做好自己的事，履行好应尽的责任和义务之余，对这些问题和来回的纷争不是很感兴趣，现在大概对人性抱着一种悲观的态度，不相信人可以控制好自己的欲望和一些危险的好奇心。2020年里，我逐渐认识到平淡生活，或者说daily life的乐趣，这有点像年底皮克斯出的电影<a href="https://movie.douban.com/subject/24733428/">《心灵奇旅》</a>表达的主题，人最重要的是活在当下，享受生活，寻找自己的乐趣，或者试图感受做的每一件事带来的乐趣，触摸每一个细节，那些自己以为喜欢的，自己以为是重要的，不可割舍的，到头来可能会发现也就那样，达成之后反而会被空虚，失落，甚至无所适从所裹挟（宇宙是冰冷的，规则是冷酷的，意义是人赋予的）。这样的想法似乎佛系了些，怪不得我身边总有朋友说我过的像个中老年人一样，不过好歹我还是有些冲劲和进取心的，不然怕不是有点违背自然规律？嗯，这些生活的道理和经验啥的都比较复杂，折来折去，兜兜转转，都好似回到原点（看山还是山，看水还是水），这方面，古人活了几千年，应该比我们看的通透些，以后要多读读相关的古籍。</p><span id="more"></span><h3 id="秋招和科研">秋招和科研</h3><p>受到疫情和美国制裁的影响，今年大部分公司的业务都受到不小的影响，经济的下行也使得秋招的名额缩减了不少，加上21届毕业生人数较上年增多，秋招的难度也进一步加大。尽管每个大厂都在招人，都表示求贤若渴，可是就是没看到几个人晒出offer的，不免让人产生怀疑。我自己本科基本没什么正经的科研经历，纵深不够，研究生又换来换去课题方向，始终未下定决心，浪费了不少时间，秋招时头也够铁，投的岗位基本都是算法岗，虽按照网上大佬的经验来刷题，梳理知识点，结果仍不出意外是屡屡受挫，失败的原因我后来总结是：项目不成熟，技术不吸引人，深度不够（最多的着眼点是落地问题，包括模型压缩，部署，实际评价指标效果等）+ C++基础差 + 学历不够 ，学位不匹配，实习和paper就我的经历看并不是那么重要（当然有会更好，尤其是research组）。</p><p>多次不如意和失败后，我也慢慢看开了，毕竟工作只是工作而已，“996”，“996+”这样的职业环境也不是那么吸引人。后来在9月底也收到了一些“二三级大厂”和一些小公司的算法offer，综合考虑城市，发展和强度原因，自己也都拒掉了。关于具体去向的问题，目前的思绪还有些混乱，在这里也不方便多说。第一份职业很重要，所以难以抉择，个人兴趣，时代车轮，家人朋友的维系，贵人的相助等等缠在一起，乱成一锅粥，越搅越难看清。</p><p>秋招的结局不如意，但这份经历确实满蛮锻炼人的，也是起到进一步认识自己的作用。我总结了几点经验，希望对一些观者有用。</p><ul><li>好好思考自己想要什么样的生活，然后结合自身实际确定自己适合干什么，想干什么，进而选出岗位。比如不想要“996”，那就去国企，公务员，外企之类的，有一些算法项目，又喜欢这个领域，那就可以努力准备外企之类的，最好不要多方向投，否则很累，也很容易失败。</li><li>规划好自己的时间，提前看看别人的相关经验，选择有效的资源，好好准备。</li><li>刷题主要刷各个类型模块的解决思路和语言的熟练度（我是按照<a href="https://github.com/CyC2018/CS-Notes">cyc大神整理的笔记</a>刷的）。</li><li>认真组织简历中项目的语言，挑出最熟悉的，最有含金量的项目，根据“问题是什么-遇到的难点是什么-怎么分析，思考，解决的-效果怎么样”来分点列出。</li><li>早投简历，因为永远也准备不好。面试时语速放慢，尽量自信，不要太过谨慎和“软弱”，收敛自己害怕被面试官拒绝的神态。</li><li>珍惜第一份offer，这个节点前后的状态大不相同，基本上都是有了第一个，其他的都会陆续而来。</li><li>可以考虑做求职笔记， 尤其是面试的问题和自己发挥不好的地方，多积累反问环节的问题（我自己是利用<a href="https://trello.com/">trello</a>这个网页端来进行总结清单）。</li><li>坚持，坚持，再坚持。</li></ul><p>科研方面呢说来有些惭愧，基本就是20年最后两个月慌忙做了一下毕设，之前很多预想的计划和想法都没去实现，论文赶完之后倒是悠闲了不少，却只想给自己大放个长假，不完美的地方也不想再多瞅一眼了。</p><p>我的硕士毕设是关于低慢小无人机检测的内容，大体上分为两个部分，一个是无人机/风筝/飞鸟的目标检测，难点在于物体的多尺度变化，从极小到大物体（目标大小认定参照COCO的标准，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><msup><mn>2</mn><mn>2</mn></msup><mo separator="true">,</mo><mn>9</mn><msup><mn>6</mn><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">32^{2},96^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord">3</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">9</span><span class="mord"><span class="mord">6</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span>这两个像素大小阈值）和多变复杂的背景；二是基于bounding box的无人机弱监督语义分割。其实第一部分内容应该足够支撑起整个题目了（数据收集+RGB/红外图像分别检测），加第二部分内容是为了用上<a href="https://github.com/Richardyu114/weakly-segmentation-with-bounding-box">实习期间的成果</a>，所以硬塞了“深化检测定位效果”这么一个章节。毕设的具体方案和内容中规中矩，尤其是检测部分没能及时用上比较新的模型，还是“祖师爷”Faster R-CNN，利用<a href="https://github.com/open-mmlab/mmdetection">mmdetection</a>增增补补，时间上的仓促导致很多设计欠缺考虑，尤其是没有做一些模型压缩和部署的工作，在此不多赘述了，如果对其中的细节感兴趣，可以看一下我的<a href="https://densecollections.top/pdf-file/master-thesis.pdf">硕士学位论文</a>，也欢迎和我交流，提出意见。</p><h3 id="联络与展览">联络与展览</h3><p>20年各种事堆在一起，没能好好出去玩，倒是在12月底1月初这样抽了时间和一些朋友聚聚，天气阴冷，旧地重游，城市的新鲜感也降低了不少。自己早早就规划着毕业后可以去北欧，南非这样的地方去玩玩，壮阔自然，人烟稀少，如今疫情迟迟无法消除，这份渴望却也变得愈发强烈。</p><p>COVID 19和无法脱身的任务暂时阻断了自己旅游的想法，只能转而把多余的精力放在展览，舞台剧上。不过有时候由于消息闭塞、买票不及时或者交通不方便等，有趣的，难得一遇的展览和活动都被错过了，像是今年上海的莫奈画展，蒙克画展等，以及20年上半年南京博物院的“仰之弥高”下半场，都没能去看一眼，实属遗憾。这样的情况也进一步坚定了我以后要找艺术资源丰富的地区工作的想法，小地方纵然生活安逸悠闲，但着实会限制人的一些视野，对我而言，视野的狭窄是最恐惧的事情。</p><p>2020年上半年一直窝在家里，学校迟迟无法开学，出去的机会也很少，下半年秋招差不多结束后，看了两次现场表演和一次展览。第一场是上海歌舞团芭蕾舞剧<a href="https://mp.weixin.qq.com/s/EN53ll2uqcZuBLrbKwc69g">《永不消逝的电波》</a>，<a href="https://mp.weixin.qq.com/s/yPSNtY-TPemz0QfbZg63Ng">朱洁静</a>老师主演，当时正好“电波”全国巡演到南京，推送的那一刻刚好看到，就顺势抢了票，只可惜囊中羞涩，买的是后座，观感体验有所下降，尤其是第一次看这个故事，后座观众的情绪不太容易被演员的肢体和表情带起来。“电波”讲的是新中国成立前夕，共产党地下情报员为保护组织而牺牲的故事，前面气氛有多欢快，后面就有多悲壮。当然我主要是奔着静姐来的，亲临现场看其中的《渔光曲》，旗袍舞，男女主诀别等有名的唯美片段，彷佛跨越了大半个世纪。后来念念不忘，我又找了视频资源，传到了百度云，<a href="https://pan.baidu.com/s/1rkTMx2p31DIO03kQ654H9Q">提取码: fw8g</a>，没有机会看现场版的可以“望梅止渴”或者收藏。另外央视综艺《大幕开启》也对该剧进行了<a href="https://www.bilibili.com/video/BV1Nz4y1f76B">访谈</a>，“长河无声奔去，唯爱与信念永存！”</p><p>第二场是江苏大剧院的新年音乐会，从前年开始入坑古典乐之后，一直想找机会去现场听一下交响乐、钢琴独奏，四重奏这样类似形式的音乐会，所以毕设论文还没写完就拉着S同学买了票。演出那晚南京刚好下大雪，气温很低，倒是正好和音乐会的主题“回家”不谋而合。尴尬的是，演出曲目自己不是很熟悉，去之前也没有做功课提前听其他版本来熟悉一下，结果伴着室内温暖的座椅有点昏昏欲睡，实在是难以启齿≡(▔﹏▔)≡，鉴赏素养有待提高。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-2/2.jpg" alt="江苏大剧院"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-2/3.jpg" alt></p><p>今年的展览只看了一场<a href="https://mp.weixin.qq.com/s/_9iAz0xBUeDRrGz2X67z0w">”百花呈瑞“</a>，中小型的花鸟虫鱼国画特展，从宋代一直覆盖到近现代，可惜清朝之前的作品很少，那些时期的作品应该大部分遗留在台北故宫博物院或者海外，亦或毁于火烧圆明园中。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-2/4.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-2/5.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-2/6.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-2/7.jpg" alt></p><h3 id="音乐-公开课">音乐&amp;公开课</h3><p>今年的计划是逐渐细听古典，比如先选定作曲家，然乎根据作品难度去反复的听。我是先挑的Chopin（肖邦）作为第一入门作曲家，选其中最出名的夜曲<strong>Nocturnes</strong>作为开始，先听的是Arthur Rubinstein（鲁宾斯坦）弹奏的夜曲全集<a href="https://www.xiami.com/album/DtxQ49295">专辑</a>。当然也有人建议先从自己喜欢的慢慢听起来，培养自己的习惯，然后深入了解作曲的背景和演奏者的技巧，或者按照古典乐的发展历程来听（圣歌-巴洛克-浪漫主义-印象主义等）。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-2/8.PNG" alt="鲁宾斯坦的夜曲专辑"></p><p>自己在听之前得解决两个问题：</p><ol><li><p>怎么听？看了别人的建议，也结合自身的经历，听的时候就不要做其他事情，而是找个安静舒适的地方，认真地听，体会其中的旋律，情感和画面，故事以及记忆。当然如果懂些乐理知识会更好，不懂的话也没关系，当你真正通过古典乐打开自己的“沉睡认知”，感受到其中的美后，一切都会驱使你去学习音乐理论知识。</p></li><li><p>用什么听？听的设备越好，感受肯定也会更好，就我而言，在资金不足的情况下，还是选择找个适合的耳机去听（我也正在找适合的耳机，之前一直没做过研究，所以还在摸索学习中）。另外一点就是不同的演奏专辑带来的感受也不一样，每个演奏者对作品的理解，对细节的把握和处理都不同，这个我暂时也给不出好的选择意见，毕竟我自己听得也不算太多，所以只好一边听一边给出建议。不过大家给的意见都是把买耳机的钱留给听现场演奏的门票。</p></li></ol><p>后来坚持了几天，就疲于准备秋招的一大堆事，心不在焉，基本都在跟着apple music的精选集瞎听，白天干活，晚上回来一边洗漱，一边打开手机放外音，基本上没什么进步，除了旋律可能熟了一点。年底的新年音乐会更是有点”无所适从”的感觉&gt;_&lt;，似乎只是自以为听进去了。</p><p>古典乐之外，偶尔也会听听爵士乐，爵士乐就像我的朋友，每次听都像久别重逢一样，无话不谈，很容易就全身心沉浸在旋律和表达的情绪里。我自己已经记不得是什么时候喜欢上爵士乐的，好像是因为村上春树的一系列小说？因为村上自己喜欢在他的作品里夹带私货，有时候在“村上radio&quot;里也会推荐几首。不过爵士乐说来话长，厉害的乐手也不少，今年逛B站的时候刷到的一位演奏家Keith Jarrett就是一位非常非常NB的爵士演奏家，即兴演奏技巧高超，入坑作是那首<a href="https://www.bilibili.com/video/BV1Sz4y1o7cy">《over the rainbow》</a>。Keith小时候是先学的古典乐，后来再学的爵士，所以演奏风格有点，独树一帜吧，目前我听得都是他的一些慢奏乐曲，具有浓浓的情绪氛围。</p><hr><p>公开课方面，今年本专业的东西看得稍多点，唯一看的艺术通识类只有一门耶鲁大学的《聆听音乐》，但是我不懂乐理，所以听起来也有点费劲，不少理论部分我权当ppt看过去了，后面准备学一下乐理知识后再来二刷。主讲人Craig Wright老爷子幽默绅士，涉略广泛，干练精准，门里门外来听都能得到享受。</p><ol><li><p><a href="https://www.bilibili.com/video/av88056282">旷视x北大《深度学习实践》</a>，虽然是2017年的课程，但是旷视的名号太响，所以就毫不犹豫地拿来看了。比预想中要稍微差些，觉得讲得不够深入，很多问题没有涉及到，一些技术细节也没有讲，所以窃以为改为《深度学习在计算机视觉中的应用概况》更好些，毕竟也是给本科生的通识课好像？另外一点，个人觉得有过一些研究基础的人看这个课可能效果好些，因为涉及的范围广，梳理得也很全面到位，针对具体领域的那一节课去认真观摩可以得到不少启发，所以相比刚开始的小白可能收获更多。如果本课配套的阅读清单和一些材料也放出来就更好了。</p></li><li><p><a href="https://www.bilibili.com/video/av16809187?p=1">耶鲁大学2012公开课-聆听音乐</a>。从19年一直找时间零散看的课程，一直到20年疫情休假时期才一鼓作气看完。《聆听音乐》是非常好的古典音乐入门与鉴赏课程，授课老师也非常可爱友善。我从里面了解到了很多之前不曾了解的古典乐曲，也通过这个课程很好地梳理了一下古典乐的历史（格里高利咏叹调，巴洛克主义，古典主义，浪漫主义，印象主义，现代主义）和一些基础乐理。不过我本身没有音乐理论知识，不识谱，不懂key，所以到课程结束也无法很好区分major(大调)和minor(小调)，有时候教授讲到乐理中的专有名词时，比如复合和弦，不和谐音，和谐音，只能凭自己的感觉来理解，所以后面等到自己真正进入古典乐的世界，会督促自己学学乐理，以便更好地欣赏。这门课还有配套的同名教科书，<a href="https://book.douban.com/subject/10590165/">中文版</a>也翻译的很好</p></li><li><p><a href="http://cs231n.stanford.edu/">CS231N</a>。这个是Stanford的明星课程，内容关于深度学习及其在计算机视觉中的应用，课程资料每年都会做些调整，然而课程视频目前只公开到2017年。由于秋招想找算法的工作，所以借着这个课程想把一些思路和结构完整梳理一遍，本来打算一个月内完成课程的所有任务，结果到处查找资料啥的搞了将近2个月，课程质量还是蛮不错的，有些课程讲的不是特别清楚。相关的笔记，资源和作业可以见我前面的<a href="https://densecollections.top/posts/notesofCS231N/">post</a>。</p></li><li><p><a href="https://densecollections.top/posts/houjieC++/">侯捷C++面向对象程序设计</a>，<a href="https://densecollections.top/posts/houjieC++STL/">侯捷c++STL体系结构与内核分析</a>。台湾的侯捷老师讲授的两个C++网课，属于一个系列，里面还有C++11标准库，内存管理等。侯老师对C++的了解比较深入，很多内容讲得深入浅出，有四两拨千斤之感。</p></li></ol><p>除了上面这些，还有一些C++课程（比如黑马的），<a href="https://www.bilibili.com/video/BV1Pg4y1B7wm">English with Lucy</a>等等，有的是挑着看，有的是看了一半没看完。</p><h3 id="书-影视">书&amp;影视</h3><p>今年的书看得不多，秋招期间倒是买了不少编程，deep learning相关的教材和专著，不过只是翻翻而已，大部分冗长且枯燥乏味，难以持续看下去。今年的两部长篇小说还是在春节期间读完的，不得不说略萨的作品确实具有一种魔力，那种无时无刻不在的时空错乱感，不知不觉就抓住了读者的注意力，强制人跟着节奏思考。20年的尾声开始看廖一梅的<a href="https://book.douban.com/series/38956">悲观主义三部曲</a>，当时是抽空看了收藏夹里吃灰许久的戏剧<a href="https://www.bilibili.com/video/BV1Gs411z7H3">《恋爱的犀牛-段奕宏版》</a>，那会儿正好心里有些奇怪的想法，于是想开始思考爱情的前因后果和种种奇特反应，在翻来覆去的夜晚，内心交织着感性的冲动和理性的克制之间的碰撞，脑海时时浮现想象的场景，令人困恼。好在时间冲淡了一切。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-2/9.png" alt></p><ol><li><p><a href="https://book.douban.com/subject/30285146/">百面机器学习</a>是当时准备算法岗面试时看的一本书，其实用“查找手册”来称呼更准确一些，内容是以一个个小问题展开的，所以不太适合新手查看。总的来说，内容比较简练，也会包含一些发散的东西，挺适合放在工作桌上随时查漏补缺。</p></li><li><p><a href="https://book.douban.com/subject/25885819/">绿房子</a>是我读的秘鲁作家略萨的第二部小说，自从看了他的《城市与狗》之后，就迷上了这种结构主义的写实小说，而且没有单一主角，通过一群主人公和周围人之间的联系反映一些社会现实和人性的异化等等。《绿房子》的叙事结构相比前者更加复杂，因果关系之间的顺序完全打乱了，在这里，时间和空间都是一团相互交织的蒸汽，没有固定的规则和方向，所以一开始阅读的时候要自己猜测一些人物和事件之间的关系。其实往后面读进去以后，故事体验会很好，就等于是你完全被略萨的文字牵着走，没有全局的观念，你所看到的就是你现在所知道的，因此非常像一部前卫的叙事电影，而且不带给你任何附加的信息。有些读者说略萨的作品难以改编搬上银幕，我反而觉得应该很好改编，略萨本人已经给编剧做好时空结构了。讲到这里我又想起乔纳森·诺兰的《西部世界》，前两季的叙事结构颇像略萨的小说，当时观看这部美剧的时候，就时常感叹小诺兰的编剧技巧，没想到读了略萨的小说之后，发现真是小巫见大巫了。另外，略萨对场景的描写我也甚是喜欢，文字简洁，比喻也是别出心裁，读的时候感觉不到文字的温度，但是多读几遍，会发现有种独有的浪漫和幽默，以及忧郁。</p><blockquote><p>鲍妮法西娅站起来，那两只受了委屈的小兽小心翼翼地看着光滑的地板，几乎脚不离地地一个接着一个慢慢地给他们斟满酒。鲍妮法西娅把酒瓶放上壁架，就坐下了，两只小兽也静了下来。她那两只不听话的脚突然悄悄地互相一登，当即把鞋子登了下来。两只小兽透过鲍妮法西娅的手指缝偷偷地窥视着，让人几乎看不见；她是在流泪？两只小兽又出现了，在乱发后一张一闪，已经没有泪水了。这时两只小兽吃了一惊，胆怯地望着褪了色的墙壁，房梁，窗子上嗡嗡叫着的苍蝇，落在光柱中的金黄色的尘埃，以及地板上的木纹。鲍妮法西娅合起抱住膝盖的双手，抬起脸，在那两只吃惊的小兽下面，她的嘴角露出一丝勇敢的微笑。</p></blockquote><p>有关小说的故事情节我不想在这里做什么赘述，大意就是通过青楼“绿房子”联系起了两个地方的人和事，整个故事的发展脉络实际上可以通过书中的碎片拼凑出来，毕竟拼出完整的故事也是阅读略萨作品的一大乐趣和挑战之一。</p></li><li><p><a href="https://book.douban.com/subject/5383804/">酒吧长谈</a>。这部小说是接着绿房子之后看的，该小说一般被认为是略萨的巅峰代表作。我个人觉得相比于前一部《绿房子》，这部长篇的整体叙事要稍微好理解些，不过也有可能是经历了前面的训练，这次已经习以为常了吧 x_x，毕竟大部分作家都是在重复处女作。书中通过两个现状落魄的主人公来串起秘鲁的一段独裁历史以及大背景下的众多人物的浮沉与惨痛的命运，从多个角度和时空展现当时的境况，篇幅很长，据说作者在写之前也调查翻阅了很多资料，然后确立了整体的框架。小说整个读下来还是挺有趣的，但是由于自己没有那种经历，又或者是年龄还不到，涉世未深，感触没有《城市与狗》带来的大。</p><p>本书的译者在最后给了一个总结性的报告，不像我以往看到的那种文学批评，文学评论式的多种专业术语堆砌，读起来让人不知所云昏昏欲睡，而且给出了一种更私有性的总结式陈述，既给了小说内容的概括，也给了略萨和拉美文学作品的特性分析，理解难度不大，但具有不少启发性。</p><p>其实，略萨的作品让我着迷的原因除了故事发生在我陌生的一无所知的秘鲁和精巧的结构现实主义写作技巧外，更多的是小说中那种“若隐若现”的毒句，其中尤以心理描写和场景描写见长，我第一次读的时候很容易因为他冷淡、旁白式的描写而忽略这些让人饶有兴致的语句，所以没事多回来翻翻还是很有必要的。</p></li><li><p>《恋爱的犀牛》&amp;《琥珀》&amp;《柔软》是孟京辉的夫人廖一梅写的三部剧本，台词大胆，有趣，直逼人心，讨论的是人的情感和一些哲学问题。我私以为有很多文学作品是不太好，或者说无法给出评价的，只能去一遍遍地感受，催化自己和其他多维世界的化学反应，塑造自己的认知，而悲观主义三部曲就属于其中。</p></li></ol><hr><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-2/10.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-2/11.jpg" alt></p><p>虽说20年蛮忙的，自己电影美剧却也看了不少(╬▔︵▔)，很难想象没有影视这种媒介，自己该如何放松，窥探和思考。我自己没有特别讨厌的题材（纯恐怖片除外…），要么是好故事，要么是会讲故事，不管是科幻，日常，惊悚，暴力还是喜剧，爱情，历史，玛丽苏等，统统都可能会加入片单。大部分时候精力有限，看个剧只是为了放松一下，所以像伯格曼，库布里克，塔可夫斯基这样早就列入心愿单的大师作品一直不敢随意拿出来看。</p><p>20年出的作品不少，我挑了一些感觉还不赖，制作用心的一些剧作出来（非20年的就不单独列了，否则年终总结就完全变成了好物分享列表了，哈哈@_@）。</p><ul><li><a href="https://movie.douban.com/subject/34869387/">女人的碎片</a>    凡妮莎·柯比终于演自己的电影了！之前看《时空恋旅人》就注意到她了，狂热的方法派演员，近几年频繁出现， 从美剧《王冠》，到阿汤哥的《谍中谍》，还主演了NT LIVE舞台剧<a href="https://movie.douban.com/subject/30256022">《Juile》</a>。凡妮莎在这部电影里贡献了令人信服的演技，尤其是开头前半个小时在家分娩的戏份，全程没有多余的场景，长镜头引人入胜，凡妮莎今年可能要借这部电影拿一个奥斯卡了。</li><li><a href="https://movie.douban.com/subject/21349338/">爱与怪物</a>  披着怪物外衣的小清新电影，有关成长。男主的绘画本很想来一套。</li><li><a href="https://movie.douban.com/subject/30361878/">爱玛</a> 安雅主演，改编自简奥斯汀同名小说（焦点影业出品），没看过原著，像是加长版的Vogue时尚大片。</li><li><a href="https://movie.douban.com/subject/30211998/">绅士们</a>  盖里奇自编自导的黑色幽默电影，很骚，非常骚，对两杆大烟枪无感，但很喜欢这部。</li><li><a href="https://movie.douban.com/subject/30143336/">灯塔</a>  罗伯特·帕丁森和威廉·达福组合，惊悚奇幻黑白电影，很棒的质感，导演艾格斯前作《女巫》也获得了不俗的口碑。</li><li><a href="https://movie.douban.com/subject/1469353/">布鲁克林秘案</a> 疯子专业户爱德华·诺顿导演的第一部长片（听说制作过程也比较曲折），所以不假思索的找来看了。故事有点雷蒙德·钱德勒的感觉，塞了很多细节，最爱酒吧跳舞那段。</li><li><a href="https://movie.douban.com/subject/26754233/">八佰</a> 近年来值得一看的战争片，瑕不掩瑜。</li><li><a href="https://movie.douban.com/subject/30252495/">1917</a> 谁不爱长镜头？</li></ul><p>美剧上开年补完了Netflix的<a href="https://movie.douban.com/subject/30395836/">《毒枭》</a>，正好后来<a href="https://movie.douban.com/subject/30142227/">《9号秘事》</a>也接着出来了（主创的《疯城记》也很推荐观看，今年的《9号秘事》第五季E02也跟其进行了联动）。<a href="https://movie.douban.com/subject/30206389/">《西部世界》</a>和<a href="https://movie.douban.com/subject/30277286/">《环形物语》</a>解了上半年的剧荒。6-11月找工作，写论文，基本没有心思看什么电视剧了，毕竟让我每天一集一集看是不可能的&gt;_&lt;，但还是没忍住看了一部少女漫改日剧<a href="https://movie.douban.com/subject/34805659/">《将恋爱进行到底》</a>。11-12月那会毕设搞得差不多了，一口气看完了星战正传9部曲，2部外传，和衍生剧<a href="https://movie.douban.com/subject/34892527/">《曼达洛人》</a>，现在自己已经成了星战的死忠粉了，尤其对各种星系衍生剧充满热情，在帝国和反抗军的宫斗之外还是有很多有趣的故事可以挖掘。<a href="https://movie.douban.com/subject/30345691/">《异星灾变》</a>是雷德利·斯科特监督的美剧，给我的感觉是《索拉里斯星》+《异形》的结合，故事还满新颖的，即使是雷公一贯有关宗教/科学/人的来去问题探讨，后半段有点故弄玄虚，剧情有点浮肿，希望下一季能紧凑起来。<a href="https://movie.douban.com/subject/33476040/">《行骗天下JP：公主篇》</a>单纯是为了长泽少女追的。</p><p>年初的时候打算着把B站收藏夹里的话剧/戏剧看完的，结果只看了一部<a href="https://www.bilibili.com/video/BV1bt4y1U74o">暗恋桃花源</a>，空闲的时候就是无法静下心来，总是焦躁地，轻易点击快餐文化视频，青睐那些不费脑子，满足人原始欲望的内容。工作很累，生活艰难，失意亦是人生主旋律，但是自律和自省可以避免让自己成为行尸走肉，让艺术成为自己的呼吸，不仅享受生活，也创造诗意的世界。</p><h3 id="摄影">摄影</h3><p>去年的年终总结里有说到要以project/topic的形式开展一些摄影活动，然而我自己暂时没法突破随时随地按下快门这道坎，也一直没敢拍人，害羞上前与陌生人搭话，无论是偷拍还是和人交流之后同意进行拍摄，都带有一定的“攻击性”，往往让照片的内容丧失本来自然的味道。这一年呢，还是拍景居多，而且似乎有点过分依赖后期了。有时候想起来会看看<a href="https://space.bilibili.com/451150087">尾麦</a>老师的视频，会找找一些画册资源，读读介绍马格南摄影师的推送，慢慢开始感受摄影这件事，这样也挺好，人的瓶颈大多来自自身资质的不足，好好提升自己的美学/艺术素养，下一次拍摄的触手就会伸得更远。</p><p>20年的相机基本都是对准了天空、湖泊和树木，看起来也与“人间喜乐”这个标题暗暗契合，姑且就把这些照片的主题定为“寻”吧。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-2/12.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-2/13.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-2/14.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-2/15.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-2/16.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-2/17.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-2/18.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-2/19.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-2/20.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-2/21.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-2/22.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-2/23.jpg" alt></p><h3 id="结语">结语</h3><p>“逝者如斯夫，不舍昼夜”，20年真是白驹过隙，去年疫情刚爆发的情形恍如隔日。本命年整个国家都不太平，自己也在艰辛地成长着。这一年我也慢慢说服了自己，调和想象与现实之间的矛盾，尽管做，少说话，多尝试，以寻找自己的生活和世界。</p><p>20年后小半段时间里，可能是闲了下来，脑子里时不时被两个问题困扰着。一个是“年纪大了”，感情问题变得有些突出，比如会问：“自己如何消除寂寞，恋爱是唯一的途径吗？”，“两个人一起走是不是真的比一个人走得好？”，“喜欢/爱一个人是什么样的感觉，是不是心跳加速，闭上眼就是她的样子，以及好想在一起？”，“爱，如果没有记忆的维持和相互的欣赏包容，是不是就会丧失新鲜感，会过期？”，“人真的有另一半标准那一说吗？”等等诸如此类，我常分不清感性和理性的界限，在恋爱问题上尤其如此，所以一直在逃避，不肯轻易得接受或付出感情，理性告诉我，人不完美，到头来都会让自己失望；感性却又告诉我，残缺也是一种美，而恰好是那些缺点塑造了人的形象，让人铭记，于是我就在两边摇摆，不愿选择。另一个问题是看《进击的巨人》新番时想出的，关于世界观，破碎，痛苦，无力感，关于这个世界和社会民族之间不可调和的矛盾，人类命运中深深的宿命感，这个问题比较沉重和庞大，我也只能在其中徒生唏嘘。</p><p>尽管20年有很多波涛险阻，但自己和身边的人都可以说算顺利度过了，道路是曲折的，前途是光明的，人成长的过程也是在慢慢接受不完美，不如意的过程。最后，终于到了21年目标展望的环节了，去年写的要求似乎多多少少都完成了？哈哈，可能有些是一个缓慢前进的状态。anyway，希望今年可以做到以下几点：</p><ol><li><p>少一些社交软件上的依赖和自恋，充实自己，摆脱掉那种addiction；</p></li><li><p>好好珍惜第一份工作，多多学习，尽快适应新环境；</p></li><li><p>多读书，读好书（kindle的书该清一清啦）；</p></li><li><p>现场看一部话剧；</p></li><li><p>学会用<a href="https://procreate.art/cn">procreate</a>画画；</p></li><li><p>可以开始学piano了？</p><p>·······</p></li></ol><p>嗯。。暂写这么多吧，有那么多好玩的，还是得先努力赚钱才行╮(╯▽╰)╭.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-2/1.jpg&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;2020年应该是我们这一代人过的比较奇特的一年吧，新冠肺炎突然大面积爆发传播，导致整个社会的组织运作都发生了不小的改变，我自己作为即将毕业的应届生，求职之路和科研毕设之类的工作也变得艰难起来。如今全球的疫情形势依旧十分复杂，病毒的源头也一直众说纷纭（好像最近指向了美国的一个病毒/细菌的研究机构？），虽然国内控制得比较出色，但具体局势还是很复杂，难以预料。我作为一个普通人，在平时做好自己的事，履行好应尽的责任和义务之余，对这些问题和来回的纷争不是很感兴趣，现在大概对人性抱着一种悲观的态度，不相信人可以控制好自己的欲望和一些危险的好奇心。2020年里，我逐渐认识到平淡生活，或者说daily life的乐趣，这有点像年底皮克斯出的电影&lt;a href=&quot;https://movie.douban.com/subject/24733428/&quot;&gt;《心灵奇旅》&lt;/a&gt;表达的主题，人最重要的是活在当下，享受生活，寻找自己的乐趣，或者试图感受做的每一件事带来的乐趣，触摸每一个细节，那些自己以为喜欢的，自己以为是重要的，不可割舍的，到头来可能会发现也就那样，达成之后反而会被空虚，失落，甚至无所适从所裹挟（宇宙是冰冷的，规则是冷酷的，意义是人赋予的）。这样的想法似乎佛系了些，怪不得我身边总有朋友说我过的像个中老年人一样，不过好歹我还是有些冲劲和进取心的，不然怕不是有点违背自然规律？嗯，这些生活的道理和经验啥的都比较复杂，折来折去，兜兜转转，都好似回到原点（看山还是山，看水还是水），这方面，古人活了几千年，应该比我们看的通透些，以后要多读读相关的古籍。&lt;/p&gt;</summary>
    
    
    
    <category term="纪录与总结" scheme="http://densecollections.top/categories/%E7%BA%AA%E5%BD%95%E4%B8%8E%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="summary" scheme="http://densecollections.top/tags/summary/"/>
    
    <category term="growing" scheme="http://densecollections.top/tags/growing/"/>
    
    <category term="emotions" scheme="http://densecollections.top/tags/emotions/"/>
    
    <category term="memory" scheme="http://densecollections.top/tags/memory/"/>
    
  </entry>
  
  <entry>
    <title>SSD-RefineDet论文阅读</title>
    <link href="http://densecollections.top/posts/ssd-refinedet-paper/"/>
    <id>http://densecollections.top/posts/ssd-refinedet-paper/</id>
    <published>2020-08-03T13:25:33.000Z</published>
    <updated>2022-09-17T10:49:28.096Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ssd">SSD</h2><p><a href="https://arxiv.org/pdf/1512.02325.pdf">paper</a></p><p>参考：<a href="https://zhuanlan.zhihu.com/p/33544892">1</a></p><p>SSD是一篇写得非常好，读起来也非常舒服的文章。</p><hr><p>写于fater rcnn之后，所以anchor不是新思想，新思想是多个尺寸的feature map然后分别设置不同尺寸的anchor去预测和回归，有特征金字塔的萌芽</p><blockquote><p>Our improvements include using a small convolutional filter to predict object categories and offsets in bounding box locations, using separate predictors (filters) for different aspect ratio detections, and applying these filters to multiple feature maps from the later stages of a network in order to perform detection at multiple scales</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/ssd-refinedet-paper/SSD.JPG" alt></p><span id="more"></span><p>backbone使用VGG16，但是把fc6和fc7换成了卷积，其中conv5_出来后的maxpool5的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>×</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">2\times2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">s=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>换成了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">3\times3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">s=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>的，没有改变尺寸大小，fc6换成了卷积层并使用使用了空洞卷积，增大感受野，去掉了fc8层，直接接上卷积层进行特征抽取和预测。为什么要在maxpool5和fc6这里做如此处理呢？作者在论文的实验分析部分指出，如果单纯只是用原始vgg16 conv5_3来作预测，效果没有太大变化，但是速度会比使用空洞卷积慢20%左右，这里可能是为了速度上的工程考量。在后续自己的工作中，似乎可以考虑实验下空洞卷积带来的作用。</p><p>此外，由于用了VGG16种的conv4_3作为第一个预测层，相比于其他层比较靠前，论文中用了<a href="https://arxiv.org/abs/1506.04579">parseNet</a>的L2 normalization对每个像素在channel层面上做了归一化（跟layer norm不一样，在图像上layer norm是CHW做了归一化，保留N维度）。这样处理是想匹配特征数据范围，便于模型收敛。但是具体原因应该还是实际实验发现的，不然也不会只L2 NORM一个层，其具体计算公式为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><mfrac><msub><mi>x</mi><mi>i</mi></msub><msqrt><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>D</mi></munderover><msubsup><mi>x</mi><mi>i</mi><mn>2</mn></msubsup></mrow></msqrt></mfrac></mrow><annotation encoding="application/x-tex">y_{i}=\frac{x_{i}}{\sqrt{\sum_{i=1}^{D} x_{i}^{2}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.83756em;vertical-align:-1.73em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.3257605em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3257605em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7959080000000001em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.2857605em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.8800000000000001em;"><svg width="400em" height="1.8800000000000001em" viewbox="0 0 400000 1944" preserveaspectratio="xMinYMin slice"><path d="M983 90l0 -0c4,-6.7,10,-10,18,-10 H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5142395000000001em;"><span></span></span></span></span></span></span></span><span style="top:-3.5557605em;"><span class="pstrut" style="height:3.3257605em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.0027605em;"><span class="pstrut" style="height:3.3257605em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.73em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>计算完之后还需要乘上指定的scale参数进行缩放。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">norm = conv4_3_feats.pow(2).sum(dim=1, keepdim=True).sqrt()+1e-10  # (N, 1, 38, 38)</span><br><span class="line">conv4_3_feats = conv4_3_feats / norm  # (N, 512, 38, 38)</span><br><span class="line">conv4_3_feats = conv4_3_feats * self.rescale_factors  # (N, 512, 38, 38)</span><br></pre></td></tr></table></figure><p>更多相关代码示例见<a href="https://blog.csdn.net/flyfish1986/article/details/105586716">此</a>，以及作者对于SSD中对Conv4_3做归一化，加入variance的<a href="https://zhuanlan.zhihu.com/p/39399799">解释</a>。</p><p>利用卷积来预测框的偏移量和类别置信度，所以最后得卷积核数量为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>C</mi><mo>+</mo><mn>4</mn><mo stretchy="false">)</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">(C+4)k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>，其中k为anchor的预设数量，C包含了背景类。</p><p>如何获得GT:</p><blockquote><p>We begin by matching each ground truth box to the default box with the best jaccard overlap (as in MultiBox [7]). Unlike MultiBox, we then match default boxes to any ground truth with jaccard overlap higher than a threshold (0.5).</p></blockquote><p>anchor box和GT取IOU，大于阈值0.5的就匹配上，负责预测该GT（可以一个GT匹配多个anchor box但是反过来不行，如果出现这样的情况，那么该anchor box只会取与某个GT有最大IOU的）</p><p>但是anchor box不是通过该feature map的感受野去匹配的，而是人为指定的scale和中心，原文是最浅的层scale是0.2，最深的层scale是0.9（相对与原图而言），anchor scale为{1, 2,3,1/2,1/3,1’}，这个1’是每个特征图单独指定的，与1对应的区域大小不一样。虽然anchor scale设置了6个，对应的大小也有相应的公式，但是并不是每一个feature map上都用了全部的anchor scale,大小的公式推导也只是针对后面新增的特征图，vgg16 head里用来预测的是单独设置的，原文中也对此做了详细说明：</p><blockquote><p>Figure 2 shows the architecture details of the SSD300 model. We use <strong>conv4_3, conv7 (fc7), conv8_2, conv9_2, conv10_2, and conv11_2 to predict</strong> both location and confidences. <strong>We set default box with scale 0.1 on conv4_3</strong>  . We initialize the parameters for all the newly added convolutional layers with the ”xavier” method [20]. <strong>For conv4_3, conv10_2 and conv11_2, we only associate 4 default boxes</strong> at each feature map location – omitting aspect ratios of <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mn>3</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> and 3. For all other layers, we put 6 default boxes as described in Sec. 2.2. Since, as pointed out in [12], conv4_3 has a different feature scale compared to the other layers, we use the <strong>L2 normalization</strong> technique introduced in [12] to scale the feature norm at each location in the feature map to 20 and learn the scale during back propagation.</p></blockquote><p>为了更清楚整体的流程和一些细节，我这里直接贴出参考的博客<a href="https://zhuanlan.zhihu.com/p/33544892">1</a>中的解释：</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/ssd-refinedet-paper/SSD_anchor1.JPG" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/ssd-refinedet-paper/SSD_anchor2.JPG" alt></p><p>由于特征图每个cell内部都设置了几个同样的大小和长宽比的anchor，其对应的中心就是特征图cell的中心放大该特征图下采样倍数对应到原图区域的中心位置。</p><p>损失函数与faster rcnn相同，offset的预测类型也是一样的，回归用smooth L1，分类用softmax加交叉熵，两者之间的权重通过交叉验证设置为1</p><p>hard negative mining，通过对负样本进行抽样，抽样时按照置信度误差（预测背景的置信度越小，误差越大）进行降序排列，选取误差的较大的top-k作为训练的负样本，尽量控制正负样本比例在1：3左右</p><p>关于为何选择多尺度feature map而不是利用多尺度图片进行训练：</p><blockquote><p>To handle different object scales, some methods [4,9] suggest processing the image at different sizes and combining the results afterwards. However, by utilizing feature maps from several different layers in a single network for prediction we can mimic the same effect, while also sharing parameters across all object scales.</p></blockquote><p>对小物体检测效果差，因为结构上是从浅层去检测，语义信息不够充分。</p><blockquote><p>Figure 4 shows that SSD is very sensitive to the bounding box size. In other words, it has much worse performance on smaller objects than bigger objects. This is not surprising because those small objects may not even have any information at the very top layers.</p></blockquote><p>相较于faster rcnn，对data augumentation（random crop去zoom in图像类似的操作，其实在这一点上，我觉得yolo v4的“马赛克”数据增强手段有异曲同工之妙，可以说是增强普适版，这种数据增强操作对一阶的object detection似乎是标配）的依赖很重，原文的结果表示加了数据增强会比不加高8-9个点，作者认为可能是faster rcnn feature pooling这一步会让模型对物体的translation更加鲁棒，“use a feature pooling step during classification that is relatively robust to object translation by design”</p><p>最后总结了当时的目标检测思路，将SSD与主流的方法进行了比较，其中我认为关键的地方在于作者指出，SSD其实就是相当于faster rcnn中的RPN:</p><blockquote><p>Our SSD is very similar to the region proposal network (RPN) in Faster R-CNN in that we also use a fixed set of (default) boxes for prediction, similar to the anchor boxes in the RPN. But instead of using these to pool features and evaluate another classifier, we simultaneously produce a score for each object category in each box. Thus, our approach avoids the complication of merging RPN with Fast R-CNN and is easier to train, faster, and straightforward to integrate in other tasks.</p></blockquote><h2 id="refinedet">RefineDet</h2><p><a href="https://arxiv.org/abs/1711.06897">paper</a>, <a href="https://github.com/sfzhang15/RefineDet">code</a>，<a href="https://github.com/lzx1413/PytorchSSD">pytorch版本</a></p><p>参考：<a href="https://zhuanlan.zhihu.com/p/50917804">1</a></p><p><strong>目的</strong>：借鉴一阶检测算法类似SSD的高效率推断和二阶检测算法类似Faster RCNN的高检测率，构建anchor两次回归的二阶段回归模型，但是没有用到图像proposal，只是针对特征图来做。</p><p><strong>结构/思想部分：</strong></p><p>第一阶段：</p><blockquote><p>(1)  filter  out  negative anchors to reduce search space for the classifier, and (2)  coarsely  adjust  the  locations  and  sizes  of  anchors  to provide  better  initialization  for  the  subsequent  regressor.</p></blockquote><p>第二阶段：</p><blockquote><p>The  latter  module  takes  the  refined  anchors  as  the  input from the former to further improve the regression and predict  multi-class  label.</p></blockquote><p>第一阶段与faster rcnn类似，分出positive的anchor box，也就是包含物体，非background，并作一些修正，第二阶段用的特征图会在第一阶段的基础上继续做一些特征提取和融合操作，以增强多分类和回归效果。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/ssd-refinedet-paper/refinedet.JPG" alt="refinedet结构图，可以看出，大致是RPN+FPN+RPN堆叠起来的。论文中给的三个模块名称分别为ARM+TCB+ODM"></p><p>第一阶段，每个特征图的grid cell固定了几个anchor box，然后预测四个offset，针对原始设定的anchor而言，并且给出foreground置信度</p><p>ARM和ODM的特征图维度相同</p><p>ARM中negative box的negative 置信度大于阈值（0.99）就丢掉，预测的时候也是，ARM只传递hard negative anchor boxes和修正过的positive anchor boxes给ODM</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/ssd-refinedet-paper/TCB.JPG" alt="TCB的结构图，逐级与高层特征图进行侧向连接"></p><p><strong>训练/推理部分：</strong></p><p>数据增强：crop，expand, flipping等，与SSD类似</p><p>backbone：采用vgg16或者resnet101，以VGG16为例，把最后两层全连接层fc_6, fc_7去掉，加入两个卷积层conv_fc6, conv_fc7，接在pool5后面的卷积层conv_fc6和SSD一样做了空洞卷积（dilation=6），在conv_fc7之后又接了两个卷积层，其中最后一个用了stride=2进行下采样，预测的特征图是Conv4_3, Conv_5_3, Conv6_1, Conv6_2，前面两个也做了跟SSD一样的L2 norm操作。所欲预测的特征图分别对原图下采样了8，16，32，64倍，每个特征图安排一个大小（4乘以下采样倍数）的和三个不同长宽比（0.5，1，2）的anchors，匹配原则：首先让每个GT匹配与其有最大IOU的anchor，然后再让anchor匹配与其IOU大于0.5的GT，这一点与SSD相同。</p><blockquote><p>Specifically, we first match each ground truth to the anchorbox with the best overlap score, and then match the anchorboxes to any ground truth with overlap higher than0.5</p></blockquote><p>hard negative mining：与SSD相同，选择那些负样本分类置信度小的，也就是loss大的，进行排序，保持正负样本在1：3左右或者更高，</p><p>loss function: 分ARM和ODM两部分。类似faster rcnn的rpn和fast rcnn, 分类都采用交叉熵，回归采用smooth L1，论文中四个损失函数之间没有权重设置，都是等比例贡献，如下所示。N代表positive anchor的数量，只对正样本回归，但是分类对正负样本都会进行，且如前所述，ARM会把难分的负样本传给ODM继续分类。论文中还提到，如果ARM或者ODM中的N为0，那么分类和回归损失都置为0。</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="script">L</mi><mrow><mo fence="true">(</mo><mrow><mo fence="true">{</mo><msub><mi>p</mi><mi>i</mi></msub><mo fence="true">}</mo></mrow><mo separator="true">,</mo><mrow><mo fence="true">{</mo><msub><mi>x</mi><mi>i</mi></msub><mo fence="true">}</mo></mrow><mo separator="true">,</mo><mrow><mo fence="true">{</mo><msub><mi>c</mi><mi>i</mi></msub><mo fence="true">}</mo></mrow><mo separator="true">,</mo><mrow><mo fence="true">{</mo><msub><mi>t</mi><mi>i</mi></msub><mo fence="true">}</mo></mrow><mo fence="true">)</mo></mrow><mo>=</mo><mfrac><mn>1</mn><msub><mi>N</mi><mtext>arm </mtext></msub></mfrac><mrow><mo fence="true">(</mo><msub><mo>∑</mo><mi>i</mi></msub><msub><mi mathvariant="script">L</mi><mi mathvariant="normal">b</mi></msub><mrow><mo fence="true">(</mo><msub><mi>p</mi><mi>i</mi></msub><mo separator="true">,</mo><mrow><mo fence="true">[</mo><msubsup><mi>l</mi><mi>i</mi><mo lspace="0em" rspace="0em">∗</mo></msubsup><mo>≥</mo><mn>1</mn><mo fence="true">]</mo></mrow><mo fence="true">)</mo></mrow></mrow><mrow><mo>+</mo><msub><mo>∑</mo><mi>i</mi></msub><mrow><mo fence="true">[</mo><msubsup><mi>l</mi><mi>i</mi><mo lspace="0em" rspace="0em">∗</mo></msubsup><mo>≥</mo><mn>1</mn><mo fence="true">]</mo></mrow><msub><mi mathvariant="script">L</mi><mi mathvariant="normal">r</mi></msub><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msubsup><mi>g</mi><mi>i</mi><mo lspace="0em" rspace="0em">∗</mo></msubsup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo>+</mo><mfrac><mn>1</mn><msub><mi>N</mi><mtext>odm </mtext></msub></mfrac><mrow><mo fence="true">(</mo><msub><mo>∑</mo><mi>i</mi></msub><msub><mi mathvariant="script">L</mi><mi mathvariant="normal">m</mi></msub><mrow><mo fence="true">(</mo><msub><mi>c</mi><mi>i</mi></msub><mo separator="true">,</mo><msubsup><mi>l</mi><mi>i</mi><mo lspace="0em" rspace="0em">∗</mo></msubsup><mo fence="true">)</mo></mrow></mrow><mrow><mo>+</mo><msub><mo>∑</mo><mi>i</mi></msub><mrow><mo fence="true">[</mo><msubsup><mi>l</mi><mi>i</mi><mo lspace="0em" rspace="0em">∗</mo></msubsup><mo>≥</mo><mn>1</mn><mo fence="true">]</mo></mrow><msub><mi mathvariant="script">L</mi><mi mathvariant="normal">r</mi></msub><mrow><mo fence="true">(</mo><msub><mi>t</mi><mi>i</mi></msub><mo separator="true">,</mo><msubsup><mi>g</mi><mi>i</mi><mo lspace="0em" rspace="0em">∗</mo></msubsup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l}\mathcal{L}\left(\left\{p_{i}\right\},\left\{x_{i}\right\},\left\{c_{i}\right\},\left\{t_{i}\right\}\right)=\frac{1}{N_{\text {arm }}}\left(\sum_{i} \mathcal{L}_{\mathrm{b}}\left(p_{i},\left[l_{i}^{*} \geq 1\right]\right)\right. \left.+\sum_{i}\left[l_{i}^{*} \geq 1\right] \mathcal{L}_{\mathrm{r}}\left(x_{i}, g_{i}^{*}\right)\right)+  \frac{1}{N_{\text {odm }}}\left(\sum_{i} \mathcal{L}_{\mathrm{m}}\left(c_{i}, l_{i}^{*}\right)\right. \left.+\sum_{i}\left[l_{i}^{*} \geq 1\right] \mathcal{L}_{\mathrm{r}}\left(t_{i}, g_{i}^{*}\right)\right)\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2959679999999998em;vertical-align:-0.397984em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8979839999999998em;"><span style="top:-3.052876em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">}</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">}</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">}</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">}</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">arm </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16195399999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">b</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.441336em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mclose delimcenter" style="top:0em;">]</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord">+</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16195399999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.441336em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mclose delimcenter" style="top:0em;">]</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">r</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.441336em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">odm </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16195399999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">m</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.441336em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord">+</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16195399999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.441336em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mclose delimcenter" style="top:0em;">]</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">r</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.441336em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.397984em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p><p>训练：采用pretrained model，batch_size=32, 新增的卷积层采用“Xavier&quot;方法初始化权重，采用带动量（0.9）的SGD训练，weight decay为0.0005，初始学习率为0.001，后续会随着迭代次数增加而调整。</p><p>推理：ARM先去掉置信度高的负样本（跟阈值比较），然后对剩下的anchors进行回归refine，输送给ODM，ODM进一步分类和refine输出top400的框，然后利用NMS（阈值0.45）筛选，然后最多留下200的框产生最后的结果</p><p>结果：300的图片可以达到0.8的mAP (PASCAL VOC)，Titan X上可以达到40FPS，512的输入尺度，速度掉到了24FPS，几乎一半。</p><p>这里根据博客1提到的pytorch源码，其实一阶段对anchor的抑制并没有做，而是全部送到了ODM，然后ODM根据ARM的置信度和当前的分类置信度一起筛选anchor.</p><blockquote><p><strong>这个操作可能是我理解有误，在pytorch_refindet未有体现，实际上ARM中所有anchor都直接传到了ODM中，但ARM中所有anchor确实完成了1st-stage的refine，ODM中为每个anchor进一步预测2nd-stage的bbox reg + cls，结合1st-stage的objectness得分 + 2nd-stage的bbox cls（具体类别）得分，一起筛选有效anchor，并结合2nd-stage的bbox reg预测结果，完成2nd-stage的refine后，最后NMS输出结果；</strong></p></blockquote><p>refinedet结构pytorch<a href="https://github.com/lzx1413/PytorchSSD/blob/master/models/RefineSSD_vgg.py">代码</a>（以VGG16为backbone）：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import os</span><br><span class="line">import torch</span><br><span class="line">import torch.nn as nn</span><br><span class="line">import torch.nn.functional as F</span><br><span class="line"></span><br><span class="line">from layers import *</span><br><span class="line">from .base_models import vgg, vgg_base</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def vgg(cfg, i=3, batch_norm=False):</span><br><span class="line">    layers = []</span><br><span class="line">    in_channels = i</span><br><span class="line">    for v in cfg:</span><br><span class="line">        if v == &#x27;M&#x27;:</span><br><span class="line">            layers += [nn.MaxPool2d(kernel_size=2, stride=2)]</span><br><span class="line">        elif v == &#x27;C&#x27;:</span><br><span class="line">            layers += [nn.MaxPool2d(kernel_size=2, stride=2, ceil_mode=True)]</span><br><span class="line">        else:</span><br><span class="line">            conv2d = nn.Conv2d(in_channels, v, kernel_size=3, padding=1)</span><br><span class="line">            if batch_norm:</span><br><span class="line">                layers += [conv2d, nn.BatchNorm2d(v), nn.ReLU(inplace=True)]</span><br><span class="line">            else:</span><br><span class="line">                layers += [conv2d, nn.ReLU(inplace=True)]</span><br><span class="line">            in_channels = v</span><br><span class="line">    pool5 = nn.MaxPool2d(kernel_size=2, stride=2, padding=0)</span><br><span class="line">    conv6 = nn.Conv2d(512, 1024, kernel_size=3, padding=6, dilation=6)</span><br><span class="line">    conv7 = nn.Conv2d(1024, 1024, kernel_size=1)</span><br><span class="line">    layers += [pool5, conv6,</span><br><span class="line">               nn.ReLU(inplace=True), conv7, nn.ReLU(inplace=True)]</span><br><span class="line">    return layers</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vgg_base = &#123;</span><br><span class="line">    &#x27;320&#x27;: [64, 64, &#x27;M&#x27;, 128, 128, &#x27;M&#x27;, 256, 256, 256, &#x27;C&#x27;, 512, 512, 512, &#x27;M&#x27;,</span><br><span class="line">            512, 512, 512],</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class RefineSSD(nn.Module):</span><br><span class="line">    &quot;&quot;&quot;Single Shot Multibox Architecture</span><br><span class="line">    The network is composed of a base VGG network followed by the</span><br><span class="line">    added multibox conv layers.  Each multibox layer branches into</span><br><span class="line">        1) conv2d for class conf scores</span><br><span class="line">        2) conv2d for localization predictions</span><br><span class="line">        3) associated priorbox layer to produce default bounding</span><br><span class="line">           boxes specific to the layer&#x27;s feature map size.</span><br><span class="line">    See: https://arxiv.org/pdf/1512.02325.pdf for more details.</span><br><span class="line">    Args:</span><br><span class="line">        phase: (string) Can be &quot;test&quot; or &quot;train&quot;</span><br><span class="line">        base: VGG16 layers for input, size of either 300 or 500</span><br><span class="line">        extras: extra layers that feed to multibox loc and conf layers</span><br><span class="line">        head: &quot;multibox head&quot; consists of loc and conf conv layers</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">    def __init__(self, size, num_classes, use_refine=False):</span><br><span class="line">        super(RefineSSD, self).__init__()</span><br><span class="line">        self.num_classes = num_classes</span><br><span class="line">        # TODO: implement __call__ in PriorBox</span><br><span class="line">        self.size = size</span><br><span class="line">        self.use_refine = use_refine</span><br><span class="line"></span><br><span class="line">        # SSD network</span><br><span class="line">        self.base = nn.ModuleList(vgg(vgg_base[&#x27;320&#x27;], 3))</span><br><span class="line">        # Layer learns to scale the l2 normalized features from conv4_3</span><br><span class="line">        self.L2Norm_4_3 = L2Norm(512, 10)</span><br><span class="line">        self.L2Norm_5_3 = L2Norm(512, 8)</span><br><span class="line">        self.last_layer_trans = nn.Sequential(nn.Conv2d(512, 256, kernel_size=3, stride=1, padding=1),</span><br><span class="line">                                              nn.ReLU(inplace=True),</span><br><span class="line">                                              nn.Conv2d(256, 256, kernel_size=3, stride=1, padding=1),</span><br><span class="line">                                              nn.Conv2d(256, 256, kernel_size=3, stride=1, padding=1))</span><br><span class="line">        self.extras = nn.Sequential(nn.Conv2d(1024, 256, kernel_size=1, stride=1, padding=0), nn.ReLU(inplace=True), \</span><br><span class="line">                                    nn.Conv2d(256, 512, kernel_size=3, stride=2, padding=1), nn.ReLU(inplace=True))</span><br><span class="line"></span><br><span class="line">        if use_refine:</span><br><span class="line">            self.arm_loc = nn.ModuleList([nn.Conv2d(512, 12, kernel_size=3, stride=1, padding=1), \</span><br><span class="line">                                          nn.Conv2d(512, 12, kernel_size=3, stride=1, padding=1), \</span><br><span class="line">                                          nn.Conv2d(1024, 12, kernel_size=3, stride=1, padding=1), \</span><br><span class="line">                                          nn.Conv2d(512, 12, kernel_size=3, stride=1, padding=1), \</span><br><span class="line">                                          ])</span><br><span class="line">            self.arm_conf = nn.ModuleList([nn.Conv2d(512, 6, kernel_size=3, stride=1, padding=1), \</span><br><span class="line">                                           nn.Conv2d(512, 6, kernel_size=3, stride=1, padding=1), \</span><br><span class="line">                                           nn.Conv2d(1024, 6, kernel_size=3, stride=1, padding=1), \</span><br><span class="line">                                           nn.Conv2d(512, 6, kernel_size=3, stride=1, padding=1), \</span><br><span class="line">                                           ])</span><br><span class="line">        self.odm_loc = nn.ModuleList([nn.Conv2d(256, 12, kernel_size=3, stride=1, padding=1), \</span><br><span class="line">                                      nn.Conv2d(256, 12, kernel_size=3, stride=1, padding=1), \</span><br><span class="line">                                      nn.Conv2d(256, 12, kernel_size=3, stride=1, padding=1), \</span><br><span class="line">                                      nn.Conv2d(256, 12, kernel_size=3, stride=1, padding=1), \</span><br><span class="line">                                      ])</span><br><span class="line">        self.odm_conf = nn.ModuleList([nn.Conv2d(256, 3*num_classes, kernel_size=3, stride=1, padding=1), \</span><br><span class="line">                                       nn.Conv2d(256, 3*num_classes, kernel_size=3, stride=1, padding=1), \</span><br><span class="line">                                       nn.Conv2d(256, 3*num_classes, kernel_size=3, stride=1, padding=1), \</span><br><span class="line">                                       nn.Conv2d(256, 3*num_classes, kernel_size=3, stride=1, padding=1), \</span><br><span class="line">                                       ])</span><br><span class="line">        self.trans_layers = nn.ModuleList([nn.Sequential(nn.Conv2d(512, 256, kernel_size=3, stride=1, padding=1),</span><br><span class="line">                                                         nn.ReLU(inplace=True),</span><br><span class="line">                                                         nn.Conv2d(256, 256, kernel_size=3, stride=1, padding=1)), \</span><br><span class="line">                                           nn.Sequential(nn.Conv2d(512, 256, kernel_size=3, stride=1, padding=1),</span><br><span class="line">                                                         nn.ReLU(inplace=True),</span><br><span class="line">                                                         nn.Conv2d(256, 256, kernel_size=3, stride=1, padding=1)), \</span><br><span class="line">                                           nn.Sequential(nn.Conv2d(1024, 256, kernel_size=3, stride=1, padding=1),</span><br><span class="line">                                                         nn.ReLU(inplace=True),</span><br><span class="line">                                                         nn.Conv2d(256, 256, kernel_size=3, stride=1, padding=1)), \</span><br><span class="line">                                           ])</span><br><span class="line">        self.up_layers = nn.ModuleList([nn.ConvTranspose2d(256, 256, kernel_size=2, stride=2, padding=0),</span><br><span class="line">                                        nn.ConvTranspose2d(256, 256, kernel_size=2, stride=2, padding=0),</span><br><span class="line">                                        nn.ConvTranspose2d(256, 256, kernel_size=2, stride=2, padding=0), ])</span><br><span class="line">        self.latent_layrs = nn.ModuleList([nn.Conv2d(256, 256, kernel_size=3, stride=1, padding=1),</span><br><span class="line">                                           nn.Conv2d(256, 256, kernel_size=3, stride=1, padding=1),</span><br><span class="line">                                           nn.Conv2d(256, 256, kernel_size=3, stride=1, padding=1),</span><br><span class="line">                                           ])</span><br><span class="line"></span><br><span class="line">        self.softmax = nn.Softmax()</span><br><span class="line"></span><br><span class="line">    def forward(self, x, test=False):</span><br><span class="line">        &quot;&quot;&quot;Applies network layers and ops on input image(s) x.</span><br><span class="line">        Args:</span><br><span class="line">            x: input image or batch of images. Shape: [batch,3*batch,300,300].</span><br><span class="line">        Return:</span><br><span class="line">            Depending on phase:</span><br><span class="line">            test:</span><br><span class="line">                Variable(tensor) of output class label predictions,</span><br><span class="line">                confidence score, and corresponding location predictions for</span><br><span class="line">                each object detected. Shape: [batch,topk,7]</span><br><span class="line">            train:</span><br><span class="line">                list of concat outputs from:</span><br><span class="line">                    1: confidence layers, Shape: [batch*num_priors,num_classes]</span><br><span class="line">                    2: localization layers, Shape: [batch,num_priors*4]</span><br><span class="line">                    3: priorbox layers, Shape: [2,num_priors*4]</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        arm_sources = list()</span><br><span class="line">        arm_loc_list = list()</span><br><span class="line">        arm_conf_list = list()</span><br><span class="line">        obm_loc_list = list()</span><br><span class="line">        obm_conf_list = list()</span><br><span class="line">        obm_sources = list()</span><br><span class="line"></span><br><span class="line">        # apply vgg up to conv4_3 relu</span><br><span class="line">        for k in range(23):</span><br><span class="line">            x = self.base[k](x)</span><br><span class="line"></span><br><span class="line">        s = self.L2Norm_4_3(x)</span><br><span class="line">        arm_sources.append(s)</span><br><span class="line"></span><br><span class="line">        # apply vgg up to conv5_3</span><br><span class="line">        for k in range(23, 30):</span><br><span class="line">            x = self.base[k](x)</span><br><span class="line">        s = self.L2Norm_5_3(x)</span><br><span class="line">        arm_sources.append(s)</span><br><span class="line"></span><br><span class="line">        # apply vgg up to fc7</span><br><span class="line">        for k in range(30, len(self.base)):</span><br><span class="line">            x = self.base[k](x)</span><br><span class="line">        arm_sources.append(x)</span><br><span class="line">        # conv6_2</span><br><span class="line">        x = self.extras(x)</span><br><span class="line">        arm_sources.append(x)</span><br><span class="line">        # apply multibox head to arm branch</span><br><span class="line">        if self.use_refine:</span><br><span class="line">            for (x, l, c) in zip(arm_sources, self.arm_loc, self.arm_conf):</span><br><span class="line">                arm_loc_list.append(l(x).permute(0, 2, 3, 1).contiguous())</span><br><span class="line">                arm_conf_list.append(c(x).permute(0, 2, 3, 1).contiguous())</span><br><span class="line">            arm_loc = torch.cat([o.view(o.size(0), -1) for o in arm_loc_list], 1)</span><br><span class="line">            arm_conf = torch.cat([o.view(o.size(0), -1) for o in arm_conf_list], 1)</span><br><span class="line">        x = self.last_layer_trans(x)</span><br><span class="line">        obm_sources.append(x)</span><br><span class="line"></span><br><span class="line">        # get transformed layers</span><br><span class="line">        trans_layer_list = list()</span><br><span class="line">        for (x_t, t) in zip(arm_sources, self.trans_layers):</span><br><span class="line">            trans_layer_list.append(t(x_t))</span><br><span class="line">        # fpn module</span><br><span class="line">        trans_layer_list.reverse()</span><br><span class="line">        arm_sources.reverse()</span><br><span class="line">        for (t, u, l) in zip(trans_layer_list, self.up_layers, self.latent_layrs):</span><br><span class="line">            x = F.relu(l(F.relu(u(x) + t, inplace=True)), inplace=True)</span><br><span class="line">            obm_sources.append(x)</span><br><span class="line">        obm_sources.reverse()</span><br><span class="line">        for (x, l, c) in zip(obm_sources, self.odm_loc, self.odm_conf):</span><br><span class="line">            obm_loc_list.append(l(x).permute(0, 2, 3, 1).contiguous())</span><br><span class="line">            obm_conf_list.append(c(x).permute(0, 2, 3, 1).contiguous())</span><br><span class="line">        obm_loc = torch.cat([o.view(o.size(0), -1) for o in obm_loc_list], 1)</span><br><span class="line">        obm_conf = torch.cat([o.view(o.size(0), -1) for o in obm_conf_list], 1)</span><br><span class="line"></span><br><span class="line">        # apply multibox head to source layers</span><br><span class="line"></span><br><span class="line">        if test:</span><br><span class="line">            if self.use_refine:</span><br><span class="line">                output = (</span><br><span class="line">                    arm_loc.view(arm_loc.size(0), -1, 4),  # loc preds</span><br><span class="line">                    self.softmax(arm_conf.view(-1, 2)),  # conf preds</span><br><span class="line">                    obm_loc.view(obm_loc.size(0), -1, 4),  # loc preds</span><br><span class="line">                    self.softmax(obm_conf.view(-1, self.num_classes)),  # conf preds</span><br><span class="line">                )</span><br><span class="line">            else:</span><br><span class="line">                output = (</span><br><span class="line">                    obm_loc.view(obm_loc.size(0), -1, 4),  # loc preds</span><br><span class="line">                    self.softmax(obm_conf.view(-1, self.num_classes)),  # conf preds</span><br><span class="line">                )</span><br><span class="line">        else:</span><br><span class="line">            if self.use_refine:</span><br><span class="line">                output = (</span><br><span class="line">                    arm_loc.view(arm_loc.size(0), -1, 4),  # loc preds</span><br><span class="line">                    arm_conf.view(arm_conf.size(0), -1, 2),  # conf preds</span><br><span class="line">                    obm_loc.view(obm_loc.size(0), -1, 4),  # loc preds</span><br><span class="line">                    obm_conf.view(obm_conf.size(0), -1, self.num_classes),  # conf preds</span><br><span class="line">                )</span><br><span class="line">            else:</span><br><span class="line">                output = (</span><br><span class="line">                    obm_loc.view(obm_loc.size(0), -1, 4),  # loc preds</span><br><span class="line">                    obm_conf.view(obm_conf.size(0), -1, self.num_classes),  # conf preds</span><br><span class="line">                )</span><br><span class="line"></span><br><span class="line">        return output</span><br><span class="line"></span><br><span class="line">    def load_weights(self, base_file):</span><br><span class="line">        other, ext = os.path.splitext(base_file)</span><br><span class="line">        if ext == &#x27;.pkl&#x27; or &#x27;.pth&#x27;:</span><br><span class="line">            print(&#x27;Loading weights into state dict...&#x27;)</span><br><span class="line">            self.load_state_dict(torch.load(base_file, map_location=lambda storage, loc: storage))</span><br><span class="line">            print(&#x27;Finished!&#x27;)</span><br><span class="line">        else:</span><br><span class="line">            print(&#x27;Sorry only .pth and .pkl files supported.&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def build_net(size=320, num_classes=21, use_refine=False):</span><br><span class="line">    if size != 320:</span><br><span class="line">        print(&quot;Error: Sorry only SSD300 and SSD512 is supported currently!&quot;)</span><br><span class="line">        return</span><br><span class="line"></span><br><span class="line">    return RefineSSD(size, num_classes=num_classes, use_refine=use_refine)</span><br></pre></td></tr></table></figure><h2 id="refinedet">RefineDet++</h2><p><a href="https://ieeexplore.ieee.org/document/9058700">paper</a>；</p><p><a href="https://www.bilibili.com/video/BV1Dt411p7TN?from=search&amp;seid=12388514684040581306">video</a>；</p><p>原作者对CVPR论文进行了丰富，整体结构没什么区别，主要不同是在第二阶段的分类和回归中使用AlignConv来进行操作。</p><p>这样设计的原因是修正后的anchor和特征之间存在不对齐的问题。回顾下经典的two-stage目标检测器faster rcnn，先利用anchor找出修正原图的proposal，然后利用ROI Pooling在特征图上抠出修正后的proposal对应的特征区域，RPN和fast rcnn阶段没有直接的联系。这样的话可以保证每次回归都是在对应的特征上进行，不容易被干扰。one-stage检测器由于没有这个区域抠取的操作，只是在同样的特征图上进行，分类和回归，每个特征图上的像素点可能设置了不同大小的anchor，而该特征图对应的感受野是一定的，所以不一定可以让检测效果好，SSD的多尺度特征图预测以及FPN可以在一定程度上解决该问题。在refinedet这里，第二阶段利用的特征图来自于第一阶段，在位置上没做改变，所以还是在原始的位置进行预测，但是第一阶段已经对anchor进行修正，它所对应的特征可能已经偏移了，所以依然没解决特征不对齐的问题。后来图森的AlignDet对二阶段的卷积做了处理，优化了refinedet的检测结果，其中相关的知乎问题解释了refinedet的这个问题，链接在<a href="https://www.zhihu.com/question/338959309/answer/780051681">此</a>，有关AlignDet和RePoints后面会接着讲。</p><p>实际上，目标检测中的Feature Alignment是目前提及比较多的问题，参考<a href="https://blog.csdn.net/weixin_42096202/article/details/105178855">1</a>的总结，主要分为两个部分：</p><p>1.分类和回归的不匹配，大意是分类和回归我们不应该用同样的特征，毕竟不是同一个任务，两者对特征的精细度要求也不同，像faster rcnn最后拿了ROI Pooling的特征之后共享给了分类和回归任务；</p><p>2.anchor based方法由于预设了不同尺寸，对于一个特征图来说，感受野固定，特征不对齐；一阶的级联回归，如果使用同样位置的特征图，修正后的anchor对应的区域已经发生改变，此时第二阶段的特征区域却没有对应改变；</p><p>这篇<a href="https://zhuanlan.zhihu.com/p/114700229">博客</a>根据以上两个问题做了一个论文综述。在这里具体细节和方法暂时先不展开谈，等后续看完相关论文，搞清楚了这些问题再具体开一篇博客详说。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/ssd-refinedet-paper/refinedet++.JPG" alt="refinedet++结构和alignconv操作细节"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/ssd-refinedet-paper/AlignConv.JPG" alt="alignconv设计背景"></p><p>论文中给出的AlignConv具体实现步骤如下：</p><blockquote><p>To this end, we design an alignment convolution operation(AlignConv), which uses the aligned feature from the refined anchors  to  predict  multi-class  labels  and  regress  accurate object locations, as shown in Fig. 3©. Specifically, the newly designed AlignConv operation conducts convolution operation based on computed offsets from the refined anchors. Denoting each refined anchor with a four-tuple (x,y,h,w) that specifies the  top-left  corner  (x,y)  and  height  and  width  (h,w),  theAlignConv is conducted as follows. <strong>First, after taking the re-fined anchors from ARM, we equally divide the regions of the refined anchors into K×K parts</strong>, where K is the kernel size of convolution operation. The center of each part is computed as: for the part at i-th row and j-th column, the center locationis<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mfrac><mrow><mo stretchy="false">(</mo><mn>2</mn><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mi>w</mi></mrow><mrow><mn>2</mn><mi>K</mi></mrow></mfrac><mtext>，</mtext><mi>y</mi><mo>+</mo><mfrac><mrow><mo stretchy="false">(</mo><mn>2</mn><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mi>h</mi></mrow><mrow><mn>2</mn><mi>K</mi></mrow></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x+\frac{(2i-1)*w}{2K}，y+\frac{(2i-1)*h}{2K})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mbin mtight">∗</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord cjk_fallback">，</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mbin mtight">∗</span><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span>. <strong>Second, we multiply the feature values at the K×K part centers in refined anchors with the corresponding parameters of the convolution filter</strong>, see Fig. <a href="http://1.In">1.In</a>  this  way,  we  successfully  extract  more  accurate  features that  are  aligned  to  the  refined  anchors  for  object  <a href="http://detection.In">detection.In</a> contrast to existing deformable convolution methods [65]–[67] that learn the offsets by convolution operation with extra parameters, our AlignConv conducts the convolution with the guidance from the refined anchors of the ARM, which is more suitable for RefineDet++ and produces better performance.</p></blockquote><p>大意就是根据ARM修正后的anchor区域，来对ODM的卷积偏移一个offset，根据修正的anchor区域来调整卷积区域，不再是原来的的区域，类似可变形卷积，但是比较奇怪的是，作者在论文中也用可变形卷积代替，结果反而更差了。加了这个操作后，速度下降明显，毕竟割裂了连续的卷积操作，精度大概涨了1个点左右。</p><h2 id="aligndet">AlignDet</h2><p>repoints</p><p>Cascade RetinaNet解释了这个问题</p><p><a href="https://zhuanlan.zhihu.com/p/78026765">https://zhuanlan.zhihu.com/p/78026765</a></p><p><a href="https://zhuanlan.zhihu.com/p/114700229">https://zhuanlan.zhihu.com/p/114700229</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;ssd&quot;&gt;SSD&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://arxiv.org/pdf/1512.02325.pdf&quot;&gt;paper&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;参考：&lt;a href=&quot;https://zhuanlan.zhihu.com/p/33544892&quot;&gt;1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SSD是一篇写得非常好，读起来也非常舒服的文章。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;写于fater rcnn之后，所以anchor不是新思想，新思想是多个尺寸的feature map然后分别设置不同尺寸的anchor去预测和回归，有特征金字塔的萌芽&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Our improvements include using a small convolutional filter to predict object categories and offsets in bounding box locations, using separate predictors (filters) for different aspect ratio detections, and applying these filters to multiple feature maps from the later stages of a network in order to perform detection at multiple scales&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/ssd-refinedet-paper/SSD.JPG&quot; alt&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="论文阅读" scheme="http://densecollections.top/categories/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="computer vision" scheme="http://densecollections.top/tags/computer-vision/"/>
    
    <category term="deep learning" scheme="http://densecollections.top/tags/deep-learning/"/>
    
    <category term="object detection" scheme="http://densecollections.top/tags/object-detection/"/>
    
  </entry>
  
  <entry>
    <title>侯捷c++STL体系结构与内核分析</title>
    <link href="http://densecollections.top/posts/houjieC++STL/"/>
    <id>http://densecollections.top/posts/houjieC++STL/</id>
    <published>2020-06-12T08:24:02.000Z</published>
    <updated>2022-09-09T03:26:56.538Z</updated>
    
    <content type="html"><![CDATA[<h2 id="about">About</h2><p><a href="https://www.bilibili.com/video/BV1db411q7B8">videos</a>;</p><p><a href="https://pan.baidu.com/s/1DkCctgH1BO2Cs0NuUcyHhg">课件，密码kr24</a>;</p><h2 id="认识headers-版本-重要资源">认识headers、版本、重要资源</h2><p>以STL为目标探讨泛型编程。</p><blockquote><p>使用一个东西，却不明白它的道理，不高明！</p></blockquote><ul><li><p>level 0: 使用C++标准库；</p></li><li><p>level 1: 认识C++标准库（胸中自有丘壑，体系结构应当建立起来）；</p></li><li><p>level 2: 良好使用C++标准库；</p></li><li><p>level 3: 扩充C++标准库；</p></li></ul><p>Standard Template Library (<a href="https://blog.csdn.net/qq_44770155/article/details/97882816">6大部件</a>：Container(容器) 各种基本数据结构；Adapter(适配器) 可改变containers、Iterators或Function object接口的一种组件；Algorithm(算法) 各种基本算法如sort、search…等；Iterator(迭代器) 连接containers和algorithms；Function object(函数对象)；Allocator(分配器)) 加上其他一些零碎的东西构成了C++ Standard Library.</p><span id="more"></span><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/STL.JPG" alt></p><h2 id="stl体系结构基础介绍">STL体系结构基础介绍</h2><p>STL六大部件（component）：</p><p>数据在容器（内存的事情我们不必管，由分配器支持），处理数据在算法，连接之间的桥梁是迭代器（泛化的指针）。仿函数可以处理类之间的一些操作，适配器转换。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/six_component.JPG" alt="STL六大部件"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int stl_component()</span><br><span class="line">&#123;</span><br><span class="line">  int ia[6] = &#123;27, 210, 12, 47, 109, 83&#125;;</span><br><span class="line">  //用到了容器和分配器定义一个vector</span><br><span class="line">  vector &lt;int, allocator&lt;int&gt; &gt; vi(ia, ia+6);</span><br><span class="line">  //用到了算法，迭代器，函数适配器，函数对象</span><br><span class="line">  // vi.begin()和vi.end()迭代指向vi中的元素</span><br><span class="line">  // not1是negator，否定less的作用，变成了大于等于40的数</span><br><span class="line">  // bind2nd绑定了less比较的第二个对象，固定在40</span><br><span class="line">  cout &lt;&lt; count_if(vi.begin(), vi.end(),</span><br><span class="line">         not1(bind2nd(less&lt;int&gt;(), 40))) &lt;&lt; endl;</span><br><span class="line"> </span><br><span class="line">  return 0;  </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简单提及时间复杂度。</p><p>“前闭后开”曲间，标准库规定容器迭代器的最后一个元素取不到，即[iter.begin(), iter.end() )，此外容器也不一定是连续空间，比如链表。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Container&lt;T&gt; c;</span><br><span class="line">...</span><br><span class="line">Container&lt;T&gt;::iterator ite = c.begin();</span><br><span class="line">// for语句的语法规定，括号里面一定要有两个分号，分开三个句子。</span><br><span class="line">//第一个句子是初始化用的，如果没有初始化的必要，就视为空语句，加上分号；</span><br><span class="line">//第二个句子作为判断条件，如果没有判断条件，也视为空语句，后加一个分号。这种情况，会无限循环，相当于while(1)。如果for的执行部分，就是&#123;&#125;之间有break语句，可以退出；</span><br><span class="line">//第三个句子是执行部分执行完毕再执行的语句；无则视为属空语句；此时不用再加分号</span><br><span class="line">for (; ite != ite.end(); ++ite)</span><br><span class="line">   ...</span><br></pre></td></tr></table></figure><p>建议使用range-based for statement (since c++11):</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for (decl:coll)&#123;</span><br><span class="line">statement</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for (int i : &#123;2,3,5,7,9,13&#125;) &#123;</span><br><span class="line">  std::cout&lt;&lt;i&lt;&lt;std::endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="容器与分类之各种测试-1">容器与分类之各种测试（1）</h2><p>容器-结构与分类</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/containers_classes.JPG" alt="标红的是C++11新加入的特性"></p><p>1.sequence containers 序列式：</p><p>array（不可扩充）, vector（分配器动态扩容）, deque（前后快速插入）, list（双向循环链表）, forward-list（单向链表）；</p><p>2.associative containers 关联式，便于查找：</p><p>set/multiset, map/multimap, 两者编译器所带标准库都用红黑树实现。set只带key，map带有key和value，两者意思与python的set和dict类似。multiset/multimap代表key是可以重复的。</p><p>3.unordered containers (since c++11)：</p><p>不定序，hash table，其实也可以属于一种associative containers.内部采用链表法解决哈希冲突。</p><hr><p>使用容器array示例：</p><p>array必须指定固定大小，不能是变量大小；</p><p><code>array.data()</code>首地址；</p><p><code>clock()</code>得到的是ms；</p><p><code>snprintf()</code>是c标准库函数，在这里是将数字转成字符串，具体可参考<a href="https://blog.csdn.net/qq_34707315/article/details/77895735#commentBox">此</a>；</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/array_test1.JPG" alt="在固定大小的array中随机生成数并出初始化填充，然后快排再二分查找指定的数字，并打印出消耗的时间"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/array_test2.JPG" alt></p><h2 id="容器与分类之各种测试-2">容器与分类之各种测试（2）</h2><p>侯捷老师给的一些建议：</p><p>1.通过给每个测试定义不同的namespace，使得每一部分都是独立的，方便测试。</p><p>2.用到变量的时候去定义，然后缩排方便寻找。</p><hr><p>使用容器vector：</p><p><code>vector.push_back()</code>把元素放到尾巴；</p><p>vector 2倍扩容增长空间；</p><p><code>vecotr.size()</code>元素个数；</p><p><code>vector.capacity()</code>容器容量，一般比size的结果大；</p><p><code>try, catch</code>目的是了解当前是否可以抓取到指定的内存大小；</p><p><code>::find</code>中双冒号代表全局的，find()是模板函数（循序查找），返回的是iterator;</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/vector_test1.JPG" alt="定义一个vector，然后不断填充随机数初始化，然后利用模板函数find和二分查找去搜索指定的数，比较两者的时间差异"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/vector_test2.JPG" alt></p><h2 id="容器与分类之各种测试-3">容器与分类之各种测试（3）</h2><p>1.使用容器list:</p><p>容器的第二个参数是分配器，一般我们不写，使用默认的分配器分配内容；</p><p><code>list.max_size()</code></p><p><code>list.size()</code></p><p><code>list.front()</code></p><p><code>list.back()</code></p><p><code>list.sort()</code>对其进行排序</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/list_test.JPG" alt></p><p>2.使用容器forward_list:</p><p><code>forward_list.push_front</code>只提供单向的放数据</p><p><code>forward_list.max_size()</code></p><p><code>forward_list.front()</code></p><p>没有<code>forward_list.back()</code>和<code>forward_list.size()</code></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/forward_list_test.JPG" alt></p><p>3.使用容器slist:</p><p>非C++11标准库；</p><p><code>#include&lt;ext\list&gt;</code>头文件包含。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/slist.JPG" alt></p><p>4.使用容器deque:</p><p>双向开口，可进可出。</p><p>分段连续的buffer构成的，但是给使用者感觉是连续的，内部其实不是，分段连续，buffer内部连续。每次扩充一个buffer.</p><p>vector扩充方便，但是容易浪费，list每次扩充一个节点，但是查找麻烦，deque每次一个buffer,相对折衷。</p><p><code>deque.size()</code></p><p><code>deque.front()</code></p><p><code>deque.back()</code></p><p><code>deque.max_size()</code></p><p>没有自己的sort()函数</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/deque.JPG" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/deque_test.JPG" alt></p><p>5.使用容器stack:</p><p><code>stack.pop()</code></p><p><code>stack.push()</code></p><p><code>stack.size()</code></p><p><code>stack.top()</code></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/stack_test.JPG" alt></p><p>6.使用容器queue:</p><p><code>queue.push()</code></p><p><code>queue.pop()</code></p><p><code>queue.front()</code></p><p><code>queue.back()</code></p><p><code>queue.size()</code></p><p>stack和queue用的deque，因此在技术上称容器的adapter, 不提供iterator</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/queue_test.JPG" alt></p><h2 id="容器之分类与各种测试-4">容器之分类与各种测试（4）</h2><p>关联式容器</p><p>1.使用容器multiset:</p><p>key就是value, 可插入相同元素，内部红黑树组织数据</p><p><code>multiset.insert()</code></p><p><code>multiset.size()</code></p><p><code>multiset.max_size()</code></p><p><code>multiset.find()</code>容器自带find()函数</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/multiset_test.JPG" alt></p><p>2.使用容器multimap:</p><p>，内部使用红黑树，key可以重复，指定key和value的数据类型，<code>multimap&lt;long, string&gt; c;</code></p><p><code>multimap.insert()</code>, <code>c.insert(pair&lt;long,string&gt;(i,buff))</code>，利用pair插入和取出</p><p><code>multimap.find()</code></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/multimap_test.JPG" alt></p><p>3.使用容器unordered_multiset:</p><p>内部使用hash_table, 链表法解决哈希冲突，一个篮子bucket后续可以挂链表</p><p><code>load_facotr</code>载重因子</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/unordered_multiset_test.JPG" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/unordered_multiset_test2.JPG" alt></p><p>4.使用容器unordered_multimap:</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/unordered_multimap_test.JPG" alt></p><p>5.使用容器set:</p><p>内部用红黑树实现，元素不允许相同</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/set_test.JPG" alt></p><p>6.使用容器map:</p><p>内部用红黑树实现，key不允许相同</p><p><code>c[i] = string(buf)</code>，与之前的multimap插入元素不同，可以用这种特殊写法，在内部会合成pair</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/map_test.JPG" alt></p><p>7.使用容器unordered_set:</p><p>内部用hash_table</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/unordered_set_test.JPG" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/unordered_set_test2.JPG" alt></p><p>8.使用容器unordered_map:</p><p>内部用hash_table</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/unordered_map_test.JPG" alt></p><h2 id="分配器测试">分配器测试</h2><p>使用分配器：</p><p>不使用标准库自带的std::allocator, 调用GNU c++编译器的allocator</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/allocator_1.JPG" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/allocator_2.JPG" alt></p><h2 id="oop-vs-gp">OOP vs. GP</h2><p>object-oriented programming and generic programming, 面对对象编程与泛型编程</p><p>OOP企图将data和methods放在一起，GP却将data和methods分开来</p><p>算法通过迭代器操作容器数据</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/GP_1.JPG" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/GP_2.JPG" alt></p><h2 id="操作符重载和模板-泛化-全特化-偏特化">操作符重载和模板（泛化，全特化，偏特化）</h2><p>再次强调和复习operator overloading，templates（类模板，成员模板，函数模板；模板的泛化，全特化和偏特化）。</p><p>1.操作符重载的情况主要是为了满足用户自己定义类的一些操作，可以在相关网站查询，并不是每个操作符都可以重载。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/operator_overloading_1.JPG" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/operator_overloading_2.JPG" alt></p><p>2.模板</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/class_template.JPG" alt="类模板，指定类参数类型"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/function_template.JPG" alt="函数模板，自动推导传入函数的参数类型并根据作相应的操作符调用"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/member_template.JPG" alt="成员模板"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/specialization.JPG" alt="在模板中，对于某种类型的做特殊处理（比如此时会有更适合和高效的处理），调用时也会自动调用特化的版本，标志template&lt;&gt;为空声明"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/partial_specialization.JPG" alt="部分模板参数指定为某类型时有特殊处理，只绑定其中一个模板参数，标志template&lt;&gt;为非空声明"></p><h2 id="allocator">Allocator</h2><p>不建议你单独使用分配器。</p><p><code>operator new()</code>和底层的内存分配函数<code>malloc()</code></p><p><code>malloc()</code>分配给申请内存大小的空间时会额外给一些空间放必要的东西，有一些额外的开销cookie，<code>free</code>释放内存。但是一般使用时，由于申请的size不大，所以这些额外的空间占所有的比例比较大，所以是个缺陷。</p><blockquote><p>P11总结一下，allocator就是用来分配内存的，最重要的两个函数是allocate和deallocate，就是用来申请内存和回收内存的，外部（一般指容器）调用的时候只需要知道这些就够了。内部实现，目前的所有编译器都是直接调用的::operator new()和::operator delete()，说白了就是和直接使用new运算符的效果是一样的，所以老师说它们都没做任何特殊处理。G2.9里的那个更好的allocator，在老师的另一门课《C++内存管理》里讲得特别细，大概从P23开始讲细节，更早的几P也有使用用例。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p11_1.JPG" alt="malloc开辟内存示意"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p11_2.JPG" alt="一般的VC等编译器只是将malloc包装成allocator，然后调用，缺陷没有改变"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p11_3.JPG" alt="GNU2.9使用了alloc这个函数，利用16个链表来分配申请的size的内存，减少了不必要的cookie"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p11_4.JPG" alt="alloc 16个链表示意。每个代表8个字节长度，从8-128个字节"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p11_5.JPG" alt="但是到了GNU4.9时候又抛弃了alloc，转而回到了原始的有缺陷的设计。不过依然可以调用GNU命名空间中的_pool_alloc来使用2.9版本中的alloac函数"></p><h2 id="容器之间的实现关系与分类">容器之间的实现关系与分类</h2><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p12_1.JPG" alt="容器之间的关联，复合关系，不是继承，只是会有某些容器的功能"></p><h2 id="深度探索list-上">深度探索list（上）</h2><p>最具代表性的容器，双向循环列表，优先介绍。</p><p>定义自己的迭代器iterator， 其中要有typedef和operator reloading（操作符重载）</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p13_1.JPG" alt="list的iterator定义"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p13_2.JPG" alt="提到了迭代器++所体现的智能指针的作用，取出prev或next指针赋给node。其中要特别注意前++和后++的区别，由于C++中整数连续后++是违法的，所以这里操作符重载后++时返回原值，也造成迭代器后++违法的现象"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p13_3.JPG" alt="取出list中的data"></p><h2 id="深度探索list-下">深度探索list（下）</h2><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p14_1.JPG" alt="G2.9和G4.9版本链表源代码的比较，一处修改了iterator模板传入参数个数，一个是修改指针指向自己这个类，而非void然后再强制转换"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p14_2.JPG" alt="容器的一般都是满足左闭右开的特点，也就是最后一个值取不到，所以这里最后再环状末尾加了一个空的节点，但是指向begin节点"></p><h2 id="迭代器的设计原则和iterator-traits的作用与设计">迭代器的设计原则和Iterator Traits的作用与设计</h2><p>容器用域存储数据，算法用以处理数据，而迭代器iterator就是沟通容器和算法的桥梁。上一讲提到，容器需要自己定义iterator，并且写出<strong>五个</strong>规定的typedef，这个就是为了算法询问iterator，得出这样的特性然后进行定制的数据操作。但是如果iterator不是类，无法写出typedef的时候，就需要traits这样的中间变量来让算法得出迭代器的特性。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p15_1.JPG" alt="算法询问迭代器的特性，但是迭代器只是指针的话就无法直接询问"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p15_2.JPG" alt="利用traits萃取机来充当中间人的角色"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p15_3.JPG" alt="如果迭代器是类，直接询问得出结果，否则利用偏特化替迭代器回答。其中注意const的使用"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p15_4.JPG" alt="traits传递完整的五个必须的特性"></p><p>除了iterator traits之外，还有各式的traits, 包括type traits, char traits, pointer traits等等。</p><h2 id="vector深度探索">Vector深度探索</h2><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p16_1.JPG" alt="vector不在原地扩充，而是请求重新分配2倍大小的空间"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p16_2.JPG" alt="申请空间并搬运，这里的insert_aux函数还可能被其他函数调用，所以又重新判断了一次"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p16_3.JPG" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p16_4.JPG" alt="vector的iterator就是个指针，因为是连续空间，所以利用traits为算法传递typedef. G4.9版本中对vector做了多层推导，所以可读性不高，也被侯老师吐嘈。"></p><h2 id="array-forward-list深度探索">array, forward_list深度探索</h2><p>把array包装成容器，然后利用指针当iterator进行操作。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p17_1.JPG" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p17_2.JPG" alt="单向链表与前面的双向循环链表类似，只不过没有prev的指针，因此迭代器没有--操作"></p><h2 id="deque-queue和stack深度探索-上">deque, queue和stack深度探索（上）</h2><p>双向队列deque在上层调用时表现是连续的，但是底层实现是用分段连续的buffer来实现的，通过迭代器和操作符重载来营造连续插入或弹出的假象。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p18_1.JPG" alt="一个迭代内部有四个指针：cur,first, last, node，其中前三个指针是针对buffer而言的，而node指的是当前deque中用到了哪个buffer"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p18_2.JPG" alt="deque class内部有四个数据，start和finish是类似begin()和end()的两个首尾迭代器，一般的容器都会有，map指向这个包含buffer的deque，map_size表示大小，所以整个deque大小是2x16+2x4=40 bytes. 此外，G2.9还可以预设buff_size大小，否则的话按照默认规则设定。"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p18_3.JPG" alt="deque的迭代器设计，其类型是可以随意访问的iterator，map pointer是指向指针的指针，因此deque内部存着buffer的node指针"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p18_4.JPG" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p18_5.JPG" alt="deque的元素插入，是将左右两边比较短的那一部分进行搬移"></p><h2 id="deque-queue和stack深度探索-下">deque, queue和stack深度探索（下）</h2><p>deque内部通过iterator操作符重载并做一些处理来进行表面上连续空间的模拟。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p19_1.JPG" alt="back代表最后一个元素，而容器中的finish是开的，取不到，所以需要减去1得到最后一个元素"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p19_2.JPG" alt="dwque元素size计算，前面的buffer后面的buffer元素不一定是满的（双向的特点），只有中间是满的，所以分三步计算"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p19_3.JPG" alt="迭代器++和--操作符重载"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p19_4.JPG" alt="迭代器跳着加的操作符重载"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p19_5.JPG" alt="迭代器跳着减的操作转为跳着加的操作"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p19_6.JPG" alt="G4.9版本的deque，其中取消了用户对buffsize的预设"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p19_7.JPG" alt="利用deque模拟队列queue"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p19_8.JPG" alt="用deque模拟stack"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p19_9.JPG" alt="queue和stack也可用list模拟，但是默认是deque，因为速度较快"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p19_10.JPG" alt="queue不可用vector模拟，以为vector没有pop_front操作"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p19_11.JPG" alt="queue和stack都不可用map或set模拟，因为没有该数据结构弹出元素这一操作"></p><h2 id="rb-tree深度探索">RB-Tree深度探索</h2><p>关联式查找容器的底层支撑结构。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p20_1.JPG" alt="这里红黑树的header不是根节点，是空的，为了容器前闭后开处理方便"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p20_2.JPG" alt="红黑树的五个模板参数，key和value是数据类型，keyofvalue代表如何从value取出key(value可能是key-data组成的pair)，compare代表key的比较函数"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p20_3.JPG" alt="四个模板参数的一个实例，其中key和value都是int类型，identity函数代表取key函数，不是C++标准库函数，是G2.9的函数"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p20_4.JPG" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p20_5.JPG" alt="G4.9与2.9版本的红黑树使用上改了一些命名字母"></p><h2 id="set-multiset深度探索">Set, Multiset深度探索</h2><p>set和multiset底层利用Rb_tree实现，所以基本上它们的事内部都是交给红黑树去完成，所以又被叫成container adapter. 其中需要注意的是它们中的key和value是一样的，所以不能被改变，否则key就会变化。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p21_1.JPG" alt="set和multiset"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p21_2.JPG" alt="set具有三个模板参数，因为value和keyofcompare只有一种默认情况。其中const_iterator的类型只能用于读取容器内的元素，但不能改变其值，对const_iterator类型解引用，得到的是一个指向const对象的引用。"></p><h2 id="map-multimap深度探索">Map, Multimap深度探索</h2><p><a href="https://www.cnblogs.com/ChinaHook/p/6985518.html">related blog</a></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p22_1.JPG" alt="map和multimap使用红黑树实现key-value的存储，且不允许改变key值"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p22_2.JPG" alt="map的模板参数，其中会将key-data打包成pair存入Rb_tree中当作value，且为了防止key不被修改，在key前加了const关键字"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p22_3.JPG" alt="map可以使用[]操作符和lower_bound函数插入key-value，如果key不存在会返回一个合适的位置，但是这个性质multimap没有，只能用insert函数插入pair(), 应该是因为multimap可以有多个相同的key，所以用[]操作符可能无法加入相同的key."></p><h2 id="hash-table深度探索">Hash Table深度探索</h2><p>另一个关联式容器哈希表，或散列表，是一种常用的存储较多数据的数据结构（减少查找时间），其中难点在于hasd function的选择和对对哈希碰撞的处理（一般是开放式寻址法或者链表法）。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p23_1.JPG" alt="hash table示意，利用bucket和list来存储数据。其中G2.9硬编码了一系列质数作为扩充后的长度，但是G4.9没有继续沿用了"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p23_2.JPG" alt="hashtable的6个模板参数，其中key指定篮子，value是pair，HashFcn是哈希函数，映射要存的object为key，ExtractKey是从存入的value pair中取出key的方式，同Rb_tree类似，EqualKey是判断key是否相等的函数。hashtable的大小为1+1+1+12+4=19个字节，为了对齐取4的倍数，为20 bytes. 其迭代器包含指向当前元素位置的指针和指向当前hashtable的指针。"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p23_3.JPG" alt="hashtable使用示例，其中eqstr是自己写的函数，调用C中比较char的函数strcmp，然后根据其返回的int值（1，0，-1）返回bool值"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p23_4.JPG" alt="c++标准库中偏特化了一些hash函数"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p23_5.JPG" alt="但是G2.9内没有提供针对string的现成的hash函数，只有针对C的字符串的哈希函数。到了G4.9版本，基本的数据类型都有了自己的hash function, 包括string"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p23_6.JPG" alt="找到存放的位置key，这里做了取余处理，也就是对编码出的hash值对bucket长度取余"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p23_7.JPG" alt="上面的示例程序计算hash key示意，注意还有一个取余操作。在这里哈希表是单向链表存储，实际有的可能是双向链表存储"></p><h2 id="unordered容器概念">Unordered容器概念</h2><p>利用hash table实现unordered_set, unordered_multiset, unordered_map, unordered_multimap容器。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p26_1.JPG" alt="四个unordered容器的模板参数"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p26_2.JPG" alt="回顾之前利用unordered_set存储随机数的例子，验证两个事情：1. hashtable的bucket数量比要存的object的数量多；2. 扩容后的长度不一定是之前指定的质数了。"></p><h2 id="算法的形式">算法的形式</h2><p>算法通过迭代器联通容器，进行数据处理和函数运行。从语言层面上讲，容器是class template, 而算法是function template, 其中有些算法还可传入你定制的准则criterion, 比如sort函数的比较函数。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p27_1.JPG" alt="STL中算法algorithm的作用"></p><h2 id="迭代器的分类">迭代器的分类</h2><p>STL容器中总共会用到三种种类，分别是random_access_iterator_tag (array, vector, deque), bidirectional_iterator_tag(list, rb_tree), forward_iterator_tag(forward_list, hashtable可能是) 这三种。多出来的两种input_iterator_tag和output_iterator_tag属于istream和ostream. 五种之间是继承关系，同时用这种tag的方式，非简单的12345.</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p28_1.JPG" alt="各种容器的迭代器种类"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p28_2.JPG" alt="打印出各个容器的迭代器种类。右边的容器(typename)::iterator()表示临时对象，传给display_category()函数作为具体的模板参数，然后利用萃取机traits得出出入的迭代器的category，然后利用函数重载传给具体的_display_category()，打印出结果。istream和ostream利用直接指定的方式打印出。"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p28_3.JPG" alt="也可直接利用C++的typeid取出迭代器的name属性，打印出类型名称。"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p28_4.JPG" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p28_5.JPG" alt></p><h2 id="迭代器类别对算法的影响">迭代器类别对算法的影响</h2><p>STL算法内部会利用迭代器的类别开辟出不同的处理分支，想尽方法达到最快的处理速度。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p29_1.JPG" alt="根据不同的迭代器类别计算其距离。主函数部分的inline语句会预先判断该迭代器是否有difference_type，如果有才会进行下一步。主函数利用萃取机得出的category当作临时对象调用次函数，虽然次函数只写了两种情况，但是其他的迭代器类型会根据继承关系进行调用，这样做就是为了方便，不必写出冗余的代码。"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p29_2.JPG" alt="举了advance的例子（前进），与之前的distance计算类似，这里只不过把得出迭代器类型的语句包装成了一个小函数。"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p29_3.JPG" alt="举了第三个例子，copy函数。一般的思路是给出三个参数：要拷贝的起点和终点，以及拷贝到的起点，但是这里根据迭代器的类型，极尽所能做了很多的分支，优化到最快。memmove是C语言的底层比较安全的内存复制函数，trivial代表“不重要的‘，由标准库提供的type traits提供，目的为了决定哪一种拷贝赋值比较快。其中对判断语句的first!=last和n&lt;first-last都做了速度衡量，可以说是非常精炼了。"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p29_4.JPG" alt="举的第四个例子，destroy函数，与copy类似，也做了很多判断处理。"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p29_5.JPG" alt="第五个例子，unique_copy函数"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p29_6.JPG" alt></p><h2 id="算法源码剖析-几个例子">算法源码剖析（几个例子）</h2><p>举了几个C++标准库中的例子。表明与迭代器结合很紧密。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p30_1.JPG" alt="C++标准库的函数与C函数在形式上有些不同，是一种函数模板，并且与迭代器联系紧密"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p30_2.JPG" alt="第一个例子accumulate,累计函数，有两个版本，一种就是传入三个参数进行累加，另一种可以指定二元操作函数，进行定制的累计操作。在右边的代码示例中，利用了自定义函数传入和函数对象/仿函数重载operator()，两者都可以起作用，作为可被调用的对象。"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p30_3.JPG" alt="第二个例子for_each，跟第一个例子类似也使用了自定义函数和函数对象，同时强调C++11可以用range-based for statement进行操作"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p30_4.JPG" alt="第三个例子replace函数，replace单纯地根据相等替换数值,replace_if可以传入判断条件, replace_copy是在copy过程中替换旧值为新值。"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p30_5.JPG" alt="第四个例子count函数，count函数简单判断值相等进行加一操作，而count_if可以传入判断条件。在这里侯老师提到了C++标准库的这些函数虽然是全局的，但是不一定适用于所有的容器，有的容器可能有自己定义的同名成员函数，这个时候就要调用容器自己的对应函数。右边的例子表明不带其同名成员函数的容器可以调用C++标准库全局的这个函数，但是有了同名成员函数就要最好调用自己的。"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p30_6.JPG" alt="第五个例子find函数，这个在最开始容器使用测试时候使用过，属于全局函数，有些容器比如那几个关联式容器就有自己定制的find()函数"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p30_7.JPG" alt="第六个例子sort函数，其中提到了逆序迭代器。"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p30_8.JPG" alt="reverse iterator示意"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p30_9.JPG" alt="第七个例子二分搜索binary_search, 内部调用lower_bound函数取出位置。这里侯老师认为在查找时候应该进行一下开头检查，然后再根据结果选择进不进去查找。"></p><h2 id="仿函数和函数对象">仿函数和函数对象</h2><p>在前面一些的算法的使用中，已经见识到了函数对象/仿函数传入其中进行特殊的操作。在C++的STL中有三大类functors，分别是算术类，逻辑运算类和相对关系类。他们都继承了某个适当者，这样是为了后续利用适配器进行改造，而前提就是像algorithm对iterator一样利用traits询问问题，继承的作用就是为了融入STL，利用被继承者的typedef来回答问题。此外，GNU中也会有一些仿函数供用户使用，比如前面提到的<code>Identity</code>和<code>Select1st</code></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p31_1.JPG" alt="几个标准库仿函数示例，利用类的对象形式，重载了操作符()，并继承了二元变量操作binary_function"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p31_2.JPG" alt="举例前面自定义的仿函数，由于没有继承，所以后续无法融入STL进行适配"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p31_3.JPG" alt="仿函数的可适配条件就是需要挑选适当者进行继承"></p><h2 id="存在多种适配器">存在多种适配器</h2><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p32_1.JPG" alt="仿函数适配器与仿函数类似于算法与迭代器。把仿函数包成adapter给算法使用"></p><p>适配器可以认为具有一个桥梁作用：把某个底层B包装下做成A交给用户使用，但是内部仍然是调用B来运作。在C++中，适配器采用复合的方式获得某种功能，非继承。</p><p>容器适配器方面，典型的是stack和queue，它们内部都是内含了deque作为其底层容器，然后改造成具有自己特性和接口的容器。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p32_2.JPG" alt></p><h2 id="binder2nd-not1-bind">Binder2nd/not1/bind</h2><p>介绍了前面使用过的一个计数语句<code>cout &lt;&lt; count_if(vi.begin(), vi.end(), not1(bind2nd(less&lt;int&gt;, 40)))</code>，其中用到了算法，函数适配器和函数对象。</p><p><code>bind2nd</code>和<code>not1</code>都是函数适配器，用以修饰后面的函数并将其包装。<code>bind2nd</code>绑定第二实参，限制less函数调用时保持第二参数为40不变。修饰后的函数继续被<code>not1</code>修饰，将结果取反，也就是不小于40的数计数。</p><p><code>bind2nd</code>内部使用<code>binder2nd</code>函数，目的是为了简化用户使用难度，自动帮你推导<code>operation</code>模板参数。侯老师提到<code>binder1st</code>, <code>binder2nd</code>这些函数后来都被<code>bind</code>函数取代，但是旧的函数依旧可以使用。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p33_1.JPG" alt="bin2nd函数内部做了很多工作，包括继承一元参数函数unary_function，询问和操作符重载。注意这里的less()一开始是函数对象，属于typename加()的形式，非函数调用"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p34_1.JPG" alt="not1继续修饰bind2nd, 对pred取反"></p><p>在C++2.0版本中，<code>bind</code>函数取代了<code>bind2nd</code>，可以用来绑定函数/函数对象/成员函数和数据成员，同时可以指定绑定哪个参数，哪个参数不用绑定，利用诸如_1这样下划线加数字的形式（palceholder，占位符）代表第几个参数可以被后续调用再指明。<code>bind</code>可以指定一个模板参数，代表返回类型。更多的例子和示意见下面的图片。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p35_1.JPG" alt="右边举了几个用bind绑定的例子。fn_invert中my_divide的第一参数在后面，所以调用时是_1/_2，fn_rounding就指定了返回类型为int，bound_memfn绑定了函数为Mypair类中的multioly函数，允许用户传递数据，bound_memdata和bound_memdata2绑定函数为传出类中成员数据。最后的例子比较了bind2nd和bind使用的区别，其中cbegin中的c是const的意思"></p><h2 id="迭代器适配器reverse-iterator-inserter">迭代器适配器reverse_iterator/inserter</h2><p>Adapter在容器，仿函数和迭代器上都有使用。侯老师在这里举了两个例子，一个是前面用到过的reverse_iterator，逆序迭代器遍历方向，另一个是inserter，用来插入数据。在这里侯老师再次强调，adapter是把所有需要的东西系起来，打包好，然后供日后再用，起到一种修饰改造作用。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p36_1.JPG" alt="逆向迭代器内部也是调用正向迭代器，进行操作符重载，包装成想要的样子。"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p37_1.JPG" alt="inserter配合copy函数，通过对=操作符进行重载，实现在foo中选定位置进行bar数组的安插，而不是原先的覆盖赋值搬移。其中由于是list容器所以利用advance实现起始迭代器加3"></p><p>copy函数内部已经把流程写死了，就是按照指定的result迭代器，一步步搬移前面两个迭代器指定范围内的数据，后续的一些adapter改造操作，通过利用操作符重载各自解读，来实现自己定制的特性。</p><h2 id="x适配器ostream-iterator-istream-iterator">X适配器ostream_iterator/istream_iterator</h2><p>ostream和istream是两个特殊的迭代器，他们不属于一般的迭代器适配器，容器适配器和仿函数适配器中的任何一个，因此侯老师称之为X适配器，X代表一种未知。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p38_1.JPG" alt="利用out_it迭代器重载操作符=配合copy函数把数据传给cout打印出来"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p39_1.JPG" alt="eos可以认为是一个标志，代表cin的结束标志，没有实际参数，iit才是真正的属于输入数据的迭代器，参数为cin,与eos比较判断是否读入完成"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p39_2.JPG" alt="如果在例2的两个语句中间加“请输出数字”这样的提示语永远都不会出现，因为这个istream_iterator一旦创建就开始read，读一个传一个"></p><h2 id="一个万用的hash-function">一个万用的Hash Function</h2><p>hash function的制定可以没有任何规律，但是效果是一定要够乱，尽量减少碰撞。这里侯老师先以一个比较简单的customerhash函数开场，说明这样虽然简单，但是hash code比较容易重复。之后引出了C++标准库中的一个“万用的hash function”, 其中的重点是<strong>variadic templates</strong>, 这个是C++ 2.0中比较重要的新特性，大意就是可变的模板参数，常用…表示，比如下图中的序号1表示的函数，其中的<code>template&lt;typename...Types&gt;</code>就表示可以接受任意数量的模板参数。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p40_1.JPG" alt="右上角的hash_val函数先调用序号1函数，然后转到了序号2，序号2函数根据4中的hash_combine生成seed，然后再返回2继续拿出seed，不断在序号2和序号4中递归循环，参数会一个一个的拿做当seed，最后只剩一个的时候转去序号3函数，再通过4得到最后的hash code. ^=属于异或操作，0x9e3779b9是根据黄金比例来选取的。"></p><p><img src="/.top//p40_2.JPG" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p40_3.JPG" alt="G4.9版本中已经实现对string类型的hash function的偏特化"></p><h2 id="tuple用例">Tuple用例</h2><p>Tuple是可以将几个不同的数据结构的变量绑在一起的类型，使用上利用直接声明<code>tuple&lt;&gt;</code>创建，也可以利用<code>make_tuple()</code>实现，或者<code>tie</code>函数快速对变量进行赋值，如下图所示。其中可以对&lt;和=这样的操作符进行重载实现特性上的适配。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p41_1.JPG" alt="tuple的用法示例。最后的tuple_size,::value,tuple_element类似于traits的问答式。此外ppt中tuple的大小为32，侯老师没有给出合适的解释，按照后一页ppt中tuple存在套娃继承的思路，大小应该是4+4+4+16=28，如果最顶的tuple没有被继承，那个就是28+1=29，然后要对齐是4的倍数，结果就是32，但是因为被继承，不是单独的，所以就没有大小，还是28.这里我倾向认为是类似struct的大小计算，最后的大小要是complex大小的倍数，所以是32（但是还没有查证）."></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p41_2.JPG" alt="tuple内部实现了自动递归套娃继承，也是通过使用variadic templats可变模板参数完成。不断地划分head-tail构建父类，而且取相应tail地址的时候也是指向一整个模块，如右下角示意。"></p><h2 id="type-traits">type traits</h2><p>type traits主要是为了给用户自己写的类提供一些特征信息，用户自己不需要对其进行偏特化处理就可以自动获取，节省代码工作量，广泛用于C++泛型编程。这些特征信息通过询问的方式进行获取，指导该类后续的相应操作。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p42_1.JPG" alt="type_traits部分内容示例（G2.9版本）"></p><p>上图出现的Plain Old Data (POD)是一个类型（比如class或者struct），但是没有构造函数，析构函数，虚函数等成分。<a href="https://zh.wikipedia.org/wiki/POD_(%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1)_">维基百科</a>的解释是：</p><blockquote><p>POD类类型就是指class、struct、union，且不具有用户定义的构造函数、析构函数、拷贝算子、赋值算子；不具有继承关系，因此没有基类；不具有虚函数，所以就没有虚表；非静态数据成员没有私有或保护属性的、没有引用类型的、没有非POD类类型的（即嵌套类都必须是POD）、没有指针到成员类型的（因为这个类型内含了this指针）。</p></blockquote><p>stackoverflow有也相关<a href="https://stackoverflow.com/questions/146452/what-are-pod-types-in-c">问题</a>：</p><blockquote><p>In short, it is all built-in data types (e.g. <code>int</code>, <code>char</code>, <code>float</code>, <code>long</code>, <code>unsigned char</code>, <code>double</code>, etc.) and all aggregation of POD data. Yes, it’s a recursive definition. ;)</p><p>To be more clear, a POD is what we call “a struct”: a unit or a group of units that just store data.</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p42_2.JPG" alt="C++2.0的type_traits非常强大，包含不少特性信息，更多见：http://www.cplusplus.com/reference/type_traits/"></p><p>一个类如果没有没有涉及到指针，就可以不必写析构函数，使用编译器分配的默认的即可。像string内部带了指针，就必须写析构函数。此外，如果不是父类base，没有覆写的虚函数，也不必写virtual destructor.</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p42_3.JPG" alt="利用自定义的类Zoo来测试type traits, 其中刚开始的冒号语句为初始化列，后面四句分别为拷贝构造，搬移构造，拷贝赋值，搬移赋值，&amp;&amp;代表C++2.0新特性move,后面会专门谈到。delete也是2.0新特性，表示写出来但是摧毁掉，default表示使用默认方式，即使你不写也是使用编译器给的默认方式。中间的打印结果中，is_polymorphic为1代表这个类继承了虚函数，所以左边写了虚函数destructor, 相应的右边的结果也显示为1."></p><p>type traits通过模板实现，对类型进行操作，比如下面的例子，利用泛化，偏特化，传回真假值。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p43_1.JPG" alt="type traits实现is_void，拿掉cv，再借助helper，给出0/1值"></p><p>此外有些type traits实现的特性未曾出现于C++源码标准库。侯老师说这种情况可能就是编译器编译的时候来回答支持，不以源代码的方式呈现。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p43_2.JPG" alt></p><p><a href="https://blog.csdn.net/mogoweb/article/details/79264925">traits的理解</a></p><p><a href="https://blog.csdn.net/lihao21/article/details/55043881">type  traits 理解</a></p><h2 id="cout的操作符重载">cout的操作符重载</h2><p>cout为何可以接收各式各样的object？因为其内部对各类型都做了操作符重载。注意其返回类型为ostream&amp;，为了可以继续接收，非void返回类型。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p44_1.JPG" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p44_2.JPG" alt="G4.9版本中cout的操作符重载示例。sub_match代表正则表达式（字符串处理），bitset代表处理二进制对象的类型，类似位图。"></p><h2 id="movable的使用">movable的使用</h2><p>move是C++2.0一个比较重要的特性，其内部就是拷贝指针，属于浅拷贝，在type traits中见到的&amp;&amp;符号就代表move功能，而拷贝构造则是深拷贝。move的速度很快，侯捷老师也在课程中比较了加不加move功能对容器元素拷贝速度的影响，同时也给出了一些测试例子，但是在使用move时需要自己对元素的使用有清晰的认识，因为move是拷贝指针，等于是两个指针指向同一个位置，这个是危险的，C++内部会在move时做一些处理去规避这个行为带来的危险情况，所以move完之后的原始对象就最好不要再用了。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p45_1.JPG" alt="move的速度一般比拷贝构造快很多。这里侯捷老师测试了不少容器，他提到自己都是用insert函数来完成插值，但是像红黑树这样的容器是自动选择位置的，不允许用户手动指定位置。在这样的情况下insert函数也可以使用，但是具体的位置不一定是用户指定的。"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p45_2.JPG" alt="从下面的程序中可以看出，为了避免delete错误，move的对象在执行时会指向NULL，所以最好不要再去使用之前被拷贝的对象了。"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p45_3.JPG" alt="对于临时创建的对象，如果有move函数操作，编译器就会自动调用，像Mc11(c1)这样的语句，由于c1不是临时对象，编译器还是老老实实用的深拷贝，但是用户自己可以利用下一行的std::move进行安排编译器去用move操作，但是move之后，用户就要确保不要用到c1这个对象了。"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p45_4.JPG" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++STL/p45_5.JPG" alt="vector的move拷贝动作，利用swap函数对三个指针操作，所以相比较默认的拷贝构造速度会快上很多。"></p><p><a href="https://www.cnblogs.com/catch/p/3500678.html">C++的左值和右值</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;about&quot;&gt;About&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1db411q7B8&quot;&gt;videos&lt;/a&gt;;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://pan.baidu.com/s/1DkCctgH1BO2Cs0NuUcyHhg&quot;&gt;课件，密码kr24&lt;/a&gt;;&lt;/p&gt;
&lt;h2 id=&quot;认识headers-版本-重要资源&quot;&gt;认识headers、版本、重要资源&lt;/h2&gt;
&lt;p&gt;以STL为目标探讨泛型编程。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;使用一个东西，却不明白它的道理，不高明！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;level 0: 使用C++标准库；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;level 1: 认识C++标准库（胸中自有丘壑，体系结构应当建立起来）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;level 2: 良好使用C++标准库；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;level 3: 扩充C++标准库；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Standard Template Library (&lt;a href=&quot;https://blog.csdn.net/qq_44770155/article/details/97882816&quot;&gt;6大部件&lt;/a&gt;：Container(容器) 各种基本数据结构；Adapter(适配器) 可改变containers、Iterators或Function object接口的一种组件；Algorithm(算法) 各种基本算法如sort、search…等；Iterator(迭代器) 连接containers和algorithms；Function object(函数对象)；Allocator(分配器)) 加上其他一些零碎的东西构成了C++ Standard Library.&lt;/p&gt;</summary>
    
    
    
    <category term="课程记录" scheme="http://densecollections.top/categories/%E8%AF%BE%E7%A8%8B%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="侯捷" scheme="http://densecollections.top/tags/%E4%BE%AF%E6%8D%B7/"/>
    
    <category term="c++11" scheme="http://densecollections.top/tags/c-11/"/>
    
    <category term="STL" scheme="http://densecollections.top/tags/STL/"/>
    
  </entry>
  
  <entry>
    <title>yolo系列论文阅读笔记</title>
    <link href="http://densecollections.top/posts/yolopaperreading/"/>
    <id>http://densecollections.top/posts/yolopaperreading/</id>
    <published>2020-06-04T01:53:54.000Z</published>
    <updated>2022-09-09T03:28:37.783Z</updated>
    
    <content type="html"><![CDATA[<h2 id="about">About</h2><p>YOLO系列是one-stage目标检测种的重要成果，兼具速度与精度，同时包含了很多与时俱进的tricks，是理论与工程实践完美结合的产物。虽然Andrew Ng说YOLO论文比较难读，但是为了更好的梳理检测这一模块，理解实践这项工作必须要进行下去。</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzA4MjY4NTk0NQ==&amp;mid=2247485030&amp;idx=1&amp;sn=585864ef65bef3aa21c953506aae67f3&amp;chksm=9f80bcf0a8f735e680e552d973247d4577f974b3a5eff23d89779c3416cb8f360fa0ee6ccb4c&amp;scene=21#wechat_redirect">Pytorch YOLO项目推荐</a>。</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzA4MDExMDEyMw==&amp;mid=2247489178&amp;idx=1&amp;sn=c680b306f52f8a14b6dbd95dcf825cd9&amp;chksm=9fa861dea8dfe8c805849ea244a9d5a41c5800c2420ebe5ab59015e0e347106009a1b7503262&amp;mpshare=1&amp;scene=1&amp;srcid=0801DMwwN4jG1mIgJtRHCBbB&amp;sharer_sharetime=1596243161365&amp;sharer_shareid=4ed82b8c86f7bdeb368019cfe429ee62&amp;key=519b8bbaea533f94d6ea97b2ce92dec8fa25f479b15fcec13c3d4a8a930c7d67bcf1e2a1b5f384022df13a66b501b7961fcaa1e6369148ca1a02a41553f72a4f4f1c5caba43b01d896bfa5448880d86e&amp;ascene=1&amp;uin=Mjg0MTMzNDQzMQ%3D%3D&amp;devicetype=Windows+10+x64&amp;version=62090529&amp;lang=zh_CN&amp;exportkey=A0Fqg9Zs%2F5n9SoSbTTvLSBM%3D&amp;pass_ticket=OjPkHeLi1VRb2pZNqGnzwsGeG%2BPZ8Pp95ltGB1Cixid44X1S6yC8NrZdAH%2BnttEd">YOLO算法家族全景图</a>。</p><p>推荐阅读：<a href="https://mp.weixin.qq.com/s?__biz=MzI5MDUyMDIxNA==&amp;mid=2247504485&amp;idx=1&amp;sn=1edfe96858eca65764f5ac0b73932d87&amp;chksm=ec1c3f9cdb6bb68ae198dd24e0bc301a397a5f06f63377d914184ce02ee90e122b587e245d89&amp;scene=0&amp;xtrack=1&amp;key=8723f2e63c89806b337320fe9cd49f907a0e73a074f3fd6ea5c1f54a03f0653490e9551365b96282019e49773aee9250e35e1c4bbab89999b7be583fc38af84c9ff7b535fd459d6c0b8632c6c92a56fa974d9a260ab86a01dc9ef13c97ef814758185a3cd02aaebb6c1df5870cd2f6d711040f58b53fe7f993591f088a2fc1b0&amp;ascene=1&amp;uin=Mjg0MTMzNDQzMQ%3D%3D&amp;devicetype=Windows+10+x64&amp;version=62090529&amp;lang=zh_CN&amp;exportkey=Ayc7FmFAK8Edscesr09jGpA%3D&amp;pass_ticket=4Y3TKSx0fE%2Bxg%2B7QWVbNmub5ArN7rwIuPbCxsop%2BTZM1j9YSNFZ65ULuJvjYrYUJ">YOLO v1-v5全解读</a></p><span id="more"></span><h2 id="yolo-v1">YOLO v1</h2><p><a href="https://arxiv.org/abs/1506.02640">paper</a>;</p><p>参考博客：<a href="https://blog.csdn.net/liuxiaoheng1992/article/details/81983280">1</a>, <a href="https://zhuanlan.zhihu.com/p/37850811">2</a>, <a href="https://zhuanlan.zhihu.com/p/32525231">3</a></p><p>检测思想：利用卷积提取特征，然后得到最终的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>×</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">S\times S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span>的特征图，这里面每一个cell会预测B个框（这里为什么要每个cell预测多个框，有点类似anchor的思想，猜想可能是为了应对尺度问题，后面回归的时候也是选择跟GT接近的那个框去回归，但是实际上yolo v1对小物体的检测效果并不是很好，所以这样隐式设置，网络应该不好学习到），每个框预测offset和置信度（综合是否有物体以及IOU-预测的质量），根据CNN的位置不变性，原图也可以划分<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>×</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">S\times S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span>的cell，看原图上GT的中心落在哪个cell上，对应到最后的特征图上的那个cell就负责预测该物体。再加上预测的类别置信度，总共预测的变量为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>×</mo><mi>S</mi><mo>×</mo><mo stretchy="false">(</mo><mi>B</mi><mo>×</mo><mn>5</mn><mo>+</mo><mi>C</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S\times S \times(B\times5 + C)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mclose">)</span></span></span></span>，由FC给出，其中为了处理方便，预测的向量中[0 :<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>×</mo><mi>S</mi><mo>×</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">S \times S \times C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span>]为类别概率部分，[<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>×</mo><mi>S</mi><mo>×</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">S \times S \times C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span>:<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>×</mo><mi>S</mi><mo>×</mo><mo stretchy="false">(</mo><mi>C</mi><mo>+</mo><mi>B</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S \times S \times (C+B)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span></span>]是框置信度部分，[<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>×</mo><mi>S</mi><mo>×</mo><mo stretchy="false">(</mo><mi>C</mi><mo>+</mo><mi>B</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S \times S \times (C+B)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span></span>:]是边界框预测部分。</p><p>yolo将整个目标检测都看成回归问题，输出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>7</mn><mo>×</mo><mn>7</mn><mo>×</mo><mn>30</mn></mrow><annotation encoding="application/x-tex">7 \times 7 \times 30</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">0</span></span></span></span>的tensor(针对pascal VOC)，采用均方差损失函数。</p><p>CNN的空间位置不变性，原图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>224</mn><mo>×</mo><mn>224</mn></mrow><annotation encoding="application/x-tex">224 \times 224</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord">2</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">2</span><span class="mord">4</span></span></span></span> resize到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>448</mn><mo>×</mo><mn>448</mn></mrow><annotation encoding="application/x-tex">448 \times 448</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mord">4</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">4</span><span class="mord">8</span></span></span></span>，downstream 下采样到划分<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>7</mn><mo>×</mo><mn>7</mn></mrow><annotation encoding="application/x-tex">7 \times 7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span></span></span></span>的grid栅格，每个栅格预测2个bounding box，预测变量为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>w</mi><mo separator="true">,</mo><mi>h</mi><mo separator="true">,</mo><mi>C</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x, y, w, h, C)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>=</mo><msub><mi>p</mi><mrow><mi>o</mi><mi>b</mi><mi>j</mi><mi>e</mi><mi>c</mi><mi>t</mi></mrow></msub><mo>∗</mo><mi>I</mi><mi>o</mi><mi>U</mi></mrow><annotation encoding="application/x-tex">C = p_{object} * IoU</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.751388em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">b</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span>，存在物体，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mrow><mi>o</mi><mi>b</mi><mi>j</mi><mi>e</mi><mi>c</mi><mi>t</mi></mrow></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">p_{object}=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">b</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，否则为0</p><p>除了最后一层，其他层用leakly ReLU激活函数，loss函数，分配权重。</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>λ</mi><mtext>coord </mtext></msub><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><msup><mi>S</mi><mn>2</mn></msup></msubsup><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mi>B</mi></msubsup><msubsup><mn mathvariant="double-struck">1</mn><mrow><mi>i</mi><mi>j</mi></mrow><mtext>obj </mtext></msubsup><mrow><mo fence="true">[</mo><msup><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mover accent="true"><mi>x</mi><mo>^</mo></mover><mi>i</mi></msub><mo fence="true">)</mo></mrow><mn>2</mn></msup><mo>+</mo><msup><mrow><mo fence="true">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub><mo fence="true">)</mo></mrow><mn>2</mn></msup><mo fence="true">]</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="1em"><mo>+</mo><msub><mi>λ</mi><mtext>coord </mtext></msub><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><msup><mi>S</mi><mn>2</mn></msup></msubsup><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mi>B</mi></msubsup><msubsup><mn mathvariant="double-struck">1</mn><mrow><mi>i</mi><mi>j</mi></mrow><mtext>obj </mtext></msubsup><mrow><mo fence="true">[</mo><mo stretchy="false">(</mo><msqrt><msub><mi>w</mi><mi>i</mi></msub></msqrt><mo>−</mo><msqrt><msub><mover accent="true"><mi>w</mi><mo>^</mo></mover><mi>i</mi></msub></msqrt><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><msqrt><msub><mi>h</mi><mi>i</mi></msub></msqrt><mo>−</mo><msqrt><msub><mover accent="true"><mi>h</mi><mo>^</mo></mover><mi>i</mi></msub></msqrt><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo fence="true">]</mo></mrow></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="1em"><mo>+</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><msup><mi>S</mi><mn>2</mn></msup></msubsup><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mi>B</mi></msubsup><msubsup><mn mathvariant="double-struck">1</mn><mrow><mi>i</mi><mi>j</mi></mrow><mrow><mi mathvariant="normal">o</mi><mi mathvariant="normal">b</mi><mi mathvariant="normal">j</mi></mrow></msubsup><msup><mrow><mo fence="true">(</mo><msub><mi>C</mi><mi>i</mi></msub><mo>−</mo><msub><mover accent="true"><mi>C</mi><mo>^</mo></mover><mi>i</mi></msub><mo fence="true">)</mo></mrow><mn>2</mn></msup><mo>+</mo><msub><mi>λ</mi><mrow><mi mathvariant="normal">n</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">b</mi><mi mathvariant="normal">j</mi></mrow></msub><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><msup><mi>S</mi><mn>2</mn></msup></msubsup><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mi>B</mi></msubsup><msubsup><mn mathvariant="double-struck">1</mn><mrow><mi>i</mi><mi>j</mi></mrow><mrow><mi mathvariant="normal">n</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">b</mi><mi mathvariant="normal">j</mi></mrow></msubsup><msup><mrow><mo fence="true">(</mo><msub><mi>C</mi><mi>i</mi></msub><mo>−</mo><msub><mover accent="true"><mi>C</mi><mo>^</mo></mover><mi>i</mi></msub><mo fence="true">)</mo></mrow><mn>2</mn></msup></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="1em"><mo>+</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><msup><mi>S</mi><mn>2</mn></msup></msubsup><msubsup><mn mathvariant="double-struck">1</mn><mi>i</mi><mrow><mi mathvariant="normal">o</mi><mi mathvariant="normal">b</mi><mi mathvariant="normal">j</mi></mrow></msubsup><msub><mo>∑</mo><mrow><mi>c</mi><mo>∈</mo><mtext> classes </mtext></mrow></msub><msup><mrow><mo fence="true">(</mo><msub><mi>p</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo><mo>−</mo><msub><mover accent="true"><mi>p</mi><mo>^</mo></mover><mi>i</mi></msub><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow><mn>2</mn></msup></mspace></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l}\lambda_{\text {coord }} \sum_{i=0}^{S^{2}} \sum_{j=0}^{B} \mathbb{1}_{i j}^{\text {obj }}\left[\left(x_{i}-\hat{x}_{i}\right)^{2}+\left(y_{i}-\hat{y}_{i}\right)^{2}\right] \\\quad+\lambda_{\text {coord }} \sum_{i=0}^{S^{2}} \sum_{j=0}^{B} \mathbb{1}_{i j}^{\text {obj }}\left[(\sqrt{w_{i}}-\sqrt{\hat{w}_{i}})^{2}+(\sqrt{h_{i}}-\sqrt{\hat{h}_{i}})^{2}\right] \\\quad+\sum_{i=0}^{S^{2}} \sum_{j=0}^{B} \mathbb{1}_{i j}^{\mathrm{obj}}\left(C_{i}-\hat{C}_{i}\right)^{2}+\lambda_{\mathrm{noobj}} \sum_{i=0}^{S^{2}} \sum_{j=0}^{B} \mathbb{1}_{i j}^{\mathrm{noobj}}\left(C_{i}-\hat{C}_{i}\right)^{2}\\\quad+\sum_{i=0}^{S^{2}} \mathbb{1}_{i}^{\mathrm{obj}} \sum_{c \in \text { classes }}\left(p_{i}(c)-\hat{p}_{i}(c)\right)^{2}\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.090888em;vertical-align:-3.295444em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.7954440000000003em;"><span style="top:-5.999452em;"><span class="pstrut" style="height:3.354008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">coord </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.12682em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord">1</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9670159999999999em;"><span style="top:-2.4231360000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">obj </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.412972em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">[</span></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">]</span></span></span></span></span><span style="top:-4.199432em;"><span class="pstrut" style="height:3.354008em;"></span><span class="mord"><span class="mspace" style="margin-right:1em;"></span><span class="mord">+</span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">coord </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.12682em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord">1</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9670159999999999em;"><span style="top:-2.4231360000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">obj </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.412972em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">[</span></span><span class="mopen">(</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.72528em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.68528em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.31472em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.81722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.18278000000000005em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.81722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.18278000000000005em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.08894em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">h</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.04894em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width="400em" height="1.28em" viewbox="0 0 400000 1296" preserveaspectratio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15106000000000008em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">]</span></span></span></span></span><span style="top:-2.195404em;"><span class="pstrut" style="height:3.354008em;"></span><span class="mord"><span class="mspace" style="margin-right:1em;"></span><span class="mord">+</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.12682em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord">1</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9670159999999999em;"><span style="top:-2.4231360000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">o</span><span class="mord mathrm mtight">b</span><span class="mord mathrm mtight">j</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.412972em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.3540079999999999em;"><span style="top:-3.6029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">n</span><span class="mord mathrm mtight">o</span><span class="mord mathrm mtight">o</span><span class="mord mathrm mtight">b</span><span class="mord mathrm mtight">j</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.12682em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord">1</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9670159999999999em;"><span style="top:-2.4231360000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">n</span><span class="mord mathrm mtight">o</span><span class="mord mathrm mtight">o</span><span class="mord mathrm mtight">b</span><span class="mord mathrm mtight">j</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.412972em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.3540079999999999em;"><span style="top:-3.6029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-0.4185640000000001em;"><span class="pstrut" style="height:3.354008em;"></span><span class="mord"><span class="mspace" style="margin-right:1em;"></span><span class="mord">+</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.12682em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord">1</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9670159999999999em;"><span style="top:-2.4231360000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">o</span><span class="mord mathrm mtight">b</span><span class="mord mathrm mtight">j</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.276864em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.18639799999999984em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mrel mtight">∈</span><span class="mord text mtight"><span class="mord mtight"> classes </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32708000000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">p</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.295444em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>λ</mi><mrow><mi>c</mi><mi>o</mi><mi>o</mi><mi>r</mi><mi>d</mi></mrow></msub><mo>=</mo><mn>5</mn><mo separator="true">,</mo><msub><mi>λ</mi><mrow><mi>n</mi><mi>o</mi><mi>o</mi><mi>b</mi><mi>j</mi></mrow></msub><mo>=</mo><mn>0.5</mn></mrow><annotation encoding="application/x-tex">\lambda_{coord}=5,\lambda_{noobj}=0.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">b</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span></span></span></span>，利用平方根宽高是为了让小物体框对尺寸变化更加敏感。其中C代表的是框的置信度，是为了衡量是否存在物体和框的质量，p才是类别置信度。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/yolopaperreading/yolov1_backbone.JPG" alt="v1的backbone"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/yolopaperreading/regress_detail.png" alt="回归变量的计算方式，图来自博客1"></p><blockquote><p>YOLO predicts multiple bounding boxes per grid cell. At <strong>training time</strong> we only want <strong>one bounding box predictor</strong> to be responsible for each object. We assign one predictor to be “responsible” for predicting an object based on which prediction has the <strong>highest current IOU with the ground truth.</strong> This leads to specialization between the bounding box predictors. Each predictor gets better at predicting certain sizes, aspect ratios, or classes of object, improving overall recall.</p></blockquote><blockquote><p>Note that the loss function <strong>only penalizes classification error if an object is present in that grid cell</strong> (hence the conditional class probability discussed earlier). It also only <strong>penalizes bounding box coordinate error if that predictor is “responsible” for the ground truth box</strong> (i.e. has the highest IOU of any predictor in that grid cell).</p></blockquote><p>trick: warm up, drop out fc, dataset random scaling、translations (up to 20%), adjust exposure and saturation (factor 1.5) in HSV color space.</p><p>普适性的架构，在artwork数据集上检测效果也不错，不局限于自然图像</p><p>一个grid cell只检测一个物体，如果是重合的多个物体只能检测一个，精度不高，但是由于是统一的架构，在一个网络上检测，信息比faster rcnn的region proposal充分，所以误检率低</p><p>预测部分：</p><p>在博客3中给出了源码中的预测输出，大致是输出结果，置信度低于阈值置0，NMS之后输出，也就是先NMS再给类别，而不是先给类别置信度再NMS</p><p>根据类别NMS，还是全部NMS？一般都是预测框全部放在一起然后NMS，结果似乎没有很大区别。</p><p>这里给出先判断类别再NMS的预测方案，代码来自博客3：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def _build_detector(self):</span><br><span class="line">        &quot;&quot;&quot;Interpret the net output and get the predicted boxes&quot;&quot;&quot;</span><br><span class="line">        # the width and height of orignal image</span><br><span class="line">        self.width = tf.placeholder(tf.float32, name=&quot;img_w&quot;)</span><br><span class="line">        self.height = tf.placeholder(tf.float32, name=&quot;img_h&quot;)</span><br><span class="line">        # get class prob, confidence, boxes from net output</span><br><span class="line">        idx1 = self.S * self.S * self.C</span><br><span class="line">        idx2 = idx1 + self.S * self.S * self.B</span><br><span class="line">        # class prediction</span><br><span class="line">        class_probs = tf.reshape(self.predicts[0, :idx1], [self.S, self.S, self.C])</span><br><span class="line">        # confidence</span><br><span class="line">        confs = tf.reshape(self.predicts[0, idx1:idx2], [self.S, self.S, self.B])</span><br><span class="line">        # boxes -&gt; (x, y, w, h)</span><br><span class="line">        boxes = tf.reshape(self.predicts[0, idx2:], [self.S, self.S, self.B, 4])</span><br><span class="line"></span><br><span class="line">        # convert the x, y to the coordinates relative to the top left point of the image</span><br><span class="line">        # the predictions of w, h are the square root</span><br><span class="line">        # multiply the width and height of image</span><br><span class="line">        boxes = tf.stack([(boxes[:, :, :, 0] + tf.constant(self.x_offset, dtype=tf.float32)) / self.S * self.width,</span><br><span class="line">                          (boxes[:, :, :, 1] + tf.constant(self.y_offset, dtype=tf.float32)) / self.S * self.height,</span><br><span class="line">                          tf.square(boxes[:, :, :, 2]) * self.width,</span><br><span class="line">                          tf.square(boxes[:, :, :, 3]) * self.height], axis=3)</span><br><span class="line"></span><br><span class="line">        # class-specific confidence scores [S, S, B, C]</span><br><span class="line">        scores = tf.expand_dims(confs, -1) * tf.expand_dims(class_probs, 2)</span><br><span class="line"></span><br><span class="line">        scores = tf.reshape(scores, [-1, self.C])  # [S*S*B, C]</span><br><span class="line">        boxes = tf.reshape(boxes, [-1, 4])  # [S*S*B, 4]</span><br><span class="line"></span><br><span class="line">        # find each box class, only select the max score</span><br><span class="line">        box_classes = tf.argmax(scores, axis=1)</span><br><span class="line">        box_class_scores = tf.reduce_max(scores, axis=1)</span><br><span class="line"></span><br><span class="line">        # filter the boxes by the score threshold</span><br><span class="line">        filter_mask = box_class_scores &gt;= self.threshold</span><br><span class="line">        scores = tf.boolean_mask(box_class_scores, filter_mask)</span><br><span class="line">        boxes = tf.boolean_mask(boxes, filter_mask)</span><br><span class="line">        box_classes = tf.boolean_mask(box_classes, filter_mask)</span><br><span class="line"></span><br><span class="line">        # non max suppression (do not distinguish different classes)</span><br><span class="line">        # ref: https://tensorflow.google.cn/api_docs/python/tf/image/non_max_suppression</span><br><span class="line">        # box (x, y, w, h) -&gt; box (x1, y1, x2, y2)</span><br><span class="line">        _boxes = tf.stack([boxes[:, 0] - 0.5 * boxes[:, 2], boxes[:, 1] - 0.5 * boxes[:, 3],</span><br><span class="line">                           boxes[:, 0] + 0.5 * boxes[:, 2], boxes[:, 1] + 0.5 * boxes[:, 3]], axis=1)</span><br><span class="line">        nms_indices = tf.image.non_max_suppression(_boxes, scores,</span><br><span class="line">                                                   self.max_output_size, self.iou_threshold)</span><br><span class="line">        self.scores = tf.gather(scores, nms_indices)</span><br><span class="line">        self.boxes = tf.gather(boxes, nms_indices)</span><br><span class="line">        self.box_classes = tf.gather(box_classes, nms_indices)</span><br></pre></td></tr></table></figure><h2 id="yolo-v2">YOLO v2</h2><p><a href="https://arxiv.org/abs/1612.08242">paper</a>;</p><p>参考博客：<a href="https://mp.weixin.qq.com/s?__biz=MzA4MjY4NTk0NQ==&amp;mid=2247484076&amp;idx=1&amp;sn=7741125973b350fd99e2a2dd02d31849&amp;chksm=9f80b83aa8f7312c62c65d7c9deea687b1c0b9d5144e5bd14c075fa93f92b162e277807bb04f&amp;scene=21#wechat_redirect">1</a>, <a href="https://mp.weixin.qq.com/s?__biz=MzA4MjY4NTk0NQ==&amp;mid=2247484093&amp;idx=1&amp;sn=44ff2ef2c2c7e9c8fbbfa771645fbbec&amp;chksm=9f80b82ba8f7313d7bf951450fe5a278a1dd24310f9113a49f82f89da0cca6d8133c438cf896&amp;scene=21#wechat_redirect">2</a>, <a href="https://zhuanlan.zhihu.com/p/40659490">3</a>, <a href="https://zhuanlan.zhihu.com/p/35325884">4</a></p><p>相比于YOLO v1，v2每个cell通过聚类设置了anchor boxes,这些anchor会预测offset，置信度和类别概率，全卷积预测，除去了FC层</p><p>聚类采用的距离是衡量box和聚类中心之间的IOU，如果IOU大就说明距离近，聚类得出的结果比直接手工设定的anchor相比，前者的平均IOU更大些，这样模型会更容易训练学习。</p><p>回归的设置</p><p>pass through层为了预测小物体，通过拆分特征图来缩小尺寸并增加维度</p><p>先验框怎么匹配的，与v1类似，还是看物体GT的中心落在哪一个cell上，这个cell的anchor boxes就负责预测它，具体是哪一个anchor box预测，需要在训练时确定，选IOU最大（这里计算不考虑位置，只考虑面积）的那个，其他的都不匹配。与ground truth匹配的先验框计算坐标误差、置信度误差以及分类误差，而其它的边界框只计算置信度误差，与v1类似</p><p>reorganization, 跨层连接，自己构建的网络Darknet-19，reorg layer/passthrough</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/yolopaperreading/darknet19.JPG" alt="yolov2采用自搭建的网络，Darknet-19"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/yolopaperreading/yolov2_backbone.png" alt="yolo v2 net, 源自：https://ethereon.github.io/netscope/#/gist/d08a41711e48cf111e330827b1279c31"></p><p>全卷积，多尺度</p><p>加入anchors，提高recall</p><p>anchor尺度聚类代替手工设定，<a href="https://mp.weixin.qq.com/s?__biz=MzA4MjY4NTk0NQ==&amp;mid=2247484186&amp;idx=1&amp;sn=6b2f83ab797f5d585b46aa749c8bf169&amp;scene=21#wechat_redirect">如何实现聚类</a></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/yolopaperreading/yolov2_anchor.JPG" alt></p><p>预测bounding box偏移变量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>t</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>t</mi><mi>w</mi></msub><mo separator="true">,</mo><msub><mi>t</mi><mi>h</mi></msub></mrow><annotation encoding="application/x-tex">t_{x},t_{y},t_{w},t_{h}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9011879999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，基于anchor的宽高预测，基于grid cell左上角的位置预测，相比于v1直接预测框的绝对位置，偏移量能更好地被网络学习到，因为比较小且稳定。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/yolopaperreading/yolov2_regress.JPG" alt></p><p>loss函数</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="right left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mo><mi mathvariant="normal">loss</mi><mo>⁡</mo></mo><mi>t</mi></msub><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>W</mi></msubsup><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mi>H</mi></msubsup><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><mi>A</mi></msubsup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mn>1</mn><mrow><mtext>Max </mtext><mn>100</mn><mo>&lt;</mo><mtext> Thresh </mtext></mrow></msub><msub><mi>λ</mi><mtext>noobj </mtext></msub><mo>∗</mo><msup><mrow><mo fence="true">(</mo><mo>−</mo><msubsup><mi>b</mi><mrow><mi>i</mi><mi>j</mi><mi>k</mi></mrow><mi>o</mi></msubsup><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>+</mo><msub><mn>1</mn><mrow><mi>t</mi><mo>&lt;</mo><mn>12800</mn></mrow></msub><msub><mi>λ</mi><mtext>prior </mtext></msub><mo>∗</mo><msub><mo>∑</mo><mrow><msub><mi>r</mi><mi>ϵ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>w</mi><mo separator="true">,</mo><mi>h</mi><mo stretchy="false">)</mo></mrow></msub><msup><mrow><mo fence="true">(</mo><msubsup><mtext> prior </mtext><mi>k</mi><mi>r</mi></msubsup><mo>−</mo><msubsup><mi>b</mi><mrow><mi>i</mi><mi>j</mi><mi>k</mi></mrow><mi>r</mi></msubsup><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>+</mo><msubsup><mn>1</mn><mi>k</mi><mtext>truth </mtext></msubsup><mrow><mo fence="true">(</mo><msub><mi>λ</mi><mtext>coord </mtext></msub><mo>∗</mo><msub><mo>∑</mo><mrow><msub><mi>r</mi><mi>ϵ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>w</mi><mo separator="true">,</mo><mi>h</mi><mo stretchy="false">)</mo></mrow></msub><msup><mrow><mo fence="true">(</mo><msup><mtext> truth </mtext><mi>r</mi></msup><mo>−</mo><msubsup><mi>b</mi><mrow><mi>i</mi><mi>j</mi><mi>k</mi></mrow><mi>r</mi></msubsup><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mrow><mo>+</mo><msubsup><mi>b</mi><mrow><mi>i</mi><mi>j</mi><mi>k</mi></mrow><mi>r</mi></msubsup><mo fence="true">)</mo></mrow><mn>2</mn></msup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>+</mo><msub><mi>λ</mi><mtext>obj </mtext></msub><mo>∗</mo><msup><mrow><mo fence="true">(</mo><mi>I</mi><mi>O</mi><msubsup><mi>U</mi><mtext>truth </mtext><mi>k</mi></msubsup><mo>−</mo><msubsup><mi>b</mi><mrow><mi>i</mi><mi>j</mi><mi>k</mi></mrow><mi>o</mi></msubsup><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>+</mo><msub><mi>λ</mi><mtext>class </mtext></msub><mo>∗</mo><mrow><mo fence="true">(</mo><msubsup><mo>∑</mo><mrow><mi>c</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></msubsup><msup><mrow><mo fence="true">(</mo><mi>t</mi><mi>r</mi><mi>u</mi><mi>t</mi><msup><mi>h</mi><mi>c</mi></msup><mo>−</mo><msubsup><mi>b</mi><mrow><mi>i</mi><mi>j</mi><mi>k</mi></mrow><mi>c</mi></msubsup><mo fence="true">)</mo></mrow><mn>2</mn></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{rl}\operatorname{loss}_{t}=\sum_{i=0}^{W} \sum_{j=0}^{H} \sum_{k=0}^{A} &amp; 1_{\text {Max } 100&lt;\text { Thresh }} \lambda_{\text {noobj }} *\left(-b_{i j k}^{o}\right)^{2} \\&amp; +1_{t&lt;12800} \lambda_{\text {prior }} * \sum_{r_{\epsilon}(x, y, w, h)}\left(\text { prior }_{k}^{r}-b_{i j k}^{r}\right)^{2} \\&amp; +1_{k}^{\text {truth }}\left(\lambda_{\text {coord }} * \sum_{r_{\epsilon}(x, y, w, h)}\left(\text { truth }^{r}-b_{i j k}^{r}\right)^{2}\right. &amp; \left.+b_{i j k}^{r}\right)^{2} \\&amp; +\lambda_{\text {obj }} *\left(I O U_{\text {truth }}^{k} - b_{ijk}^{o}\right)^{2} \\&amp; \left.+\lambda_{\text {class }} *\left(\sum_{c=1}^{C}\left(t r u t h^{c}-b_{i j k}^{c}\right)^{2}\right)\right)\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:10.812143999999998em;vertical-align:-5.156071999999998em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.656072em;"><span style="top:-7.752063999999999em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mop"><span class="mop"><span class="mord mathrm">l</span><span class="mord mathrm">o</span><span class="mord mathrm">s</span><span class="mord mathrm">s</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span></span></span><span style="top:-5.748036000000001em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"></span></span><span style="top:-3.648016em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"></span></span><span style="top:-1.3439780000000012em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"></span></span><span style="top:0.756041999999998em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.156071999999998em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.656072em;"><span style="top:-7.752063999999999em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999985em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">Max </span></span><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mord mtight">0</span><span class="mrel mtight">&lt;</span><span class="mord text mtight"><span class="mord mtight"> Thresh </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.17737em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">noobj </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord">−</span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4192159999999999em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.3540079999999999em;"><span style="top:-3.6029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-5.748036000000001em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord">+</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mrel mtight">&lt;</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">8</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.17737em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.317502em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">prior </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.22528999999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">ϵ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">h</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.47471em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord text"><span class="mord"> prior </span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.722152em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.12076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4192159999999999em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.3540079999999999em;"><span style="top:-3.6029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.648016em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord">+</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">truth </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">coord </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.22528999999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">ϵ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">h</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.47471em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord text"><span class="mord"> truth </span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.748732em;"><span style="top:-3.1473400000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4192159999999999em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.3540079999999999em;"><span style="top:-3.6029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.3439780000000012em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord">+</span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">obj </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4168920000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">truth </span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4192159999999999em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.3540079999999999em;"><span style="top:-3.6029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:0.756041999999998em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord">+</span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">class </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">u</span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4192159999999999em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.3540079999999999em;"><span style="top:-3.6029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.156071999999998em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6480159999999993em;"><span style="top:-3.6480159999999993em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="minner"><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord">+</span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4192159999999999em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.3540079999999999em;"><span style="top:-3.6029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.752014000000001em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p><p>先验框匹配，样本选择 ，IOU计算只考虑形状大小，不考虑坐标，移到原点计算，每个groudtruth只会分配一个最合适的预测框。前面先让预测框学着预测先验框anchor</p><p>训练，多scale训练，通道数不变，只是特征图的尺寸会变化。先用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>224</mn><mo>×</mo><mn>224</mn></mrow><annotation encoding="application/x-tex">224 \times 224</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord">2</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">2</span><span class="mord">4</span></span></span></span>尺寸ImageNet图片对Darknet-19进行第一阶段训练，然后将图片尺寸调整为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>448</mn><mo>×</mo><mn>448</mn></mrow><annotation encoding="application/x-tex">448 \times 448</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mord">4</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">4</span><span class="mord">8</span></span></span></span>继续进行第二阶段的训练，目的是为了让网络可以适应大尺寸的图片输入。之后移除最后的卷积层，global avgpooling和分类的softmax, 增加一些卷积层改为分类backbone进行训练。输出的通道数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>n</mi><mi>c</mi><mi>h</mi><mi>o</mi><mi>r</mi><mi mathvariant="normal">_</mi><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mo>×</mo><mo stretchy="false">(</mo><mn>4</mn><mo>+</mo><mn>1</mn><mo>+</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi mathvariant="normal">_</mi><mi>c</mi><mi>l</mi><mi>a</mi><mi>s</mi><mi>s</mi><mi>e</mi><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">anchor\_nums \times (4+1+num\_classes)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00444em;vertical-align:-0.31em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mord mathdefault">h</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault">n</span><span class="mord mathdefault">u</span><span class="mord mathdefault">m</span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">u</span><span class="mord mathdefault">m</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span>，以VOC数据集为例，最后的网络输出shape为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>N</mi><mo separator="true">,</mo><mi>W</mi><mo separator="true">,</mo><mi>H</mi><mo separator="true">,</mo><mn>125</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(N,W,H,125)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">5</span><span class="mclose">)</span></span></span></span>，先reshape为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>N</mi><mo separator="true">,</mo><mi>W</mi><mo separator="true">,</mo><mi>H</mi><mo separator="true">,</mo><mn>5</mn><mo separator="true">,</mo><mn>25</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(N,W,H,5,25)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mclose">)</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo>:</mo><mo separator="true">,</mo><mo>:</mo><mo separator="true">,</mo><mo>:</mo><mo separator="true">,</mo><mo>:</mo><mo separator="true">,</mo><mn>0</mn><mo>:</mo><mn>4</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[:,:,:,:,0:4]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mclose">]</span></span></span></span>为边界框的位置和大小<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>t</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>t</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>t</mi><mi>w</mi></msub><mo separator="true">,</mo><msub><mi>t</mi><mi>h</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(t_{x},t_{y},t_{w},t_{h})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo>:</mo><mo separator="true">,</mo><mo>:</mo><mo separator="true">,</mo><mo>:</mo><mo separator="true">,</mo><mo>:</mo><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[:,:,:,:,4]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">]</span></span></span></span>为边界框的置信度，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo>:</mo><mo separator="true">,</mo><mo>:</mo><mo separator="true">,</mo><mo>:</mo><mo separator="true">,</mo><mo>:</mo><mo separator="true">,</mo><mn>5</mn><mo>:</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[:,:,:,:,5:]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mclose">]</span></span></span></span>为边界框的类别预测，最后还需要对其进行NMS等后处理</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;&quot;&quot;</span><br><span class="line">Detection ops for Yolov2</span><br><span class="line">codelink:https://github.com/xiaohu2015/DeepLearning_tutorials/tree/master/ObjectDetections/yolo2</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">import tensorflow as tf</span><br><span class="line">import numpy as np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def decode(detection_feat, feat_sizes=(13, 13), num_classes=80,</span><br><span class="line">           anchors=None):</span><br><span class="line">    &quot;&quot;&quot;decode from the detection feature&quot;&quot;&quot;</span><br><span class="line">    H, W = feat_sizes</span><br><span class="line">    num_anchors = len(anchors)</span><br><span class="line">    detetion_results = tf.reshape(detection_feat, [-1, H * W, num_anchors,</span><br><span class="line">                                        num_classes + 5])</span><br><span class="line"></span><br><span class="line">    bbox_xy = tf.nn.sigmoid(detetion_results[:, :, :, 0:2])</span><br><span class="line">    bbox_wh = tf.exp(detetion_results[:, :, :, 2:4])</span><br><span class="line">    obj_probs = tf.nn.sigmoid(detetion_results[:, :, :, 4])</span><br><span class="line">    class_probs = tf.nn.softmax(detetion_results[:, :, :, 5:])</span><br><span class="line"></span><br><span class="line">    anchors = tf.constant(anchors, dtype=tf.float32)</span><br><span class="line"></span><br><span class="line">    height_ind = tf.range(H, dtype=tf.float32)</span><br><span class="line">    width_ind = tf.range(W, dtype=tf.float32)</span><br><span class="line">    x_offset, y_offset = tf.meshgrid(height_ind, width_ind)</span><br><span class="line">    x_offset = tf.reshape(x_offset, [1, -1, 1])</span><br><span class="line">    y_offset = tf.reshape(y_offset, [1, -1, 1])</span><br><span class="line"></span><br><span class="line">    # decode</span><br><span class="line">    bbox_x = (bbox_xy[:, :, :, 0] + x_offset) / W</span><br><span class="line">    bbox_y = (bbox_xy[:, :, :, 1] + y_offset) / H</span><br><span class="line">    bbox_w = bbox_wh[:, :, :, 0] * anchors[:, 0] / W * 0.5 # 这里除以0.5是为下面中心点计算左上和右下坐标</span><br><span class="line">    bbox_h = bbox_wh[:, :, :, 1] * anchors[:, 1] / H * 0.5</span><br><span class="line"></span><br><span class="line">    bboxes = tf.stack([bbox_x - bbox_w, bbox_y - bbox_h,</span><br><span class="line">                       bbox_x + bbox_w, bbox_y + bbox_h], axis=3)</span><br><span class="line"></span><br><span class="line">    return bboxes, obj_probs, class_probs</span><br></pre></td></tr></table></figure><p>预测，归功于multi-scale training, 测试时，大尺寸的图片mAP很高</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/yolopaperreading/yolov2_improvement.JPG" alt="相比v1做的一些改进和tricks"></p><p>yolo9000, 联合ImageNet和COCO数据集进行检测和分类训练</p><h2 id="yolo-v3">YOLO v3</h2><p><a href="https://pjreddie.com/media/files/papers/YOLOv3.pdf">paper</a>;</p><p>换了backbone, Darknet-53, 使用仿resnet的skip connection，引入residual module，通过大中小三个特征图尺度和不同的anchor大小，提升小目标的检测精度</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/yolopaperreading/darknet53.JPG" alt="Darknet-53"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/yolopaperreading/yolov3_architecture.jpg" alt="yolov3检测架构，图来自：https://zhuanlan.zhihu.com/p/35325884"></p><p>多尺度融合。FPN，依然是使用k-mean聚类得出9种不同大小比例的anchor，然后均匀的分配到3个不同scales的feature map上去。</p><p>yolov2与yolov3的损失函数，知乎相关<a href="https://www.zhihu.com/question/357005177">回答</a></p><p>网络预测出的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>t</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">t_{x}, t_{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9011879999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>是在0-1之间的，采用了BCE而不是MSE，loss是在输出的t上计算，还是进一步归一化处理后的b上计算？</p><h2 id="yolo-v4">YOLO v4</h2><p><a href="https://arxiv.org/abs/2004.10934">paper</a>;</p><p>参考博客：<a href="https://mp.weixin.qq.com/s?__biz=MzA4MjY4NTk0NQ==&amp;mid=2247485776&amp;idx=1&amp;sn=3cc43a8763bf3ef737ecd7f7065b54f2&amp;chksm=9f80b3c6a8f73ad029734bafdf7dd40f2a15af29b70e63bdbd7b2e5cd802ce5f77fbfffb624c&amp;scene=21#wechat_redirect">1</a>, <a href="https://zhuanlan.zhihu.com/p/135980432">2</a></p><p>一个GT可以有多个anchor对应，不再只回归一个，提升正样本比例</p><p>Mosaic（马赛克）数据增强和Self-Adversarial Training(自对抗训练)比较有趣，从风格迁移可视化CNN来的</p><p><a href="https://zhuanlan.zhihu.com/p/172121380">https://zhuanlan.zhihu.com/p/172121380</a></p><p><a href="https://zhuanlan.zhihu.com/p/143747206">https://zhuanlan.zhihu.com/p/143747206</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;about&quot;&gt;About&lt;/h2&gt;
&lt;p&gt;YOLO系列是one-stage目标检测种的重要成果，兼具速度与精度，同时包含了很多与时俱进的tricks，是理论与工程实践完美结合的产物。虽然Andrew Ng说YOLO论文比较难读，但是为了更好的梳理检测这一模块，理解实践这项工作必须要进行下去。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzA4MjY4NTk0NQ==&amp;amp;mid=2247485030&amp;amp;idx=1&amp;amp;sn=585864ef65bef3aa21c953506aae67f3&amp;amp;chksm=9f80bcf0a8f735e680e552d973247d4577f974b3a5eff23d89779c3416cb8f360fa0ee6ccb4c&amp;amp;scene=21#wechat_redirect&quot;&gt;Pytorch YOLO项目推荐&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzA4MDExMDEyMw==&amp;amp;mid=2247489178&amp;amp;idx=1&amp;amp;sn=c680b306f52f8a14b6dbd95dcf825cd9&amp;amp;chksm=9fa861dea8dfe8c805849ea244a9d5a41c5800c2420ebe5ab59015e0e347106009a1b7503262&amp;amp;mpshare=1&amp;amp;scene=1&amp;amp;srcid=0801DMwwN4jG1mIgJtRHCBbB&amp;amp;sharer_sharetime=1596243161365&amp;amp;sharer_shareid=4ed82b8c86f7bdeb368019cfe429ee62&amp;amp;key=519b8bbaea533f94d6ea97b2ce92dec8fa25f479b15fcec13c3d4a8a930c7d67bcf1e2a1b5f384022df13a66b501b7961fcaa1e6369148ca1a02a41553f72a4f4f1c5caba43b01d896bfa5448880d86e&amp;amp;ascene=1&amp;amp;uin=Mjg0MTMzNDQzMQ%3D%3D&amp;amp;devicetype=Windows+10+x64&amp;amp;version=62090529&amp;amp;lang=zh_CN&amp;amp;exportkey=A0Fqg9Zs%2F5n9SoSbTTvLSBM%3D&amp;amp;pass_ticket=OjPkHeLi1VRb2pZNqGnzwsGeG%2BPZ8Pp95ltGB1Cixid44X1S6yC8NrZdAH%2BnttEd&quot;&gt;YOLO算法家族全景图&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;推荐阅读：&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzI5MDUyMDIxNA==&amp;amp;mid=2247504485&amp;amp;idx=1&amp;amp;sn=1edfe96858eca65764f5ac0b73932d87&amp;amp;chksm=ec1c3f9cdb6bb68ae198dd24e0bc301a397a5f06f63377d914184ce02ee90e122b587e245d89&amp;amp;scene=0&amp;amp;xtrack=1&amp;amp;key=8723f2e63c89806b337320fe9cd49f907a0e73a074f3fd6ea5c1f54a03f0653490e9551365b96282019e49773aee9250e35e1c4bbab89999b7be583fc38af84c9ff7b535fd459d6c0b8632c6c92a56fa974d9a260ab86a01dc9ef13c97ef814758185a3cd02aaebb6c1df5870cd2f6d711040f58b53fe7f993591f088a2fc1b0&amp;amp;ascene=1&amp;amp;uin=Mjg0MTMzNDQzMQ%3D%3D&amp;amp;devicetype=Windows+10+x64&amp;amp;version=62090529&amp;amp;lang=zh_CN&amp;amp;exportkey=Ayc7FmFAK8Edscesr09jGpA%3D&amp;amp;pass_ticket=4Y3TKSx0fE%2Bxg%2B7QWVbNmub5ArN7rwIuPbCxsop%2BTZM1j9YSNFZ65ULuJvjYrYUJ&quot;&gt;YOLO v1-v5全解读&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="论文阅读" scheme="http://densecollections.top/categories/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="computer vision" scheme="http://densecollections.top/tags/computer-vision/"/>
    
    <category term="deep learning" scheme="http://densecollections.top/tags/deep-learning/"/>
    
    <category term="object detection" scheme="http://densecollections.top/tags/object-detection/"/>
    
  </entry>
  
  <entry>
    <title>侯捷C++面向对象程序设计</title>
    <link href="http://densecollections.top/posts/houjieC++/"/>
    <id>http://densecollections.top/posts/houjieC++/</id>
    <published>2020-05-28T08:48:27.000Z</published>
    <updated>2022-09-09T03:27:10.956Z</updated>
    
    <content type="html"><![CDATA[<h2 id="about">About</h2><p>侯捷手把手教学C++</p><p><a href="https://www.bilibili.com/video/BV1aW411H7Xa?p=1">video-part1</a>；</p><p><a href="https://www.bilibili.com/video/BV1sW411J7JQ/?spm_id_from=333.788.videocard.0">video-part2</a>;</p><p><a href="https://github.com/harvestlamb/Cpp_houjie">课件与代码</a>；</p><h2 id="1-简介">1.简介</h2><p>编写规范的class代码（object based，单一class)；</p><p>学习class之间的关系（object oriented，多个class）—继承/复合/委托；</p><p>主要学习c++ 98/c++11，以c++ 98为主；</p><p>同时关注C++ 语言和C++标准库；</p><p>推荐书籍：C++ Primer, The C++ Programming Language (C++11), Effective C++ 11, The C++ Standard Library, STL源码剖析；</p><span id="more"></span><h2 id="2-头文件与类声明">2.头文件与类声明</h2><p>数据和函数包在一起打包成class，与struct有一些差别。</p><p>C++代码的基本形式:</p><ul><li>.h(header files, class声明)；</li><li>.cpp(#include&lt;iostream.h&gt;, #include “own_file.h”, 标准库和自己的引用方式不同)；</li><li>.h(标准库)；</li></ul><p>头文件防卫式声明（任意include头文件，不会重复include）：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#ifndef __COMPLEX__</span><br><span class="line">#define __COMPLEX__</span><br><span class="line">.....</span><br><span class="line">前置声明</span><br><span class="line">类-声明</span><br><span class="line">类-定义</span><br><span class="line">.....</span><br><span class="line"></span><br><span class="line">#endif</span><br></pre></td></tr></table></figure><p>类声明：class head, class body；</p><p>class template(用的时候再指定，比如数据类型)；</p><p><code>template&lt;typename T&gt;</code></p><h2 id="3-构造函数">3.构造函数</h2><p>inline函数，在class内部定义完成，比较快，但是是否成为inline函数由编译器决定；</p><p>数据指定为private，只给函数内部使用，用的时候利用class内部函数传递，不能直接调用；函数大部分可指定为public，允许给外部使用，也可指定private，class内部使用；</p><p>constructor（ctor，构造函数），创建对象，程序自动调用；</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">complex c1(2,1);</span><br><span class="line">complex c2; //默认值</span><br><span class="line">complex* p = new complex(4); //指针</span><br></pre></td></tr></table></figure><p>变量的初始化和赋值是两个阶段，能初始化的不要放在赋值，效率差一些；</p><p>不带指针的函数多半不用析构函数；</p><p><code>: re (r), im(i)</code></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++/%E5%88%9D%E5%80%BC%E5%8C%96.JPG" alt="构造对象与初始化"></p><p>构造函数可以有很多个，overloading重载，也就是说同一名的函数可能不止一个，但是编译器会对其作出区分，实际名称并不相同。但是写的时候要注意，可能会造成冲突，导致编译器不知道调用哪个。</p><h2 id="4-参数传递与返回">4.参数传递与返回</h2><p>举例Singleton，说明确实有类中的函数是private的。</p><p><code>const</code>关键字，代表函数不会改变数据内容：<code>double real() const &#123;return re;&#125;</code>，如果考虑到函数不改变data，<strong>一定要加上</strong>，避免编译时错误。</p><p><code>const</code>也可以用在对象面前，代表这个对象的指定的值是不可以改变的，<code>const complex c1(2,1);</code></p><p>参数传递：pass by value / pass by reference (to const)，最好参数传递都用引用，如果害怕会引用的值会改变，可以to const，<code>const complex&amp; param</code>，约定引用的值不要改变，否则编译出错。</p><p>返回值传递：return by value / return by reference (to const)，返回值也尽量传reference。</p><p>friend （友元）：<code>friend</code>关键字指定的函数可以取private中的data，比从class内部函数拿会快些。</p><p>相同class的各个object互为friend。</p><p>设计类注意：</p><ul><li>数据放在private，函数尽量放public，可被外部调用；</li><li>参数尽可能传reference，看状况加const；</li><li>返回值尽可能传reference；</li><li>class body中需要加const就去加；</li><li>构造函数的特殊用法，init初始值尽可能去用它；</li></ul><p>return by reference不能使用的一种情况，class body外的各种定义，应该是局部的变量，local variable去返回的时候不要用引用，因为程序一结束，这个空间就释放出去了。</p><h2 id="操作符重载与临时对象">操作符重载与临时对象</h2><p>1.operator overloading(操作符重载，成员函数)，this:</p><p>不能在参数列写this（成员函数都有this pointer），但是函数里面可以用，操作符传递的时候会自动给this传指针。比如<code>c2 += c1</code>中，<code>+=</code>这个操作符重载了，传递的时候c2自动给了this，你设计的时候不需要人为指定传给谁，只需要指定c1给谁就行了。</p><p>连续赋值，<code>c3+=c2+=c1</code>，关注一下返回值，ppt中举这个例子提醒我们操作符<code>+=</code>重载函数返回类型是<code>complex&amp;</code>，非代表无返回值的<a href="https://blog.csdn.net/llxlqy/article/details/79339522"><code>void</code></a>，因此支持了从右到左连续赋值操作。</p><p>2.操作符重载，非成员函数，无this:</p><p>ppt举例为了应对几种可能用法，写出几种函数方式。</p><p>temp object --typename(); 同时表明返回的是局部变量，return by value，而不是reference: <code>return complex(x + real(y), imag(y))</code>，这里的complex()就代表一个临时对象。</p><p>举例关于正负号<code>+, -</code>和运算符<code>+, -</code>编译器通过参数个数区分。</p><p>对于特殊的操作符只能写成全局的非成员函数，比如<code>cout &lt;&lt;</code>中的<code>&lt;&lt;</code>，输出操作符。当然侯捷老师举例说你也可以用成员函数代替，但是这样就变成了<code>c1 &lt;&lt; cout</code>，c1放前面用this指针读取，cout是操作符重载函数的输入参数，虽然不会有啥错误，但是不符合常规习惯。</p><p>这里讲了cout的返回值不是void，因为可能会连续输出，返回值为ostream&amp;，再一次强调好的程序设计思想。</p><p>再一次总结：初始化值；const；参数传递尽量考虑pass by reference；return考虑value或者reference；数据尽量放在private，函数一般放在public中。</p><h2 id="复习complex类的实现过程">复习Complex类的实现过程</h2><ul><li><p>防卫式常数定义；</p></li><li><p>class head + class body；</p></li><li><p>private写数据，public写函数（返回值方式，参数传递方式，初值列，成员函数（前面加class名称），考虑是否加const，利用友元关键字获取private数据）；</p></li><li><p>inline函数（是否成为看编译器），传引用时注意变量是否为local variable；</p></li><li><p>可用临时对象返回；</p></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#ifndef __COMPLEX__</span><br><span class="line">#define __COMPLEX__</span><br><span class="line">class complex</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">complex (double r = 0, double i = 0)</span><br><span class="line">: re (r), im (i)</span><br><span class="line">&#123; &#125;</span><br><span class="line">complex&amp; operator += (const complex&amp;);</span><br><span class="line">double real () const &#123; return re; &#125;</span><br><span class="line">double imag () const &#123; return im; &#125;</span><br><span class="line">private:</span><br><span class="line">double re, im;</span><br><span class="line">friend complex&amp; __doapl (complex*,</span><br><span class="line">const complex&amp;);</span><br><span class="line">&#125;;</span><br><span class="line">#endif</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">inline complex&amp;</span><br><span class="line">__doapl(complex* ths, const complex&amp; r)</span><br><span class="line">&#123;</span><br><span class="line">ths-&gt;re += r.re; //ths是代表类的指针，所以用-&gt;访问成员</span><br><span class="line">ths-&gt;im += r.im;</span><br><span class="line">return *ths;</span><br><span class="line">&#125;</span><br><span class="line">inline complex&amp;</span><br><span class="line">complex::operator += (const complex&amp; r)</span><br><span class="line">&#123;</span><br><span class="line">return __doapl (this, r);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">inline complex</span><br><span class="line">operator + (const complex&amp; x, const complex&amp; y)</span><br><span class="line">&#123;</span><br><span class="line">return complex ( real (x) + real (y),</span><br><span class="line">imag (x) + imag (y) );</span><br><span class="line">&#125;</span><br><span class="line">inline complex</span><br><span class="line">operator + (const complex&amp; x, double y)</span><br><span class="line">&#123;</span><br><span class="line">return complex (real (x) + y, imag (x));</span><br><span class="line">&#125;</span><br><span class="line">inline complex</span><br><span class="line">operator + (double x, const complex&amp; y)</span><br><span class="line">&#123;</span><br><span class="line">return complex (x + real (y), imag (y));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;iostream.h&gt;</span><br><span class="line">ostream&amp;</span><br><span class="line">operator &lt;&lt; (ostream&amp; os,</span><br><span class="line">const complex&amp; x)</span><br><span class="line">&#123;</span><br><span class="line">return os &lt;&lt; &#x27;(&#x27; &lt;&lt; real (x) &lt;&lt; &#x27;,&#x27;</span><br><span class="line">&lt;&lt; imag (x) &lt;&lt; &#x27;)&#x27;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三大函数：拷贝构造-拷贝赋值-析构">三大函数：拷贝构造，拷贝赋值，析构</h2><p>解析string类，带point numbers指针；</p><p>big three，三个特殊函数；</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class String</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">String(const char* cstr = 0);</span><br><span class="line">String(const String&amp; str); //拷贝构造</span><br><span class="line">String&amp; operator=(const String&amp; str); //拷贝赋值</span><br><span class="line">~String(); //析构函数，离开作用域，进行清楚clean</span><br><span class="line">char* get_c_str() const &#123; return m_data; &#125; //成员函数，inline function</span><br><span class="line">private:</span><br><span class="line">char* m_data; //指定指针，动态分配，未指定大小</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>class with pointer members必须有copy ctor(拷贝构造)和copy op=(拷贝赋值)，浅拷贝与深拷贝的问题。</strong></p><p>拷贝赋值：检测自我赋值，先清空，再开辟，然后复制过来。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 析构</span><br><span class="line">inline</span><br><span class="line">String::~String()</span><br><span class="line">&#123;</span><br><span class="line">delete[] m_data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 拷贝构造</span><br><span class="line">inline</span><br><span class="line">String::String(const String&amp; str)</span><br><span class="line">&#123;</span><br><span class="line">m_data = new char[ strlen(str.m_data) + 1 ];</span><br><span class="line">strcpy(m_data, str.m_data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 拷贝赋值</span><br><span class="line">inline</span><br><span class="line">String&amp; String::operator=(const String&amp; str)</span><br><span class="line">&#123;</span><br><span class="line">if (this == &amp;str)</span><br><span class="line">   return *this;</span><br><span class="line">delete[] m_data;</span><br><span class="line">m_data = new char[ strlen(str.m_data) + 1 ];</span><br><span class="line">strcpy(m_data, str.m_data);</span><br><span class="line">return *this;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="堆-栈与内存管理">堆，栈与内存管理</h2><p>stack，是存在于某作用域scope的一块内存空间。比如函数本身就会形成一个stack。</p><p>heap堆，由操作系统提供的一块global内存空间，程序可动态分配，比如<code>new</code>关键字，需要自己释放。</p><p>stack(auto) / static / global object</p><p>注意写法，防止内存泄漏；</p><p>new: 先分配memory, 再调用ctor（拷贝构造）；</p><p>delete: 先调用dtor（析构），再释放memory；</p><p>独家讲解VC编译器动态分配（new）的内存块和分配所得的array，进一步指出array new 一定要搭配 array delete；</p><p><a href="https://www.cnblogs.com/Simulation-Campus/p/8809934.html">C++中::的作用</a>；</p><p><a href="https://blog.csdn.net/love_x_you/article/details/42846993">C++中的数据类型</a>；</p><p>char(unsigned), short, int(unsigned), long(unsigned), bool, float(单精度，保留到小数点后7位), double(双精度，保留到小数点后16位)。</p><h2 id="复习string类的实现过程">复习string类的实现过程</h2><p>防卫式声明；</p><p>动态分配，利用指针（32位系统4个byte）；</p><p>构造函数，拷贝构造，拷贝赋值，析构函数（把自己清干净，clean）；</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 类声明</span><br><span class="line">class String</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">String(const char* cstr = 0);</span><br><span class="line">String(const String&amp; str);</span><br><span class="line">String&amp; operator=(const String&amp; str);</span><br><span class="line">~String();</span><br><span class="line">char* get_c_str() const &#123; return m_data; &#125;</span><br><span class="line">private:</span><br><span class="line">char* m_data;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// ctor构造函数</span><br><span class="line">inline</span><br><span class="line">// ::声明作用域，类外写函类的数</span><br><span class="line">String::String(const char* cstr = 0)</span><br><span class="line">&#123;</span><br><span class="line">if (cstr) &#123;</span><br><span class="line">m_data = new char[strlen(cstr)+1];</span><br><span class="line">strcpy(m_data, cstr);</span><br><span class="line">&#125;</span><br><span class="line">else &#123; // 未指定初值</span><br><span class="line">m_data = new char[1];</span><br><span class="line">*m_data = &#x27;\0&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">//析构函数</span><br><span class="line">inline</span><br><span class="line">String::~String()</span><br><span class="line">&#123;</span><br><span class="line">delete[] m_data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// copy ctor 拷贝构造函数</span><br><span class="line">inline</span><br><span class="line">String::String(const String&amp; str)</span><br><span class="line">&#123;</span><br><span class="line">m_data = new char[ strlen(str.m_data) + 1 ];</span><br><span class="line">strcpy(m_data, str.m_data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// copy assignment operator拷贝赋值函数</span><br><span class="line">inline</span><br><span class="line">// string后面的&amp;放在typename后面，代表reference</span><br><span class="line">String&amp; String::operator=(const String&amp; str)</span><br><span class="line">&#123;</span><br><span class="line">// str前面的&amp;代表放在object前面，取出地址</span><br><span class="line">// this是指针</span><br><span class="line">if (this == &amp;str)</span><br><span class="line">return *this;</span><br><span class="line">delete[] m_data;</span><br><span class="line">m_data = new char[ strlen(str.m_data) + 1 ];</span><br><span class="line">strcpy(m_data, str.m_data);</span><br><span class="line">// 这里用了return，不用void，不做返回值处理与之前的打印cout使用的&lt;&lt;类似，是为了连续赋值的情况出现，否则连续赋值没有对象</span><br><span class="line">// 这里*this代表传回的是this指向的值，至于具体传出去什么由函数前的声明Sting&amp;决定，两者没有绝对关系，这里实际应该传出去了引用</span><br><span class="line">return *this;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/weixin_42878758/article/details/82865314">C++中*和&amp;</a></p><h2 id="扩展补充：类模板-函数模板及其他">扩展补充：类模板，函数模板及其他</h2><p>static关键字，定义静态变量。静态局部变量保存在全局数据区（在函数内定义，多次调用函数只会初始化一次，但是只受此函数控制），而不是保存在栈中，每次的值保持到下一次调用，直到下次赋新值。静态全局变量可以实现文件隔离，静态全局变量不能被其它文件所用 (全局变量可以)，其它文件中可以定义相同名字的变量，不会发生冲突。（见<a href="https://blog.csdn.net/majianfei1023/article/details/45290467">此</a>）</p><p>singleton，某个类在整个系统中只能有一个实例对象可被获取和使用的代码模式？（见<a href="https://blog.csdn.net/crayondeng/article/details/24853471">此</a>）</p><p>类模板，函数模板；</p><p>namespace std 封装到单元，将库名称封起来，防止冲突。两种用法，一种是using directive: <code>using namespace std;</code>, 另一种是using declaration: <code>using std::cout;</code>, 一般一个文件代码如果不长，只有几百来行，可以直接用第一种。（见<a href="https://blog.csdn.net/fsz520w/article/details/82561795">此</a>）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// using directive方法</span><br><span class="line">#include &lt;iostream.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">cin &lt;&lt; ...;</span><br><span class="line">cout &lt;&lt; ...;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// using declaration</span><br><span class="line">#include &lt;iostream.h&gt;</span><br><span class="line">using std::cout;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">std::cin &lt;&lt; ...;</span><br><span class="line">cout &lt;&lt; ...;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 或者</span><br><span class="line">#include &lt;iostream.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">std::cin &lt;&lt; ;</span><br><span class="line">std::cout &lt;&lt; ...;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="组合和继承">组合和继承</h2><p>object oriented programming, object oriented desugn (OOP, OOD).</p><p>继承（inheritance），复合（composition），委托（delegation）.</p><p>1.复合：has-a, 意思是说一个类具有比较强大的功能，可以将其某些性能改造包装成一个新的类，adapter. （container—&gt; component）</p><p>复合下的构造和析构：构造由内而外（打地基），析构由外而内（剥洋葱）。</p><p>2.委托：composition by reference, pimpl: pointer to implementation.(handle/body, 编译防火墙)</p><p>共享，reference counting，当其中某个人想要改变共享的内容，那么会单独拿出一份copy来给他改，不影响原先的共享内容。</p><p>3.<strong>继承</strong>: is-a, <code>: public _List_node_base</code>，属于哪一类</p><p>继承下的构造与析构，基类与派生类。父类是子类的一种组成成分，类似复合，因此构造由内而外，析构由外而内（父类的析构函数必须是virtual的，否则会出现undefined behavior）。</p><h2 id="虚函数与多态">虚函数与多态</h2><p>inheritance with virtual functions.</p><p>non-virtual函数：不希望子类重新定义（override，覆写）它；</p><p>virtual函数：你希望子类重新定义（override覆写）它，且你对它已有默认定义；</p><p>pure virtual函数：你希望子类一定要定义它，你对它没有默认定义；</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class Shape&#123;</span><br><span class="line">public:</span><br><span class="line">  virtual void draw() const=0; # pure virtual</span><br><span class="line">  // impure virtual</span><br><span class="line">  virtual void error(const std::string&amp; msg);</span><br><span class="line">  // non-virtual</span><br><span class="line">  int objectID() const;</span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">class Rectangle:public Shape&#123;...&#125;;</span><br><span class="line">class Epllipse: public Shape&#123;...&#125;;</span><br></pre></td></tr></table></figure><p>举例application framework中的template method（指的某一个函数），不是之前的C++模板（通过this调用子类覆写的虚函数）。</p><p>inheritance+composition关系下的构造和析构，子类既有继承又有component part（子类先构造父类的default构造函数，然后在调用component的default构造函数），或者子类是继承，父类有component part（先复合，再继承）；</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++/inheritance_composition_ctor.JPG" alt></p><h2 id="委托相关设计">委托相关设计</h2><p>delegation+inheritance:</p><p>讲设计模式，并推荐<a href="https://pan.baidu.com/s/1pLIoWDd">Design Patterns Explained Simply</a></p><ul><li><p>file system, 文件系统；</p></li><li><p>prototype, 原型；</p></li></ul><hr><p><strong>复习：</strong></p><p>0.防卫式声明。</p><p>1.inline关键字</p><p>line的使用是有所限制的，inline只适合函数体内代码简单的函数使用，不能包含复杂的结构控制语句例如while、switch，并且不能内联函数本身不能是直接递归函数（即，自己内部还调用自己的函数）。定义在类中的成员函数缺省都是内联的，如果在类定义时就在类内给出函数定义，那当然最好。如果在类中未给出成员函数定义，而又想内联该函数的话，那在类外要加上inline，否则就认为不是内联的。（只是给编译器的建议）</p><p>2.函数构造函数初始化，比赋值快。</p><p>3.const关键字加在为改变数据值的表达式前面，限定为只读属性。</p><p>4.尽量返回引用，但是局部临时变量或者函数结束对象就死亡的不能返回其引用。</p><p>5.友元friend，相同类的各个实例对象互为friend，可以通过彼此的内部方法调用传入参数的内部私有成员变量。</p><p>6.this指针，操作符重载函数，成员函数，编译器自动读取，设计者不可自己指定作为声明，但是可以在函数中显式使用。</p><p>7.构造，拷贝构造，拷贝赋值，其中拷贝赋值记得检测自我赋值，否则内存出错。</p><p>8.new关键字，先分配足够的memory，再进行构造。delete关键字，先调用析构函数，然后释放内存。用了new array，也要注意用相应的delete array.</p><p>9.多类关系，复合，委托，继承，以及继承中的虚函数。</p><h2 id="part2-导读">Part2-导读</h2><p>part1是面向对象编程，part2是兼谈对象模型。</p><ul><li>保持良好编程风格和素养基础上，探讨更多技巧；</li><li>泛型编程（generic programming）和面对对象编程（object-oriented programming)虽然分属不同思维，但它们正是C++的技术主线，所以本课程也讨论模板（template）；</li><li>深入探索面向对象之继承关系所形成的对象模型（object model)，包括隐藏于底层的this指针，vptr虚指针，vbtl虚表，virtual mechanism虚机制，以及virtual function虚函数造成的polymorphism多态效果；</li></ul><p>讲解C++11中的三个特性，更多的特性在侯捷老师另一个C++ 2.0教学视频中提及。</p><ul><li>variadic template;</li><li>auto;</li><li>range-based for loop;</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++/part2_content.JPG" alt="第二部分将涉及的内容"></p><h2 id="转换函数-conversion-function">转换函数 conversion function</h2><p>大意就是类型之间的转换，比如把自定义的类类型转换成内建类型（比如double），后者向相反的方向转。（类转出去，或者把其他东西转换成类）。</p><p>只要设计者认为合理，就可以在一个类中写好几个转换函数。</p><p>转换函数的形式：<code>operator typeName()</code></p><ul><li>转换函数必须是类的成员函数；</li><li>转换函数不能指定返回类型，但是有返回值；</li><li>转换函数没有参数；</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class Fraction&#123;</span><br><span class="line">public:</span><br><span class="line">   Fraction(int num, int den=1)</span><br><span class="line">     :m_numerator(num), m_denominator(den)&#123;&#125;</span><br><span class="line">   // 转换函数，讲分数转成double类型，返回类型已经由operator关键字后面得double()指定</span><br><span class="line">   operator double() const&#123;</span><br><span class="line">     return (double) (m_numerator / m_denominator);</span><br><span class="line">   &#125;</span><br><span class="line">private:</span><br><span class="line">   int m_numerator; //分子</span><br><span class="line">   int m_denominator; //分母</span><br><span class="line">&#125;；</span><br><span class="line"></span><br><span class="line">// 例子</span><br><span class="line">// Fraction f(3,5);</span><br><span class="line">double d=4+f; //调用operator double()将f转为0.6</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="non-explicit-one-argument-constructor">non-explicit one argument constructor</h2><p>explict关键字，用在构造函数前面，让编译器不去隐式调用变量类型转换，避免在用户不需要类型转换时就自动进行转换。</p><p>具体解释示例见<a href="https://blog.csdn.net/FightFightFight/article/details/79513657">此博客</a>。</p><h2 id="pointer-like-classes">pointer-like classes</h2><p>1.关于智能指针。</p><p>举例shared_ptr，实际上还有unique_ptr, auto_ptr(c++ 98, 但也可继续使用), weak_ptr等。</p><blockquote><p>为了更加容易（更加安全）的使用动态内存，引入了智能指针的概念。智能指针的行为类似常规指针，重要的区别是它负责自动释放所指向的对象。标准库提供的两种智能指针的区别在于管理底层指针的方法不同，shared_ptr允许多个指针指向同一个对象，unique_ptr则“独占”所指向的对象。标准库还定义了一种名为weak_ptr的伴随类，它是一种弱引用，指向shared_ptr所管理的对象，这三种智能指针都定义在memory头文件中。</p></blockquote><p>必须写操作符重载<code>operator*()</code>和<code>operator-&gt;()</code></p><p>其中箭头符号-&gt;会继续作用下去。</p><p>关于C++11中四种典型的智能指针讲解，见<a href="https://blog.csdn.net/k346k346/article/details/81478223">此</a>。</p><p>2.关于迭代器。</p><p>容器，容器一定带迭代器</p><p>也是智能指针，但是略有不同，操作符重载多了几个，<code>operator*()</code>,<code>operator-&gt;()</code>, <code>operator++()</code>, <code>operator--()</code>，因为指针要移动。</p><blockquote><p>迭代器是为了表示容器中某个元素位置这个概念而产生的，是一种检查容器内元素并遍历元素的数据类型。C++更趋向于使用迭代器而非下标进行操作，因为标准库（STL）为每一种标准容器定义了一种迭代器类型，而只有少数容器支持下标操作访问容器元素。</p></blockquote><p><a href="https://blog.csdn.net/u013719339/article/details/80615217">c++中的容器和迭代器</a>。</p><h2 id="function-like-classes">function-like classes</h2><p>仿函数，functor。</p><p>operator (), 重载小括号</p><blockquote><p>仿函数（Functor）又称为函数对象（Function Object）是一个能行使函数功能的类。仿函数的语法几乎和我们普通的函数调用一样，不过作为仿函数的类，都必须重载 operator() 运算符。因为调用仿函数，实际上就是通过类对象调用重载后的 operator() 运算符。</p><p>在stl中提供了大量有用的仿函数，比如plus，minus，multiplies，divides，modulus，equal_to，not_equal_to，greater…很多很多，根据传入的参数的个数我们可以分为只需要接受一个参数的仿函数（unary_function）和需要接收两个参数的仿函数（binary_function）。</p></blockquote><p>为什么需要仿函数，<a href="https://blog.csdn.net/K346K346/article/details/82818801">这里</a>给出了一个解释。</p><p>仿函数的一些应用见<a href="https://blog.csdn.net/coolwriter/article/details/81533226">此</a>。</p><h2 id="namespace经验谈">namespace经验谈</h2><p>包住你的函数，防止和项目中其他开发者导致类，函数冲突。</p><p><code>using namespace std;</code></p><p><code>namespace jj01(自己取得空间名称)</code></p><p>调用函数时，加上空间名，比如：<code>jj01::test_member_template()</code></p><h2 id="template-模板">template 模板</h2><p>class template，在part1中已经讲过，比如声明类的时候可以指定数据类型。</p><p>function template，与类模板不同的是，函数模板在使用是不需要显式地声明传入参数类型，编译器将自动推导类型（编译器会对function template进行实参推导）。</p><p>member template，成员模板。一个类(无论是普通类还是类模板)可以包含本身是模板的成员函数。这种函数称为成员模板。注意！成员模板不能是虚函数。该语言特性往往被用来支持class template内的成员之间的自动类型转换。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++/class_template.JPG" alt="类模板"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++/function_template.JPG" alt="函数模板"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++/member_template.JPG" alt="成员模板"></p><h2 id="specialization">specialization</h2><p>模板的泛化与特化。</p><p>还有一种partial specialization, 偏特化----个数上的偏特化，范围上的偏特化。</p><blockquote><p>模板为什么要特化，因为编译器认为，对于特定的类型，如果你对某一功能有更好地实现，那么就该听你的。</p><p>模板分为类模板与函数模板，特化分为全特化与偏特化。全特化就是限定死模板实现的具体类型，偏特化就是模板如果有多个类型，那么就只限定为其中的一部分，其实特化细分为范围上的偏特化与个数上的偏特化。(C++模板全特化之后已经失去了Template的属性了)</p><p>模板的泛化：是指用的时候指定类型。</p></blockquote><p>优先级：全特化&gt;偏特化&gt;主版本模板类。</p><p>具体解释可参考<a href="https://blog.csdn.net/m_buddy/article/details/72973207">1</a>和<a href="https://www.cnblogs.com/xuelisheng/p/9323853.html">2</a>。</p><h2 id="template-template-parameter">template template parameter</h2><p>模板参数本身也是模板。</p><p>容器需要好几个模板参数。</p><p>函数模板不支持模板的模板参数。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">template&lt;typename T,</span><br><span class="line">          template &lt;typename T&gt;</span><br><span class="line">          class Container //class不能被typename代替</span><br><span class="line">         &gt;</span><br><span class="line">class XCls</span><br><span class="line">&#123;</span><br><span class="line">private:</span><br><span class="line">  Container&lt;T&gt; c;</span><br><span class="line">public:</span><br><span class="line">   .....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意，模板的模板参数中，class 不能被替换成typename。在模板中，如果不能区分的哪应该使用typename和class，可以全部都用class替代，typename和class的作用基本相同，而typename出现得比较晚。同时它也支持缺省值（参考此<a href="https://blog.csdn.net/qq_37960222/article/details/83932246">博客</a>）。</p><h2 id="关于c-标准库">关于C++标准库</h2><p>侯捷老师建议全部上手调用一遍，实验一遍。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++/about_std.JPG" alt></p><p>可参考侯捷老师的C++标准库STL讲解<a href="https://www.bilibili.com/video/BV1db411q7B8">视频</a>。</p><h2 id="三个主题">三个主题</h2><p>1.variadic templates (since c++11)，数量不定的模板参数。</p><p><code>template &lt;typename T, typename... Types&gt;</code></p><p>…就是一个所谓的pack包，<code>sizeof...(args)</code>可以看出几个arguments.</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++/variadic_template.JPG" alt="c++2.0的一个比较大的语言特性"></p><p>2.auto (since c++11)</p><p>让编译器帮忙推导type类型，但是频繁使用会使代码阅读性变差。另外有些情况不适合用auto，因为编译器可能无法判断类型。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++/auto.JPG" alt="auto关键字"></p><p>3.range-based for (since c++11)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for (decl : coll)&#123;</span><br><span class="line">    statement</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for (int i: &#123;2,3,5,7,9,13,17,19&#125;) &#123;</span><br><span class="line">  cout&lt;&lt;i&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vector&lt;double&gt; vec;</span><br><span class="line">...</span><br><span class="line">for (auto elem:vec)&#123;</span><br><span class="line">    cout&lt;&lt;elem&lt;&lt;endl; //pass by value，对值操作不改变原先的值</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">for (auto&amp; elem:vec)&#123;</span><br><span class="line">    elem *= 3 //pass by reference,对原先的数值造成影响</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更多的C++11特性讲解见侯捷老师的这个<a href="https://www.bilibili.com/video/BV1p4411v7Dh">视频</a>。</p><h2 id="reference">reference</h2><p>一种漂亮的pointer，多半用在参数传递上面。指针*指向变量的地址，引用&amp;可以理解为变量的另一个名称，代表的就是这个变量，虽然内部依旧是指针实现的。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++/reference.JPG" alt="reference和指针*的区别"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++/reference_.JPG" alt="reference的用法"></p><h2 id="复合-继承关系下的构造和析构">复合&amp;继承关系下的构造和析构</h2><p>复习前面的类与类的关系。</p><p>继承：构造由内而外，析构由外而内。</p><p>复合：拥有关系，构造由内而外，析构由外而内。</p><p>继承+复合：base&lt;----derived-----&gt;component, 具体怎么排base和component看编译器。</p><h2 id="关于vptr和vtbl">关于vptr和vtbl</h2><p>object model对象模型，virtual pointer(vptr)和virtual table(vtbl).</p><p>多个虚函数只有一个指针。</p><p>动态绑定（指针调用，向上转型，调用虚函数），非静态绑定，虚机制，多态（面向对象继承多态的本质）。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++/vptr_vtbl.JPG" alt="虚机制，p是this pointer"></p><p>可参考此<a href="https://blog.csdn.net/qq_29003347/article/details/78566304">博客</a>。</p><h2 id="关于this">关于this</h2><p>除了上面的那个多态，虚函数的另一种用法，template method。此例子在part1也举过，放在这里由于之前解释了虚函数和动态绑定的用法，所以复习之后进一步加深这个设计理念。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++/about_this.JPG" alt="this指针指的是子类，同时调用serialize虚函数，满足动态绑定条件"></p><p>后面简单从编译后的汇编码看静态绑定和动态绑定。</p><h2 id="谈谈const">谈谈const</h2><p>侯捷老师强调const关键字在设计时非常重要，一定要注意，该加的一定要记得加上。</p><p>const放在成员函数后头，可修饰成员函数。下面PPT的例子中，有两个<code>operator[]</code>函数，由于const也算是函数签名，所以并不会构成ambiguity. 其中前者是针对常量字符串，不必考虑COW(copy on write)，后者需考虑COW，在这里，函数是从一个字符串中取出某个值，可能对其进行变动，返回是reference也预示了这个情况。侯捷老师在这里举例了前面的共享内存的例子，可能多个指针变量指向同一块内存，如果其中某一个需要修改所指的变量值，那么就是单独copy出来一份给他改。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++/const.JPG" alt="注意object调用成员函数的匹配问题"></p><p>关于const关键字的简单总结可参考此<a href="https://blog.csdn.net/u011333734/article/details/81294043">博客</a>。</p><h2 id="关于new-delete">关于New, Delete</h2><p>1.复习</p><p>new先分配memory，再调用ctor.</p><p>delete先调用dtor，再释放memory.</p><p>array new一点更要搭配array delete.</p><p>即<code>new()</code>搭配<code>delete()</code>，<code>new[]</code>搭配<code>delete[]</code>.</p><p>2.重载operator new, operator delete, operator new[], operator delete[]</p><p>从内存分配上看，new[]里面还加了一个counter，4个字节大小，存储你new了几个元素，这样便于delete时销毁。</p><p>如果写上了global scope operator ::，那么调用new和delete会绕过前述所有的overload functions，强迫使用global version.</p><blockquote><p>C++语言内置默认实现了一套全局new和delete的运算符函数以及placement new/delete运算符函数。不管是类还是内置类型都可以通过new/delete来进行堆内存对象的分配和释放的。对于一个类来说，当我们使用new来进行构建对象时，首先会检查这个类是否重载了new运算符，如果这个类重载了new运算符那么就会调用类提供的new运算符来进行内存分配，而如果没有提供new运算符时就使用系统提供的全局new运算符来进行内存分配。内置类型则总是使用系统提供的全局new运算符来进行内存的分配。对象的内存销毁流程也是和分配一致的。</p><p>new和delete运算符既支持全局的重载又支持类级别的函数重载。下面是这种运算符的定义的格式：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//全局运算符定义格式</span><br><span class="line">void * operator new(size_t size [, param1, param2,....]);</span><br><span class="line">void operator delete(void *p [, param1, param2, ...]);</span><br><span class="line"></span><br><span class="line">//类内运算符定义格式</span><br><span class="line">class CA</span><br><span class="line">&#123;</span><br><span class="line">  void * operator new(size_t size [, param1, param2,....]);</span><br><span class="line">  void operator delete(void *p [, param1, param2, ...]);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>对于new/delete运算符重载我们总有如何下规则：</p><ul><li>new和delete运算符重载必须成对出现。</li><li>new运算符的第一个参数必须是size_t类型的，也就是指定分配内存的size尺寸；delete运算符的第一个参数必须是要销毁释放的内存对象。其他参数可以任意定义。</li><li>系统默认实现了new/delete、new[]/delete[]、 placement new / delete 6个运算符函数。它们都有特定的意义。</li><li>你可以重写默认实现的全局运算符，比如你想对内存的分配策略进行自定义管理或者你想监测堆内存的分配情况或者你想做堆内存的内存泄露监控等。但是你重写的全局运算符一定要满足默认的规则定义。</li><li>如果你想对某个类的堆内存分配的对象做特殊处理，那么你可以重载这个类的new/delete运算符。当重载这两个运算符时虽然没有带static属性，但是不管如何对类的new/delete运算符的重载总是被认为是静态成员函数。</li><li>当delete运算符的参数&gt;=2个时，就需要自己负责对象析构函数的调用，并且以运算符函数的形式来调用delete运算符。</li></ul></blockquote><p>更多详解可参考此<a href="https://www.jianshu.com/p/d2d5cdd7aa1d">博客</a>。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++/operator_new1.JPG" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++/operator_new2.JPG" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++/operator_new3.JPG" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++/operator_new4.JPG" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++/operator_new5.JPG" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++/operator_new6.JPG" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++/operator_new7.JPG" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++/operator_new8.JPG" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/houjieC++/operator_new9.JPG" alt></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;about&quot;&gt;About&lt;/h2&gt;
&lt;p&gt;侯捷手把手教学C++&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1aW411H7Xa?p=1&quot;&gt;video-part1&lt;/a&gt;；&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1sW411J7JQ/?spm_id_from=333.788.videocard.0&quot;&gt;video-part2&lt;/a&gt;;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/harvestlamb/Cpp_houjie&quot;&gt;课件与代码&lt;/a&gt;；&lt;/p&gt;
&lt;h2 id=&quot;1-简介&quot;&gt;1.简介&lt;/h2&gt;
&lt;p&gt;编写规范的class代码（object based，单一class)；&lt;/p&gt;
&lt;p&gt;学习class之间的关系（object oriented，多个class）—继承/复合/委托；&lt;/p&gt;
&lt;p&gt;主要学习c++ 98/c++11，以c++ 98为主；&lt;/p&gt;
&lt;p&gt;同时关注C++ 语言和C++标准库；&lt;/p&gt;
&lt;p&gt;推荐书籍：C++ Primer, The C++ Programming Language (C++11), Effective C++ 11, The C++ Standard Library, STL源码剖析；&lt;/p&gt;</summary>
    
    
    
    <category term="课程记录" scheme="http://densecollections.top/categories/%E8%AF%BE%E7%A8%8B%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="C++11" scheme="http://densecollections.top/tags/C-11/"/>
    
    <category term="侯捷" scheme="http://densecollections.top/tags/%E4%BE%AF%E6%8D%B7/"/>
    
  </entry>
  
  <entry>
    <title>二分图搜无向定长环</title>
    <link href="http://densecollections.top/posts/loopdetectioninBipartitegraph/"/>
    <id>http://densecollections.top/posts/loopdetectioninBipartitegraph/</id>
    <published>2020-05-08T02:41:32.000Z</published>
    <updated>2022-09-09T03:28:13.487Z</updated>
    
    <content type="html"><![CDATA[<h2 id="about">About</h2><p>这个问题来源于中兴举办的2020优招算法比赛“傅里叶派”，要求是对提供的数据进行二分图建模，然后找出4，6，8，10，12，14的无向图的总数量，同时有时间和禁止多线程操作要求。起先，我是把数据当成随机生成的普通数据，然后利用DFS（B站上有个up主讲的DFS和BFS系列非常浅显易懂，<a href="https://www.bilibili.com/video/BV1Ks411579J?from=search&amp;seid=7572393692341634029">链接</a>）和拼接单链组合成环，最后利用python的set哈希去重的方法来实现的，在一阶段数据上（（256+640，256+640）大小的邻接矩阵）大概可以进1分钟至1分半钟。后面，随着第二阶段数据的增大（（1344+1344，1344+1344）大小的邻接矩阵），运行时间急剧增加，大概到了30分钟。实际上，算法的主要瓶颈在去重时间上（去重数据达到亿级别的字符串），为了降低去重时间，我花了不少时间去Google，包括数据库的一些去重，或者使用bitmap位图等，考虑到硬件限制，试了一下<a href="https://github.com/joseph-fox/python-bloomfilter">bloom filter</a>，但是由于hash碰撞等原因，可能出现一些误判，而且随着查重数量的增大，占用的内存也会增大。最后的测试时间上与set相比没有什么优势。</p><p>最后跟朋友交流，发现数据的一些规律得以解决。原来主办方给的数据是精心设计过的，整个数据中存在固定长度的固定数量sections，每个section中若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub><msub><mi>B</mi><mi>j</mi></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">A_{i}B_{j}=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，那么<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><msub><mi>B</mi><mrow><mi>j</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">A_{i+1}B_{j+1}=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，存在这么一种递推关系，这样就会大大减少了搜索量和查重量。根据固定的节点修改代码，最后运行时间从半个小时降到了50s左右。</p><p>最后的数据规律是快要接近deadline知道的，虽然分析数据也应当是一个基本的素养，但是面对这种题目，我个人感觉还是追求通用性解决方案更有意义一些。比如真正面对庞大的数据量的时候，关系图是不确定的，没有这种很强的先验知识，那么应该设计系统去尽可能快速地查找和统计环的数量。我自己没有进一步深究了，目前的几个naive想法是可以考虑多线程找环查重在一起合并查重，查重获取可以采用一些数据库的技术，比如针对业务建一个服务器专门用来进行通用性查重，代码中直接调API即可。</p><p>具体题目要求，两阶段数据和代码见<a href="https://github.com/Richardyu114/ZTEchallenge-2020-Fourier">github仓库</a></p><span id="more"></span><h2 id="算法设计">算法设计</h2><p><strong>在阶段一中，没有对数据分布进行分析，而是单纯以普通的二分图找环问题进行算法设计</strong>：</p><p>首先读入csv文件数据，将A, B之间关系采用邻接表的形式分别存储，并赋给A, B中每个人以独有的id（A的id为0-A总人数减一，B的id为0加A总人数-B总人数减一加A总人数），然后利用深度优先搜索思想，按id从小到大的顺利，以每个A为起点，不断递归往下深入图，找出符合长度的环，并将其存储，遍历去重，得到属于每个A的环结果。由于每个A都是往下搜索下一个A，所以搜出的环不会与前面的结果重复，最后直接相加每个A搜索出的结果即为最后的答案。</p><p>由于图的尺寸比较大，纯搜索环（以本题为例，尤其环的长度超过8以后搜索时间会迅速增加）和遍历去重比较耗时，为此需要进行优化。</p><p>a). 由于是搜索二分图中的无向环，因此环的长度只能是偶数，为了减少整体搜索时间，将10，12，14长度的环分别切成两条长度相等的单链（长度分别为6，7，8），仅头和尾节点相同的单链可以组合成以上述长度的环，4，6，8长度的环可以在搜索单链时分别反向回溯下一节点得到环的数量；</p><p>b). 遍历去重问题是个人算法设计中最为耗时的一部分，实验发现如果仅按照a)中的思想搜索环而不去重，可以较快得到答案。一种直接的去重方法是以list存放环的组成id，并升序排好嵌入另一个大list中，之后拼出的环在其中遍历比较，不相等即计数加一并将其append进大list中，但是随着环长度的增加，遍历比较的时间爆炸增长，几乎无法很好完成去重任务。因此后续考虑将已升好序的环的id转成字符串进行编码存入set()中，通过内部hash去重，来极大降低去重开销；</p><p><strong>在阶段二中，若直接采用阶段一的思路来处理阶段二的数据，程序运行时间会从95s左右增加到1600s左右，时间复杂度太高</strong>。对这种普适性找环算法在题目限制下优化几乎不太可能，于是将目光转移到数据上。通过分析发现，整体数据可以分成好几个sections，在每个sections内部，A点的朋友关系是递增的，即若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub><msub><mi>B</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">A_{i}B_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>是朋友，那么<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><msub><mi>B</mi><mrow><mi>j</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">A_{i+1}B_{j+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>也是朋友，这种相似性结构会导致sections内部每个点A的环组成也是相似的，且数量相同，类似于动态规划中的重叠子问题。因此，只需要计算每个sections内中开头点的环数量，然后乘以该section的长度，最后相加所有的sections即可。另外，由于是无向环，因此最后还需要将累加得出的每个固定长度环的数量除以A的节点数，去除重复搜索的影响。</p><p><strong>由于两阶段的数据都存在这样的规律，因此可以大大简化搜索算法，只需指定不同section的开头节点和长度便可将其合并</strong>。</p><h2 id="代码">代码</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import csv</span><br><span class="line">import time</span><br><span class="line">from collections import deque</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">数据之间存在规律：如果A_&#123;i&#125;B_&#123;j&#125;之间是朋友关系，那么A_&#123;i+1&#125;B_&#123;j+1&#125;也是朋友关系</span><br><span class="line">每行数据之间和上一行存在递归关系，这些关系存在于每份数据固定长度的段落中，</span><br><span class="line">因此可以简化搜索点，每个段落只需搜索起始点即可，后面的环数量都相同</span><br><span class="line"></span><br><span class="line">1.通过深度优先搜索DFS在A和B之间反复往下找，直到固定长度或者无法深入为止；</span><br><span class="line">2.由于环的长度越大纯搜索就越耗时，所以利用一半长度加1的单链然后组合拼接；</span><br><span class="line">3.拼接过后的无向环存在重复，利用字符串编码环信息和集合set()加速遍历去重；</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">class Solutions():</span><br><span class="line"></span><br><span class="line">  def __init__(self, input_file, output_file):</span><br><span class="line">      self.input_file = input_file  #输入的csv文件名</span><br><span class="line">      self.output_file = output_file #输出的文件名</span><br><span class="line">      self.A_num = 0 #存储A部落人数</span><br><span class="line">      self.B_num = 0  # 存储B部落人数</span><br><span class="line">      self.graphAB = &#123;&#125; # 存储A与B的好友关系</span><br><span class="line">      #存储长度为6,7,8的单链，后续组合元素到10,12,14的环</span><br><span class="line">      self.lines = &#123;6:deque([]), 7:deque([]), 8:deque([])&#125; </span><br><span class="line">      #存储搜索到的长度为4，6，8, 10, 12, 14的环</span><br><span class="line">      self.circles = &#123;4:set(), 6:set(), 8:set(), 10:set(), 12:set(), 14:set()&#125;</span><br><span class="line">      self.count = &#123;4:0, 6:0, 8:0, 10:0, 12:0, 14:0&#125; #存储最终答案</span><br><span class="line">      self.sections_len = 0 # 存储给定数据中设定的固定段落数长度</span><br><span class="line"></span><br><span class="line"># 读取CSV文件创建字典表示关系图</span><br><span class="line">  def load(self):</span><br><span class="line">      with open(self.input_file, &#x27;r&#x27;) as f_in:</span><br><span class="line">           lines = list(csv.reader(f_in))</span><br><span class="line">           self.A_num = len(lines) # A部落人数         </span><br><span class="line">           self.B_num = len(lines[0])  # B部落人数</span><br><span class="line">           for m in range(self.A_num + self.B_num):</span><br><span class="line">               self.graphAB[m] = deque([])</span><br><span class="line">           for i in range(self.A_num):</span><br><span class="line">               for j in range(self.B_num):</span><br><span class="line">                   if lines[i][j] == &#x27;1&#x27;:</span><br><span class="line">                      # A的id：0 ~ self.A_num - 1</span><br><span class="line">                      # B的id：self.A_num ~ self.A_num + self.B_num - 1</span><br><span class="line">                      self.graphAB[i].append(j + self.A_num)</span><br><span class="line">                      self.graphAB[j + self.A_num].append(i)</span><br><span class="line"></span><br><span class="line"> # 深度优先遍历搜索小于等于8的路径</span><br><span class="line">  def  DFS(self, s,A_head,path):</span><br><span class="line">       &quot;&quot;&quot;</span><br><span class="line">       根据好友关系搜索环，直到深度小于8或没有为止</span><br><span class="line">       并根据对应关系存入4，6，8的环和6，7，8的单链</span><br><span class="line">       s: 搜索起始点</span><br><span class="line">       A_head: 最开始的起点A</span><br><span class="line">       path: 搜索出的路径</span><br><span class="line">       &quot;&quot;&quot;</span><br><span class="line">       # 计算路径的长度</span><br><span class="line">       path_len = len(path)</span><br><span class="line">       </span><br><span class="line">       # 4，6，8的路径的下一个朋友是起点，成4，6，8的环</span><br><span class="line">       if (path_len &gt; 2) and (A_head in self.graphAB[s]) :</span><br><span class="line">          path_ = path[1:] #深拷贝当前path，丢掉开头</span><br><span class="line">          path_.sort() #升序排列</span><br><span class="line">          # 进行字符串编码</span><br><span class="line">          path_s = &#x27;&#x27;.join(p for p in map(str, path_)) </span><br><span class="line">          # 利用set()和内置hash函数去重</span><br><span class="line">          if path_s not in self.circles[path_len]:</span><br><span class="line">             self.circles[path_len].add(path_s)</span><br><span class="line">             self.count[path_len] += 1</span><br><span class="line">       </span><br><span class="line">       # 6，7，8的路径塞进存储中，后续组合配对成环</span><br><span class="line">       if (path_len &gt; 5) and (path_len &lt; 9):</span><br><span class="line">          self.lines[path_len].append(path[1:])</span><br><span class="line"></span><br><span class="line">      # 深度优先搜索，长度只搜到8</span><br><span class="line">       if path_len &lt; 8:</span><br><span class="line">          for f_next in self.graphAB[s]:</span><br><span class="line">              # 如果一个一个搜，可以这样写，每个环只往下搜避免重复</span><br><span class="line">              # if (f_next not in path) and (f_next &gt; A_head):</span><br><span class="line">              if (f_next not in path): </span><br><span class="line">                 path.append(f_next)</span><br><span class="line">                 self.DFS(f_next, A_head, path)</span><br><span class="line">                 path.pop()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   #将找到固定长度的单链两两组合成环并去重</span><br><span class="line">  def lines2circles(self):</span><br><span class="line">      &quot;&quot;&quot;</span><br><span class="line">      把以某个A为起点搜索出的固定长度的单链进行比较</span><br><span class="line">      找出除起终点相同任意元素都不同的单链两两配对成环</span><br><span class="line">      lines: 指定长度的单链集合列表，每个单链开头的元素相同，都是以A中某人为起点</span><br><span class="line">      &quot;&quot;&quot;</span><br><span class="line">      # 依次拼接长度为6，7，8的单链</span><br><span class="line">      # 初始化访问标志位，便于确立是否可以拼接两条单链</span><br><span class="line">      visited = [0] * (self.A_num + self.B_num)</span><br><span class="line">      for k,v in zip(self.lines.keys(),self.lines.values()):</span><br><span class="line">          len_lines = len(v) #单链的数量</span><br><span class="line">          # 以某个A为起点的固定长度单链可能没有或只有一个，</span><br><span class="line">          # 这个时候无法成环，不用继续运行</span><br><span class="line">          if (len_lines == 0) or (len_lines == 1):  </span><br><span class="line">             return </span><br><span class="line">          # 开始找环 </span><br><span class="line">          len_circle = 2 * k - 2</span><br><span class="line">          # 将lines按照最后一个元素进行升序，降低循环次数</span><br><span class="line">          v = sorted(v,key=lambda k:k[-1])</span><br><span class="line"></span><br><span class="line">          for t in range(len_lines - 1):</span><br><span class="line">              line1 = v[t]</span><br><span class="line">              for s in line1:</span><br><span class="line">                  visited[s] = 1</span><br><span class="line">              for k in range(t+1, len_lines):</span><br><span class="line">                  #确保只在起终点相同的line中组合，第二个没有后面一定没有</span><br><span class="line">                  if line1[-1] != v[k][-1]:</span><br><span class="line">                     break </span><br><span class="line">                  #找出两个中相同的元素 </span><br><span class="line">                  line2 = v[k][:-1]</span><br><span class="line">                  SAME = 0 # 合并双链判断标志</span><br><span class="line">                  # 除了开头和末尾还有其他元素相同，无法配对成环</span><br><span class="line">                  for s in line2:</span><br><span class="line">                      if visited[s] == 1:</span><br><span class="line">                         SAME = 1</span><br><span class="line">                         break</span><br><span class="line">                  if SAME == 0:</span><br><span class="line">                     #去掉相同的头和尾元素，成环并升序</span><br><span class="line">                     circle = line1 + line2</span><br><span class="line">                     circle.sort()</span><br><span class="line">                      # 字符串编码环存入set()</span><br><span class="line">                     circle_ = &#x27;&#x27;.join(c for c in map(str, circle))</span><br><span class="line">                     if circle_ not in self.circles[len_circle]:</span><br><span class="line">                        self.circles[len_circle].add(circle_)</span><br><span class="line">                        self.count[len_circle] += 1</span><br><span class="line">              for s in line1:</span><br><span class="line">                  visited[s] = 0</span><br><span class="line"></span><br><span class="line">  # 以每个A为起点搜索所有指定长度的不重复无向环                            </span><br><span class="line">  def search_circles(self):</span><br><span class="line">      &quot;&quot;&quot;</span><br><span class="line">      以每个A为起点找环；</span><br><span class="line">      由于数据存在规律，可以简化搜索点；</span><br><span class="line">      否则，如果是随机生成朋友关系，</span><br><span class="line">      需要一个一个点去搜</span><br><span class="line">      </span><br><span class="line">      &quot;&quot;&quot;</span><br><span class="line">      # 第一阶段数据各段落开头节点</span><br><span class="line">      if self.A_num == 256:</span><br><span class="line">         nodes = [0, 64, 128, 192]</span><br><span class="line">         self.sections_len = 64</span><br><span class="line">      # 第二阶段数据各段落开头节点   </span><br><span class="line">      elif self.A_num == 1344:</span><br><span class="line">         nodes = [0, 192, 384, 576, 768, 960, 1152]</span><br><span class="line">         self.sections_len = 192</span><br><span class="line">      # 如果数据是随机生成的</span><br><span class="line">      else:</span><br><span class="line">         nodes = range(self.A_num)</span><br><span class="line">      for i in nodes:</span><br><span class="line">          path = [i]</span><br><span class="line">          #找4，6，8长度环和6，7，8长度单链</span><br><span class="line">          self.DFS(i,i,path)</span><br><span class="line">          # 拼接10，12，14长度环</span><br><span class="line">          self.lines2circles()</span><br><span class="line">          </span><br><span class="line">          # 清空，下一次找环做准备</span><br><span class="line">          self.lines = &#123;6:deque([]), 7:deque([]), 8:deque([])&#125;</span><br><span class="line">          self.circles = &#123;4:set(), 6:set(), 8:set(), 10:set(), 12:set(), 14:set()&#125;</span><br><span class="line"></span><br><span class="line">          # 简单打印程序进度</span><br><span class="line">          if self.sections_len != 0:</span><br><span class="line">             print(&#x27;progress:：%d / %d&#x27;%(i+self.sections_len, self.A_num), end=&#x27;\r&#x27;)</span><br><span class="line">          else:</span><br><span class="line">             print(&#x27;progress:：%d / %d&#x27;%(i+1, self.A_num), end=&#x27;\r&#x27;)</span><br><span class="line">          </span><br><span class="line">  # 写入答案到txt文件        </span><br><span class="line">  def output_ans(self):</span><br><span class="line">      &quot;&quot;&quot;</span><br><span class="line">      把最终的答案写到result.txt文件中</span><br><span class="line">      并打印至终端</span><br><span class="line">      &quot;&quot;&quot;</span><br><span class="line">      with open(self.output_file, &#x27;w&#x27;) as f_out:    </span><br><span class="line">          for k,v in zip(self.count.keys(), self.count.values()):</span><br><span class="line">              # 每个A节点会被重复遍历，因此需要除以环中包含的A节点数</span><br><span class="line">              # 如果是一个一个搜，改一下DFS最后的if代码，此处不再需要</span><br><span class="line">              # 这里是为了统一数据规律的情况做了折中处理</span><br><span class="line">              v = v * self.sections_len // (k // 2)</span><br><span class="line">              f_out.write(&#x27;木托盘上有%d个名字的祭品最多有%d个;\n&#x27;%(k,v))</span><br><span class="line">              print(&#x27;\n&#x27;, v)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">   </span><br><span class="line">   t1 = time.time()</span><br><span class="line">   find = Solutions(&#x27;Example.csv&#x27;, &#x27;result.txt&#x27;)</span><br><span class="line">   find.load()</span><br><span class="line">   find.search_circles()</span><br><span class="line">   find.output_ans()</span><br><span class="line">   t2 = time.time()</span><br><span class="line">   print(&#x27;Runing Time: %ds&#x27;%(t2-t1))</span><br><span class="line">             </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>个人线下IDE 采用VS Code，笔记本电脑运行环境为64位 Win10下的Anaconda3 Python 3.7虚拟环境，CPU为2.3GHz的i5-8300H，总内存为16G。针对第一阶段数据，程序用时大约3s左右，针对第二阶段数据，程序用时大约50s左右。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/loopdetectioninBipartitegraph/1.JPG" alt="一阶段数据结果"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/loopdetectioninBipartitegraph/2.JPG" alt="二阶段数据结果"></p><p>实际上，此份代码是还可以进一步优化的，尤其是去重部分，还可以根据数据做些文章，我自己不是很感兴趣，没再继续下去了。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;about&quot;&gt;About&lt;/h2&gt;
&lt;p&gt;这个问题来源于中兴举办的2020优招算法比赛“傅里叶派”，要求是对提供的数据进行二分图建模，然后找出4，6，8，10，12，14的无向图的总数量，同时有时间和禁止多线程操作要求。起先，我是把数据当成随机生成的普通数据，然后利用DFS（B站上有个up主讲的DFS和BFS系列非常浅显易懂，&lt;a href=&quot;https://www.bilibili.com/video/BV1Ks411579J?from=search&amp;amp;seid=7572393692341634029&quot;&gt;链接&lt;/a&gt;）和拼接单链组合成环，最后利用python的set哈希去重的方法来实现的，在一阶段数据上（（256+640，256+640）大小的邻接矩阵）大概可以进1分钟至1分半钟。后面，随着第二阶段数据的增大（（1344+1344，1344+1344）大小的邻接矩阵），运行时间急剧增加，大概到了30分钟。实际上，算法的主要瓶颈在去重时间上（去重数据达到亿级别的字符串），为了降低去重时间，我花了不少时间去Google，包括数据库的一些去重，或者使用bitmap位图等，考虑到硬件限制，试了一下&lt;a href=&quot;https://github.com/joseph-fox/python-bloomfilter&quot;&gt;bloom filter&lt;/a&gt;，但是由于hash碰撞等原因，可能出现一些误判，而且随着查重数量的增大，占用的内存也会增大。最后的测试时间上与set相比没有什么优势。&lt;/p&gt;
&lt;p&gt;最后跟朋友交流，发现数据的一些规律得以解决。原来主办方给的数据是精心设计过的，整个数据中存在固定长度的固定数量sections，每个section中若&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;msub&gt;&lt;mi&gt;B&lt;/mi&gt;&lt;mi&gt;j&lt;/mi&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;A_{i}B_{j}=1&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.969438em;vertical-align:-0.286108em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.31166399999999994em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.05017em;&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.311664em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.05724em;&quot;&gt;j&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.286108em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.64444em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，那么&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;msub&gt;&lt;mi&gt;B&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;j&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;A_{i+1}B_{j+1}=1&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.969438em;vertical-align:-0.286108em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.311664em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mbin mtight&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.208331em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.05017em;&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.311664em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.05724em;&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;mbin mtight&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.286108em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.64444em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，存在这么一种递推关系，这样就会大大减少了搜索量和查重量。根据固定的节点修改代码，最后运行时间从半个小时降到了50s左右。&lt;/p&gt;
&lt;p&gt;最后的数据规律是快要接近deadline知道的，虽然分析数据也应当是一个基本的素养，但是面对这种题目，我个人感觉还是追求通用性解决方案更有意义一些。比如真正面对庞大的数据量的时候，关系图是不确定的，没有这种很强的先验知识，那么应该设计系统去尽可能快速地查找和统计环的数量。我自己没有进一步深究了，目前的几个naive想法是可以考虑多线程找环查重在一起合并查重，查重获取可以采用一些数据库的技术，比如针对业务建一个服务器专门用来进行通用性查重，代码中直接调API即可。&lt;/p&gt;
&lt;p&gt;具体题目要求，两阶段数据和代码见&lt;a href=&quot;https://github.com/Richardyu114/ZTEchallenge-2020-Fourier&quot;&gt;github仓库&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="算法与实现" scheme="http://densecollections.top/categories/%E7%AE%97%E6%B3%95%E4%B8%8E%E5%AE%9E%E7%8E%B0/"/>
    
    
    <category term="python" scheme="http://densecollections.top/tags/python/"/>
    
    <category term="algorithm" scheme="http://densecollections.top/tags/algorithm/"/>
    
    <category term="contest" scheme="http://densecollections.top/tags/contest/"/>
    
  </entry>
  
  <entry>
    <title>[MIT]计算机科学课堂中学不到的知识</title>
    <link href="http://densecollections.top/posts/4074/"/>
    <id>http://densecollections.top/posts/4074/</id>
    <published>2020-03-02T09:56:00.000Z</published>
    <updated>2022-09-09T03:29:50.975Z</updated>
    
    <content type="html"><![CDATA[<h2 id="about">About</h2><ul><li><a href="https://missing.csail.mit.edu/">homepage</a>;</li><li><a href="https://www.bilibili.com/video/av86911412?p=1">lecture video;</a></li><li>2020年初始刚放出的公开课，十分实用，千呼万唤始出来。主要是介绍一些CS领域常用的工具和技巧，这些对于平时科研，工作都有很大的帮助。正如在课程介绍和评论中说的，<strong>&quot;It’s not computer science. It is computer literacy.&quot;</strong></li><li>相关资源：阮一峰老师的<a href="https://wangdoc.com/bash/index.html">bash脚本教程</a></li></ul><span id="more"></span><h2 id="lecture-1-course-overview-the-shell">Lecture 1. Course overview + the shell</h2><p><a href="https://missing.csail.mit.edu/2020/course-shell/">官方讲义</a>比较系统和简练，其中包含一些练习题。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">date #显示时间</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># echo 后面跟上要输出的文本</span><br><span class="line">echo Hello</span><br><span class="line">echo &quot;Hello World&quot;</span><br><span class="line">echo Hello\ World</span><br><span class="line">echo $PATH</span><br><span class="line">which echo</span><br><span class="line">#讲解绝对路径和相对路径</span><br><span class="line">pwd # print working diretory</span><br><span class="line">cd # change working path</span><br><span class="line">cd .. #进入当前目录上一目录</span><br><span class="line"># 讲解输入代码要注意相对路径和绝对路径</span><br><span class="line"></span><br><span class="line">ls #当前路径下的文件</span><br><span class="line">ls .. # 当前路径前一层的文件夹下的文件</span><br><span class="line">cd ~ # 返回/home/username/</span><br><span class="line">cd - #往返当前和上一个文件夹路径</span><br><span class="line"># 讲解 - 加在某个命令后增加argument</span><br><span class="line"></span><br><span class="line">ls -l # 显示更加详细的文件信息，比如read, write, excute（对该文件或文件夹执行命令）</span><br><span class="line"></span><br><span class="line"># mv 文件名 文件名  将源文件名改为目标文件名</span><br><span class="line"># mv 文件名 目录名  将文件移动到目标目录</span><br><span class="line"># mv 目录名 目录名  目标目录已存在，将源目录移动到目标目录；目标目录不存在则改名</span><br><span class="line"># mv 目录名 文件名  出错</span><br><span class="line">mv filename1 filename2</span><br><span class="line">cp source dest #复制文或目录</span><br><span class="line">rm filename #删除文件或目录，不可恢复的操作</span><br><span class="line">rmdir # 删除空目录，但无法删除非空目录</span><br><span class="line">mkdir # 新建目录</span><br><span class="line">man ls #manual, 功能类似-help，但是更便于阅读，按q退出</span><br><span class="line"># CTRL + l清除面板记录</span><br></pre></td></tr></table></figure><p>在终端有个输入流input stream和输出流output stream，一般输出流就是执行输入的命令，打印在终端上，但是而可以通过&lt; 和 &gt;符号对input stream和output stream进行指定</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo hello &gt; hello.txt # 把文本hello存储在hello.txt中</span><br><span class="line">cat hello.txt or cat &lt; hello.txt # 显示file 内容</span><br><span class="line">cat &lt; hello.txt &gt; hello2.txt # 复制内容到hello2.txt中，而且是从头覆写</span><br><span class="line">cat &lt; hello.txt &gt;&gt; hello2.txt # append, 接着后面写</span><br><span class="line"></span><br><span class="line">ls -l | tail -n1 &gt;ls.txt # 显示最后一行并写入ls.txt</span><br><span class="line"># | 管道命令，是指 | 的左边运行结果 是|右边的 输入条件或者范围</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo su # 加入root权限，后续命令都以super user执行，exit命令推出</span><br><span class="line">cd sys # 进入系统设备，可以查看一些参数</span><br><span class="line"># 进入之后如果想改变某些系统参数，但是又没有使用sudo su，可以使用tee命令</span><br><span class="line">#  tee命令用于读取标准输入的数据，并将其内容输出成文件</span><br><span class="line"># 下面的命令不仅改变了brightness亮度值，还打印出结果在终端</span><br><span class="line">echo 1060 | sudo tee brightness</span><br><span class="line"></span><br><span class="line">xdg-open filename #以默认程序打开文件</span><br></pre></td></tr></table></figure><h2 id="shell-tools-and-scripting">Shell Tools and Scripting</h2><p><a href="https://missing.csail.mit.edu/2020/shell-tools/">官方笔记</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">foo=bar</span><br><span class="line">echo foo</span><br><span class="line"># 失效</span><br><span class="line">foo = bar</span><br><span class="line"># echo单引号和双引号的区别</span><br><span class="line">echo &quot;value is $ foo&quot; # value is bar</span><br><span class="line">echo &#x27;value is $foo&#x27; # value is $foo</span><br><span class="line">echo &quot;we are in $(pwd)&quot;</span><br></pre></td></tr></table></figure><p>.sh中的$</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># creates a directory and cds into it.</span><br><span class="line">mcd () &#123;</span><br><span class="line">    mkdir -p &quot;$1&quot;</span><br><span class="line">    cd &quot;$1&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>$0</code> - Name of the script</li><li><code>$1</code> to <code>$9</code> - Arguments to the script. <code>$1</code> is the first argument and so on.</li><li><code>$@</code> - All the arguments</li><li><code>$#</code> - Number of arguments</li><li><code>$?</code> - Return code of the previous command(上一次的错误代码，echo $?，返回值为0代表正确)</li><li><code>2$</code> -Process Identification number for the current script (两个美元一起，把’2’换成’$’，我这里显示有问题)</li><li><code>!!</code> - Entire last command, including arguments. A common pattern is to execute a command only for it to fail due to missing permissions, then you can quickly execute it with sudo by doing <code>sudo !!</code></li><li><code>$_</code> - Last argument from the last command. If you are in an interactive shell, you can also quickly get this value by typing <code>Esc</code> followed by <code>.</code></li></ul><p><code>grep</code>命令用于查找文件里符合条件的字符串，<code>grep foobar mcd.sh</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">true</span><br><span class="line">echo $? # 0</span><br><span class="line">false</span><br><span class="line">echo $? #1</span><br><span class="line"></span><br><span class="line">false || echo &quot;Oops, fail&quot;</span><br><span class="line"># Oops, fail</span><br><span class="line"></span><br><span class="line">true || echo &quot;Will not be printed&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">true &amp;&amp; echo &quot;Things went well&quot;</span><br><span class="line"># Things went well</span><br><span class="line"></span><br><span class="line">false &amp;&amp; echo &quot;Will not be printed&quot;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">false ; echo &quot;This will always run&quot;</span><br><span class="line"># This will always run，分号代表两个不关联的语句</span><br></pre></td></tr></table></figure><p><a href="http://example.sh">example.sh</a>，查找指定的arguments代表的文件中是否有“foobar”这个字符串，没有就加上</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">echo &quot;Starting program at $(date)&quot; # Date will be substituted</span><br><span class="line"></span><br><span class="line">echo &quot;Running program $0 with $# arguments with pid $$&quot;</span><br><span class="line"></span><br><span class="line">for file in $@; do</span><br><span class="line">    grep foobar $file &gt; /dev/null 2&gt; /dev/null</span><br><span class="line">    # When pattern is not found, grep has exit status 1</span><br><span class="line">    # We redirect STDOUT and STDERR to a null register</span><br><span class="line">    # since we do not care about them</span><br><span class="line">    if [[ $? -ne 0 ]]; then</span><br><span class="line">        echo &quot;File $file does not have any foobar, adding one&quot;</span><br><span class="line">        echo &quot;# foobar&quot; &gt;&gt; &quot;$file&quot;</span><br><span class="line">    fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls *.py #打印所有含有.py的文件名</span><br><span class="line">ls project? #打印所有&quot;project&quot;后加一个字符的文件名</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">convert image.png image.jpg</span><br><span class="line">conert image.&#123;png,jpg&#125; #大括号有笛卡儿积的作用</span><br><span class="line">touch foo/x bar/y #touch更改文件时间属性，没有则创建</span><br><span class="line">diff &lt;(ls foo) &lt;(ls bar) #比较两个文件夹的不同</span><br></pre></td></tr></table></figure><p><code>#!/usr/bin/env python</code>加在第一句可以将python按照./file.py执行，提供了解释器的环境路径</p><p>利用<code>shellcheck</code>检查bash脚本错误</p><p>几个shell tools：</p><ul><li><p>利用<a href="https://tldr.sh/">tldr</a>简化命令的使用教程，可代替<code>man</code>命令</p></li><li><p>find命令</p></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Find all directories named src</span><br><span class="line">find . -name src -type d</span><br><span class="line"># Find all python files that have a folder named test in their path</span><br><span class="line">find . -path &#x27;**/test/**/*.py&#x27; -type f</span><br><span class="line"># Find all files modified in the last day</span><br><span class="line">find . -mtime -1</span><br><span class="line"># Find all zip files with size in range 500k to 10M</span><br><span class="line">find . -size +500k -size -10M -name &#x27;*.tar.gz&#x27;</span><br><span class="line"></span><br><span class="line"># 还可以找到特定的文件然后执行命令</span><br><span class="line"># Delete all files with .tmp extension</span><br><span class="line">find . -name &#x27;*.tmp&#x27; -exec rm &#123;&#125; \;</span><br><span class="line"># Find all PNG files and convert them to JPG</span><br><span class="line">find . -name &#x27;*.png&#x27; -exec convert &#123;&#125; &#123;.&#125;.jpg \;</span><br></pre></td></tr></table></figure><p>另有根据数据库查找的<code>locate</code>命令，更新数据库<code>updatedb</code></p><ul><li>利用<a href="https://github.com/BurntSushi/ripgrep">rg</a>等代替grep查找代码中的特定语句</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Find all python files where I used the requests library</span><br><span class="line">rg -t py &#x27;import requests&#x27;</span><br><span class="line"># Find all files (including hidden files) without a shebang line</span><br><span class="line">rg -u --files-without-match &quot;^#!&quot;</span><br><span class="line"># Find all matches of foo and print the following 5 lines</span><br><span class="line">rg foo -A 5</span><br><span class="line"># Print statistics of matches (# of matched lines and files )</span><br><span class="line">rg --stats PATTERN</span><br></pre></td></tr></table></figure><ul><li><p><code>history，history  | grep find</code>, <code>CTRL+R</code>交互搜索命令，推荐<code>fzf</code></p></li><li><p>文件导航，推荐<a href="https://github.com/Canop/broot">broot</a></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;about&quot;&gt;About&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://missing.csail.mit.edu/&quot;&gt;homepage&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.bilibili.com/video/av86911412?p=1&quot;&gt;lecture video;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2020年初始刚放出的公开课，十分实用，千呼万唤始出来。主要是介绍一些CS领域常用的工具和技巧，这些对于平时科研，工作都有很大的帮助。正如在课程介绍和评论中说的，&lt;strong&gt;&amp;quot;It’s not computer science. It is computer literacy.&amp;quot;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;相关资源：阮一峰老师的&lt;a href=&quot;https://wangdoc.com/bash/index.html&quot;&gt;bash脚本教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="MissingcourseofCS" scheme="http://densecollections.top/categories/MissingcourseofCS/"/>
    
    
    <category term="computer science" scheme="http://densecollections.top/tags/computer-science/"/>
    
    <category term="public course" scheme="http://densecollections.top/tags/public-course/"/>
    
    <category term="MIT" scheme="http://densecollections.top/tags/MIT/"/>
    
    <category term="practical skills" scheme="http://densecollections.top/tags/practical-skills/"/>
    
  </entry>
  
  <entry>
    <title>Stanford CS231n 笔记</title>
    <link href="http://densecollections.top/posts/notesofCS231N/"/>
    <id>http://densecollections.top/posts/notesofCS231N/</id>
    <published>2020-02-29T04:44:28.000Z</published>
    <updated>2022-09-09T03:31:28.106Z</updated>
    
    <content type="html"><![CDATA[<h2 id="about">About</h2><ul><li><a href="http://cs231n.stanford.edu/">homepage</a>;</li><li><a href="https://www.bilibili.com/video/av13260183?from=search&amp;seid=2308745029556209710">2017 lecture video</a>;</li><li><a href="https://zhuanlan.zhihu.com/p/21930884">中文笔记</a></li><li>课程相关时间安排，课件，参考资料，作业详见homepage链接，以最新版为主；</li><li>官方的assignments和notes做得非常好，强烈推荐学习和反复观看；</li><li>时间原因，学习19版的时候恰好2020版春季课程将要开始，这一版换了team，里面加了不少新的research介绍，尤其是非监督，自监督之类的，因此会加入一下2020版的内容；</li><li>个人比较喜欢Justin Johnson的讲课风格和深度，因此配合他在UMICH (University of Michigan) 的 <a href="https://web.eecs.umich.edu/~justincj/teaching/eecs498/">EECS498: Deep Learning for Computer Vision</a>课一起看，可以相互补充（和CS231N有很大重叠， 但也些不同）；</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/summary.JPG" alt="提前把最后一节课的总结放出来。整个课程将按照这个fundamentals-CNN-applications来讲"></p><h2 id="lecture1-introduction">Lecture1. Introduction</h2><p>Related courses in Stanford:</p><ul><li><p>CS131: Computer Vision: Foundations and Applications</p></li><li><p>CS231a: Computer Vision, from 3D Reconstruction to Recognition</p></li><li><p>CS 224n: Natural Language Processing with Deep Learning</p></li><li><p>CS 230: Deep Learning</p></li><li><p><strong>CS231n: Convolutional Neural Networks for Visual Recognition</strong></p></li><li><p>Andrew Ng的CS229虽然不在列表中，但个人觉得也值得一看，毕竟也属于经典ML课程。</p></li></ul><p>A  Brief history of Computer Vision and CS 231n:</p><ul><li>从史前生物产生视觉开始，到后面的人类对于视觉的研究：相机，生物学研究，以及陆续地对于计算机视觉/机器视觉的系统研究，在社会各个领域结合产生的特定任务的建模设计等工作，这里再一次提到了David Marr的《vision》一书对整个计算机视觉领域的奠基于推动作用。</li><li>介绍卷积神经网络CNN对计算视觉的推动作用，简介了CNN的历史以及在各个视觉有关问题上的强大作用。</li><li>推荐课本教材：《Deep Learning》 by Goodfellow, Bengio, and Courville.</li></ul><span id="more"></span><h2 id="lecture2-image-classification">Lecture2. Image Classification</h2><p>material: 主讲人<a href="http://cs.stanford.edu/people/jcjohns/">Justin Johnson</a>编写的<a href="http://cs231n.github.io/python-numpy-tutorial/">python numpy tutorial</a>，个人觉得是个很不错的教程。</p><p>官方的<a href="http://cs231n.github.io/classification/">notes1–image classification</a>和<a href="http://cs231n.github.io/linear-classify/">notes2-linear classification</a>是对本次课的一个总结，补充和拓展（其中第二个笔记大部分是下次课的内容，放在这里我猜可能是预习吧），可以说写得十分详细了，而且常温常新。</p><ul><li>首先阐述对于计算机而言，为什么分类图片很难（光照，视点，类似纹理背景等）；</li><li>介绍了一些传统方法对此的努力，但是这些方法效果不好，具有单一性，鲁棒性和generalization都很差；</li><li>引入data-drive approcah, 也就是收集数据，训练，预测三段式方法；</li><li>介绍Nearest Neighbours分类器，并阐释不同K值和distance metric选取的不同performance（L1和L2的选取与坐标轴旋转对数据引起的改变）；</li><li>介绍交叉验证的作用，以及说明K-NN的维度诅咒（处理大数据吃力）和 predict速度慢的缺陷（需要一个个和训练集图片计算distance）；</li><li>引入线性分类器，权重矩阵<strong>W</strong>，偏置矩阵<strong>b</strong>，并在第二个官网的notes中详细地介绍了SVM和Softmax两种loss衡量方式；</li></ul><p><a href="https://www.jianshu.com/p/43318a3dc715">关于交叉熵，相对熵以及为什么选择交叉熵作为损失函数</a>。</p><p>官网推荐的一篇阅读review <a href="https://homes.cs.washington.edu/~pedrod/papers/cacm12.pdf">A Few Useful Things to Konw About Machine Learnig</a>，写于2012年，但是仍不过时，可以一读。文中写到的12个&quot;folk wisdom&quot;:</p><ul><li>Learning = representation+evaluation+optimization;</li><li>It’s generalization that counts;</li><li>Data alone is not alone;</li><li>Overfitting has many faces;</li><li>Intuition falis in high dimensions;</li><li>Theoretical guarantees are not what they seem;</li><li>Feature engineering is the key;</li><li>More data beats a cleverer algorithm;</li><li>Learn many models, not just one;</li><li>Simplicity does not imply accuracy;</li><li>Representable does not imply learnable;</li><li>Gneralization does not imply causation;</li></ul><h2 id="lecture3-loss-functions-and-optimization">Lecture3. Loss Functions and Optimization</h2><p>官方笔记：<a href="http://cs231n.github.io/linear-classify/">linear classification</a>, <a href="http://cs231n.github.io/optimization-1/">optimization</a>有更为详细的课程内容解释和总结;</p><p>其中linear classification笔记中有个交互式<a href="http://vision.stanford.edu/teaching/cs231n-demos/linear-classify/">demo</a>，主要用来体会SVM和Softmax来训练线性分类器的过程，包括调节正则项，学习率等超参数；</p><ul><li><p>上节课引入linear classification，现在需要loss function定量分类器对分类结果与training data的GT之间的差异，需要一些optimization方式去有效寻找模型参数可以最小化loss；</p></li><li><p>介绍两种loss衡量metric: Multiclass SVM和Softmax，并认为两种方式在训练分类器时差异不会很大，SVM是为了拉大正确的score与非正确score之间的差值到设定的margin，所以分的越差惩罚越重，分的越好基本上不再去多费精力，而Softmax则不断将正确的probability拉的更高，错误的拉的更低；</p></li><li><p>由于满足loss function的权重矩阵<strong>W</strong>有无数个（针对linear classification），之间可成正比例关系，因此需要引入正则项让模型自己适应数据，得到generalization比较高的模型参数；</p></li><li><p>针对优化参数方法，通过随机搜索过渡到梯度下降gradient descent，在官方笔记中更加仔细地介绍了针对实际工程应用的梯度下降法（数值梯度，分析梯度等），满足计算性能之间的trade-off</p></li><li><p>最后针对图像特征，介绍了color histogram, HoG (Histogram of Oriented Gradients), Bag of Words等方法。将feature映射到更高维的空间，使分类问题变得容易，这也是CNN的一大作用，从而引入下一节主题；</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/3_1.JPG" alt="特征映射"></p><p>在这里插一下sigmoid, softmax和cross entropy之间的联系，我们一般说的分类是单标签多分类，也就是说一张图片只会有一个标签，标签与标签之间是互斥的，而softmax计算的类别概率是类别互斥的，因为和为1，而针对多标签分类，也就是说一张图片可能有多个标签存在，标签之间不是非此即彼的，类别不互斥，此时用sigmoid激活函数，因为sigmoid是互相独立的计算，只判断此神经元是否属于该位置对应的类别，所以在计算多分类交叉熵时是每个神经元按照二分类交叉熵算然后求和平均。参考<a href="https://www.zhihu.com/question/341500352/answer/795497527">blog1</a>, <a href="https://blog.csdn.net/tsyccnh/article/details/79163834">blog2</a>.</p><p>梯度下降算法理解：</p><p>假设一个模型拟合表达式为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>θ</mi><mn>0</mn></msub><mo>+</mo><msub><mi>θ</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>θ</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mo>…</mo><mo>+</mo><msub><mi>θ</mi><mi>n</mi></msub><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">h_{\theta}(x)=\theta_{0}+\theta_{1} x_{1}+\theta_{2} x_{2}+\ldots+\theta_{n} x_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\theta_{i}, x_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>一般都是矩阵，对于一个输入，我们希望计算的值与真实函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>尽可能得接近，直接照着真实函数分布去“依葫芦画瓢”比较困难，所以来最小化他们之间得残差来搜索拟合函数的参数，假设我们用平方损失函数：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mo stretchy="false">(</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mi>y</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">J(\theta)=\frac{1}{2} \sum \limits _{i=1}^{m}(h_{\theta}(x)-y)^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.329066em;vertical-align:-0.9776689999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3513970000000004em;"><span style="top:-2.122331em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0000050000000003em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.950005em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9776689999999999em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span>，现在我们对每一个超参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">\theta_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>求偏导，得到关于它得梯度（函数上升最快得方向），由于我们是想找最小值，所以要反方向走（实际可以在损失函数前加个符号，转为找最大值）：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><msub><mi>θ</mi><mi>j</mi></msub></mrow></mfrac><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><msub><mi>θ</mi><mi>j</mi></msub></mrow></mfrac><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mi>y</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>=</mo><mo stretchy="false">(</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo><mo>⋅</mo><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><msub><mi>θ</mi><mi>j</mi></msub></mrow></mfrac><mo stretchy="false">(</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>=</mo><mo stretchy="false">(</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo><mo>⋅</mo><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><msub><mi>θ</mi><mi>j</mi></msub></mrow></mfrac><mrow><mo fence="true">(</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msubsup><msub><mi>θ</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mi>y</mi><mo fence="true">)</mo></mrow><mo>=</mo><mo stretchy="false">(</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo><msub><mi>x</mi><mi>j</mi></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{c}\frac{\partial}{\partial \theta_{j}} J(\theta)=\frac{\partial}{\partial \theta_{j}} \frac{1}{2}(h _{\theta}(x)-y)^{2}=(h _{\theta}(x)-y) \cdot \frac{\partial}{\partial \theta_{j}}(h _{\theta}(x)-y) \\=(h _{\theta}(x)-y) \cdot \frac{\partial}{\partial \theta_{j}}\left(\sum_{i=0}^{n} \theta_{i} x_{i}-y\right)=(h _{\theta}(x)-y) x_{j}\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.844856em;vertical-align:-1.172428em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.672428em;"><span style="top:-3.79232em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5423199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5423199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5423199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span><span style="top:-2.369892em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5423199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.172428em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p><p>根据梯度，加上步长learning rate, 对参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">\theta_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>进行更新：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mi>j</mi></msub><mo>:</mo><mo>=</mo><msub><mi>θ</mi><mi>j</mi></msub><mo>−</mo><mi>α</mi><mo stretchy="false">(</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo><msub><mi>x</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">\theta_{j}:=\theta_{j}-\alpha(h _{\theta}(x)-y) x_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></p><p>通过不断地迭代，使函数往最小值逼近。在深度学习实际应用时，训练的数据样本可能很大，一次迭代要计算所有的样本会非常耗时，所以利用SGD方法，抽取一些数据作为batch，认为可以近似代表整体样本的分布，每次换不同的样本去学习，也可以得到近似的解（但这也只是工程近似）。深度学习中的模型拟合函数是非常庞大而又复杂的，结合BP加梯度下降可以使函数收敛到局部最小值。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/3_2.JPG" alt="模型优化过程"></p><h2 id="lecture4-introduction-to-neural-networks">Lecture4. Introduction to Neural Networks</h2><p>这一节官方指定阅读的笔记为：<a href="http://cs231n.github.io/optimization-2/">optimization-2-bp</a>, <a href="http://cs231n.stanford.edu/handouts/linear-backprop.pdf">linear-classifier-bp</a>; 此外还给了一些推荐的阅读材料，以供选择，其中包括一份<a href="http://cs231n.stanford.edu/handouts/derivatives.pdf">向量，矩阵，BP的导数推导示意笔记</a>，Yan leCun在1998年写的名为“Efficient BackProp&quot;的<a href="http://yann.lecun.com/exdb/publis/pdf/lecun-98b.pdf">论文</a>，两篇解释BP的博客（<a href="http://colah.github.io/posts/2015-08-Backprop/">1</a>, <a href="http://neuralnetworksanddeeplearning.com/chap2.html">2</a>）和MIT <a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-034-artificial-intelligence-fall-2010/">Artificial Intelligence公开课</a>中有关BP讲解的课程视频，此外还有一篇ML中automatic differentiation的<a href="https://arxiv.org/abs/1502.05767">survey</a>. 个人感觉如果对微积分和线性代数比较熟悉的话，看一下官方指定阅读的两篇笔记就差不多了，主要是为了深入理解BP，有时间的话也强烈推荐那篇推荐阅读的博客2，是<a href="http://michaelnielsen.org/">Micahel Nielsen</a>写的《nndl》教材中的一节，在入门DL的时候我就是看的这本书，十分经典耐读。BP的使用大多是对矩阵或者说tensor张量进行的，如果对矩阵求导不熟悉，或者想系统的学习巩固下，可以移步<a href="https://zhuanlan.zhihu.com/p/24709748">矩阵求导术-上</a>和<a href="https://zhuanlan.zhihu.com/p/24863977">矩阵求导术-下</a>，上-篇写的是标量对矩阵的求导方法，下-篇写的是矩阵对矩阵的求导方法，都是通过标量上全微分表达式来进行推广和计算的：</p><p>“<strong>导数与微分的联系是计算的枢纽</strong>，标量对矩阵的导数与微分的联系是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>f</mi><mo>=</mo><mi mathvariant="normal">tr</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msubsup><mi mathvariant="normal">∇</mi><mi>X</mi><mi>T</mi></msubsup><mi>f</mi><mi>d</mi><mi>X</mi><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">d f=\operatorname{tr}\left(\nabla_{X}^{T} f d X\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="mop"><span class="mord mathrm">t</span><span class="mord mathrm">r</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.424669em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">X</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span>，先对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span>求微分，再使用迹技巧可求得导数，特别地，标量对向量的导数与微分的联系是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>f</mi><mo>=</mo><msubsup><mi mathvariant="normal">∇</mi><mi>x</mi><mi>T</mi></msubsup><mi>f</mi><mi>d</mi><mi mathvariant="bold-italic">x</mi></mrow><annotation encoding="application/x-tex">d f=\nabla_{x}^{T} f d \boldsymbol{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.088331em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">d</span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span></span></span></span>；矩阵对矩阵的导数与微分的联系是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">vec</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>d</mi><mi>F</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>F</mi><mi>T</mi></msup></mrow><mrow><mi mathvariant="normal">∂</mi><mi>X</mi></mrow></mfrac><mi mathvariant="normal">vec</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>d</mi><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\operatorname{vec}(d F)=\frac{\partial F^{T}}{\partial X} \operatorname{vec}(d X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm" style="margin-right:0.01389em;">v</span><span class="mord mathrm">e</span><span class="mord mathrm">c</span></span><span class="mopen">(</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.3823649999999998em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0373649999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">X</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9190928571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mord mathrm" style="margin-right:0.01389em;">v</span><span class="mord mathrm">e</span><span class="mord mathrm">c</span></span><span class="mopen">(</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span>，先对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>求微分，再使用向量化的技巧可求得导数，特别地，向量对向量的导数与微分的联系是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi mathvariant="bold-italic">f</mi><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi mathvariant="bold-italic">f</mi><mi>T</mi></msup></mrow><mrow><mi mathvariant="normal">∂</mi><mi mathvariant="bold-italic">x</mi></mrow></mfrac><mi>d</mi><mi mathvariant="bold-italic">x</mi></mrow><annotation encoding="application/x-tex">d \boldsymbol{f}=\frac{\partial \boldsymbol{f}^{T}}{\partial \boldsymbol{x}} d \boldsymbol{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.11042em;">f</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4344729999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.089473em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mtight"><span class="mord boldsymbol mtight">x</span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord boldsymbol mtight" style="margin-right:0.11042em;">f</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9190928571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span></span></span></span>。”（其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo separator="true">,</mo><mi mathvariant="bold-italic">x</mi><mo separator="true">,</mo><mi>X</mi></mrow><annotation encoding="application/x-tex">x,\boldsymbol {x}, X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span>分表代表标量，向量和矩阵）</p><p>我想对矩阵的求导可能是本节课的一个小重点以及后面进行DL理论学习的基石。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/4_1.JPG" alt="2020版的第四讲对BP做了更为细致的讲解"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/4_2.JPG" alt="实际计算不会存储jacobian矩阵，而且隐式计算"></p><ul><li><p>该课延续上一讲提出的linear classifier,介绍了神经元的概念，历史和应用，引入fully-connected network；</p></li><li><p>指出如果层数加多，再加上激活函数，损失函数等，网络所代表的拟合函数表达式将非常庞大而复杂，采用梯度下降的方式训练时，推出分析表达式非常不现实和实际（如果想要零时改变一个函数就要重新推算）；</p></li><li><p>由于我们不关心函数梯度具体表达式，我们只是想通过计算梯度值来更新参数，所以采用computation graph的方式来逆推local gradient，forward + backpropagation形成一个完美体系（upstream gradient, local gradient）；</p></li></ul><p>在此课之前我推导过全连接和卷积神经网络的BP，就是当成链式法则”chain rules“来对待，而这次课给我了一个数学公式之外一个更加形象化理解，也即是”computation graph“和”门电路“：</p><blockquote><p>Backpropagation can thus be thought of as gates communicating to each other (through the gradient signal) whether they want their outputs to increase or decrease (and how strongly), so as to make the final output value higher.</p></blockquote><p>而网络通过一系列”add gate&quot;, “mul gate”, “max gate&quot;等&quot;gate&quot;一步步垒成复杂的函数，而且部分组织可以组合成一个特殊的&quot;gate”，也可以被分解成其他简易的&quot;gate&quot;，方便我们进行梯度计算（注意variable分流forward之后bp要加起来+=）。通过简单的example可以了解到&quot;gate&quot; input和output之间的梯度分配关系，非常形象生动。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/4_3.JPG" alt></p><h2 id="lecture-5-convolutional-neural-networks">Lecture 5. Convolutional Neural Networks</h2><p>该节课的<a href="http://cs231n.github.io/convolutional-networks/">官方笔记</a>对卷积神经网络CNN来龙去脉和计算都介绍得很详细，同时也对每个层（Conv layer, pooling layer, fc layer）都做了全面的回顾和介绍。</p><p>另有一篇<a href="https://www.matongxue.com/madocs/32.html">博客</a>解释卷积神经网络中”卷积“一词和信号与系统中得卷积操作的联系，知乎也有个理解卷积的<a href="https://www.zhihu.com/question/22298352">回答</a>，看完之后可以加深对卷积核的理解。</p><ul><li>首先介绍感知机，神经元和CNN的历史；</li><li>简介一个卷积神经网络的结构以及直觉上层级学习的内容和特征；</li><li>大部分时间讲解卷积的计算过程；</li></ul><p><a href="https://github.com/vdumoulin/conv_arithmetic">Convolution arithmetic</a></p><h2 id="assignment-1">Assignment 1</h2><p><a href="http://cs231n.github.io/assignments2019/assignment1/">assignment page</a>;</p><p>reference：</p><ul><li><p><a href="https://github.com/Wangxb06/CS231n">github-code</a>;</p></li><li><p>参考培训机构深度之眼的cs231n-camp的文档</p></li></ul><p>具体过程和结果参见这个<a href="https://github.com/Richardyu114/CS231N-notes-and-assignments">repository</a></p><p>注意：一开始运行<code>knn.ipynb</code>文件时可能显示<code>scipy.misc.imread</code>缺失，这是因为新版的<code>scipy</code>包去掉了<code>imread</code>这个module，解决方法是可以在<code>data_utils.py</code>中的<code>from scipy.misc import imread</code>改为<code>from imageio import imread</code>。</p><h2 id="lecture-6-deep-learning-hardware-and-software">Lecture 6. Deep Learning Hardware and Software</h2><p>讲义中包含的官方制作的两大深度学习框架（Pytorch, TensorFlow）的tutorial，我把它们直接下载下来放在<a href="https://github.com/Richardyu114/CS231N-notes-and-assignments">GitHub</a>便于观看。</p><p>2017版中该课在train neural network之后，19年改为之前，由于两年间框架格局也在发生改变，所以以最新版<a href="http://cs231n.stanford.edu/slides/2019/cs231n_2019_lecture06.pdf">slides</a>为主（17版主推TensorFlow，也花了一大半时间介绍TF，19版偏向于PyTorch）。</p><p>结合前面的tutorial一起看，可以当作非常好的入门学习材料。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/dynamic_static_graph.JPG" alt="动态计算图和静态计算图"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/advice_for_frameworks.JPG" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/6_1.JPG" alt="利用ONNX制作静态pytorch模型"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/6_2.JPG" alt="利用TorchScript制作pytorch静态模型"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/6_3.JPG" alt="分布式利用pytorch训练数据，以及使用第三方库Horovod进行分布式训练：https://github.com/horovod/horovod/blob/master/docs/pytorch.rst"></p><h2 id="lecture-7-8-training-neural-networks-i-ii">Lecture 7–8. Training Neural Networks I &amp; II</h2><p>这两节课硬货非常非常的多，很多东西都值得深究。课程讲的不是很清楚，因为内容多，所以需要线下仔细看看笔记。笔记主要分为三个部分：</p><p>1.<a href="http://cs231n.github.io/neural-networks-1/">neural fc network model</a>: 介绍来自脑启发的神经元neuron，常用的激活函数（sigmoid, tanh, ReLU, Leaky ReLU, Maxout, ELU, SELU），全连接神经网络的一些结构问题，比如是否可以拟合任意连续函数，多少层足够，多大足够，以及表征能力和前向计算等。</p><p>Sigmoid在训练时除了会有梯度消失的情况外还有输出不是0均值（zero-centered）的情况：这会导致后层的神经元的输入是非0均值的信号，这会对梯度产生影响。以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo>=</mo><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi><mo stretchy="false">(</mo><mi>W</mi><mi>x</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f=sigmoid(Wx+b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span>为例， 假设输入均为正数（或负数），那么对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span></span>的导数（sigmoid的导数总是正的）总是正数（或负数），这样在反向传播过程中要么都往正方向更新，要么都往负方向更新，导致有一种捆绑效果，使得收敛缓慢。</p><blockquote><p>“<em>What neuron type should I use?</em>” Use the ReLU non-linearity, be careful with your learning rates and possibly monitor the fraction of “dead” units in a network. If this concerns you, give Leaky ReLU or Maxout a try. Never use sigmoid. Try tanh, but expect it to work worse than ReLU/Maxout.</p></blockquote><blockquote><p>larger networks will always work better than smaller networks, but their higher model capacity must be appropriately addressed with stronger regularization (such as higher weight decay), or they might overfit. We will see more forms of regularization (especially dropout) in later sections.</p></blockquote><hr><p>2020.6更新：</p><p>最近Yolo v4使用了<strong>Mish</strong>激活函数，2020年新版CS231N也加入了Swish激活函数，后续可以实验看是否高于ReLU，但是可能要注意权重初始化的问题。</p><p>Swish: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi><mo>∗</mo><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi><mo stretchy="false">(</mo><mi>β</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x) = x * sigmoid(\beta x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span></p><p>Mish: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi><mo>∗</mo><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi><mo stretchy="false">(</mo><mi>l</mi><mi>n</mi><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><msup><mi>e</mi><mi>x</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)=x*tanh(ln(1+e^{x}))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></p><p>以及更多激活函数对比见<a href="https://zhuanlan.zhihu.com/p/139696588">此</a>。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/7_5.JPG" alt="激活函数选择建议"></p><p>2.<a href="http://cs231n.github.io/neural-networks-2/">one time setup</a>: 介绍数据预处理（先减去mean image，或者是mean RGB vector中心化，然后除以std进行normalization；进行PCA降维数据，进行decorrelated或者利用whitening得到各向同性的Gaussian blob；一般利用CNN训练时不需要进行太复杂的数据预处理），<strong>权重初始化</strong>（非常重要和经验化的一点，不要以零对权重进行初始化，而是随机高斯分布采样初始化，“Xavier” initialization, 并且进行<code>w = np.random.randn(n) * sqrt(1/n)</code>对方差进行校准，为的是让输出的方差与输入的相同，后来何恺明的研究中表明，采用ReLU激活函数，初始化为<code>w = np.random.randn(n) * sqrt(2.0/n)</code>见论文&quot;<a href="https://arxiv.org/abs/1502.01852">Delving Deep into Rectifiers: Surpassing Human-Level Performance on ImageNet Classification</a>&quot;，在conv中n是kernel _size^2 * input _channels​），batch normalization（直接作为一层插入FC/CNN与激活函数层之间，把batch数据进行标准高斯分布化，当然后面还有一个超参的逆向高斯化，主要是为了让网络自己去判断这哪种对自己适合是一种启发式处理），正则化（L1，L2正则化，一般L2更好些；Max norm constraints设置权重边界；Dropout进行组合训练或者是认为进行数据增强）和损失函数（classification, regression (最好不要硬来，因为没有规律，试着往分类转化), structured prediction）等问题。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/7_6.JPG" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/8_1.JPG" alt="网络权重初始化问题"></p><p>权重初始化中还有一个transfer learning技巧，利用ImageNet的预训练模型，再根据自己的数据进行层的选择性finetune. 不过目前的研究来看，在object detection领域，自训练似乎比预训练更好（数据够多，卡够多的情况下，数据少还是老老实实用预训练吧），参照恺明大神的<a href="https://arxiv.org/abs/1811.08883">Rethinking ImageNet Pre-training</a>。</p><p>Dropout: Forces the network to have a redundant representation; Prevents co-adaptation of features</p><p><a href="https://blog.csdn.net/stdcoutzyx/article/details/49022443">对Dropout起防过拟合作用的解释–组合派和噪声派</a>；<a href="https://blog.csdn.net/fu6543210/article/details/84450890">对Inverted Dropout中神经元进行Dropout之后为何需要对余下工作的神经元进行rescale的一个解释–乘再除确保下一层输出期望不变</a></p><p>（除以p是为了保证训练和测试时输入给下一层的期望是一样的，那些失活的神经元损失的值会通过其他神经元补回来，这样就等于加强了某些神经元的鲁棒性，如果不除的话等于是随机挑选神经元训练，这样可能达不到预期的增强效果。）</p><p>Data Augmentation: translation, rotation, stretching（拉伸）, shearing（修剪）, lens distortions（镜头畸变）, color jitter （颜色抖动）等等。</p><p>Batch Normalization（类似于”白化“，实现数据独立同分布，但是BN并没有实现独立同分布，仅仅是压缩再变换）: 在前向传播时，分两种情况进行讨论：如果是在train过程，就使用当前batch的数据统计均值和标准差，并按照第二章所述公式对Wx+b进行归一化，之后再乘上gamma，加上beta得到Batch Normalization层的输出；如果在进行test过程，则使用记录下的均值和标准差，还有之前训练好的gamma和beta计算得到结果（作业中记录的值也是采用了指数权重滑动平均的方法）。</p><p>此外，CNN使用时叫spatial batchnorm，主要是考虑到卷积神经网络的参数共享特性。（<a href="https://www.zhihu.com/question/269658514">知乎回答</a>)</p><p>之前大家对BN的理解就是为了解决ICS (internal covariate shift)，让每一层输入的分布不再变化莫测（网络需要不停调整参数适应数据分布变化），同时也要加上线性变换层保留一些模型需要的原始信息，也让输出的数据值落在激活函数的敏感区域，也可作为正则化的手段（进一步解读见：<a href="https://zhuanlan.zhihu.com/p/55852062">1</a>, <a href="https://www.cnblogs.com/skyfsm/p/8453498.html">2</a>, <a href="https://machinelearningmastery.com/batch-normalization-for-training-of-deep-neural-networks/">3</a>）。</p><p>但是MIT 发表在NeurIPS 2018上的研究&quot;<strong>How Does Batch Normalization Help Optimization</strong>&quot;发现二者并无关系。研究者证明 BatchNorm 以一种基础的方式影响着网络的训练：它使相关优化问题的解空间更平滑了。这确保梯度更具预测性（见机器之心的<a href="https://www.jiqizhixin.com/articles/2018-11-13-8">翻译</a>）。</p><p>另外，最近，2020 DeepMind刚出的论文&quot;<strong>Batch Normalization Biases Deep Residual Networks Towards Shallow Paths</strong>&quot;研究了BN为何可以提升深度残差网络的训练深度：”<strong>在初始化阶段，批归一化使用与网络深度的平方根成比例的归一化因子来缩小与跳跃连接相关的残差分支的大小</strong>。这可以确保在训练初期，深度归一化残差网络计算的函数由具备表现良好的梯度的浅路径（shallow path）主导“（见机器之心的<a href="https://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;mid=2650783208&amp;idx=5&amp;sn=5ac1cbc22336a9e949e42a49310e5106&amp;chksm=871a7996b06df080454fe765caa7440b015329d4d67d3c70d5a2c807f928f8ec4151ac1ec075&amp;mpshare=1&amp;scene=1&amp;srcid=&amp;sharer_sharetime=1585028895021&amp;sharer_shareid=4ed82b8c86f7bdeb368019cfe429ee62&amp;key=da21d41c58faea5bd0311609648073cf421257a6d02c4441b3868a2b447633270e7de10abb2aa824a08b5f711c6c34e277a648a52dd60752d3155ec6d6270b2dc5745360dae6f2aea673abbca5e3864c&amp;ascene=1&amp;uin=Mjg0MTMzNDQzMQ%3D%3D&amp;devicetype=Windows+10&amp;version=62080079&amp;lang=zh_CN&amp;exportkey=AyJIB1yGzg%2B5xqUfbzluzjc%3D&amp;pass_ticket=IUc1Fn13evk5P8L18SlGS8pMmpxl8gKIhcPljl38AnLtjlv3XajT2eK9gnLXe6OU">报导</a>）。<strong>另外还有一个问题是BN到底应该放在激活函数之前还是之后</strong>？放前面的原因是可能会让激活函数反应在饱和区域，放在后面是因为原意就是为了让隐藏层更好的学习，接收比较规范化的输入，目前来看，似乎大多数论文都是放前面，实际中可能要根据具体问题具体实验，比如小网络放前面，大网络放后面？<a href="https://www.zhihu.com/question/283715823">知乎回答</a></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/7_1.JPG" alt="BatchNorm，CNN中常用"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/7_2.JPG" alt="LayerNorm，RNN中常用（因为RNN的输入样本不一定都是同样长度的序列）"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/7_3.JPG" alt="InstanceNorm，后面的style transfer会用到"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/7_4.JPG" alt="GroupNorm受HOG特征启发，有些特征是相互联系的，针对目标检测这样batch_size很小的情况做了优化，结合LN和IN"></p><p>出了上述几种变体外，还有个结合版本的Switchable Normalization，给IN, BN, LN分配权重，让网络自己去学习哪种归一化方式适合（<a href="https://blog.csdn.net/liuxiao214/article/details/81037416">总结1</a>，<a href="https://zhuanlan.zhihu.com/p/33173246">总结2</a>，在NLP中也UCB也通过观测BN的异常情况提出了最新的PN，见<a href="https://mp.weixin.qq.com/s?__biz=MzIwNzc2NTk0NQ==&amp;mid=2247486486&amp;idx=1&amp;sn=3901b342dab93dae889a744887cce454&amp;chksm=970c24c0a07badd676bcaf24833265eddede3fefc468c38031cf54c19f3d384233b1baf41375&amp;mpshare=1&amp;scene=1&amp;srcid=&amp;sharer_sharetime=1587291237878&amp;sharer_shareid=4ed82b8c86f7bdeb368019cfe429ee62&amp;key=bdd3db2c3f0f72f7f2db9c82510b3febc816e0a31a5eec50b93b6b3bf0119676f36421d454c5468967fe63a0f4e502b7215e6264ee0cf4d8a2c1fb594d7b81f30102c4b35c6f73a07e6e38a5676d59c4&amp;ascene=1&amp;uin=Mjg0MTMzNDQzMQ%3D%3D&amp;devicetype=Windows+10+x64&amp;version=6209005f&amp;lang=zh_CN&amp;exportkey=A4N3AlFSdyWYx%2FUgnxpPAk8%3D&amp;pass_ticket=gmEgMHc7Z0mPJZbQjqSRRs0scY2%2F8o3EWf%2FiXl5R0OEoJMA1VU0QqZve4JWTLBSa">此</a>）。</p><p>在防止模型过拟合方面，正则化方法除了对大权重进行惩罚外，还有引入“random noise”的思路，具体有以下几种（如下图所示）。2019年 CS231N 跟进潮流，新加了Cutout和Mixup方法，其中MixUp方法本人在custom dataset上用过，对小数量数据确实有用。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/8_2.JPG" alt="对模型进行正则化的一些方法"></p><blockquote><ul><li>The recommended preprocessing is to center the data to have mean of zero, and normalize its scale to [-1, 1] along each feature</li><li>Initialize the weights by drawing them from a gaussian distribution with standard deviation of sqrt(2/n), where n is the number of inputs to the neuron. E.g. in numpy: <code>w = np.random.randn(n) * sqrt(2.0/n)</code>.</li><li>Use L2 regularization and dropout (the inverted version)</li><li>Use batch normalization</li><li>We discussed different tasks you might want to perform in practice, and the most common loss functions for each task</li></ul></blockquote><p>3.<a href="http://cs231n.github.io/neural-networks-3/">training dynamics &amp; evaluation</a>: 梯度检查，一些网络学习的注意事项，参数更新，超参搜索，模型ensemble等。这里的重点在于optimizer优化器，从一开始的普通SGD到带<a href="http://zh.gluon.ai/chapter_optimization/momentum.html">动量的SGD</a>，然后是一些自适应学习率的优化器，比如目前最好用的Adam等。</p><p>Momentum updateing: <a href="https://blog.csdn.net/dawningblue/article/details/89487418">关于“动量”更新参数的动力学解释–“动量”应当是“阻尼系数”，点的质量和运动时间看成“1”，然后推导关于位置的更新</a>；</p><p>Nesterov Momentum: <a href="https://blog.csdn.net/dawningblue/article/details/89487480">利用趋势点希望可以跳出“坑”的困境</a>；</p><p>Second order optimization: quasi-Newton methods, <a href="https://blog.csdn.net/Im_Chenxi/article/details/80546742">数学公式</a>，<a href="https://zh.wikipedia.org/wiki/%E9%BB%91%E5%A1%9E%E7%9F%A9%E9%99%A3">Hessian矩阵</a>，二阶方法是利用函数的曲率，也就是导数的导数来进行参数更新，速度会更快，但是Hessian阵难以计算，带数学推导的知乎推荐论文<a href="https://arxiv.org/abs/1401.7020">A Stochastic Quasi-Newton Method for Large-Scale Optimization</a>. 2020.2.20，Google brain放出一篇二阶优化算法训练Transformer的论文<a href="https://arxiv.org/abs/2002.09018">Second Order Optimization Made Practical</a>. 关于非线性优化方法的一些<a href="https://www.cnblogs.com/maybe2030/p/4751804.html">区别</a>：一阶法（梯度下降，最速下降），二阶（牛顿法，拟牛顿法），共轭梯度等。</p><blockquote><p><strong>从本质上去看，牛顿法是二阶收敛，梯度下降是一阶收敛，所以牛顿法就更快。如果更通俗地说的话，比如你想找一条最短的路径走到一个盆地的最底部，梯度下降法每次只从你当前所处位置选一个坡度最大的方向走一步，牛顿法在选择方向时，不仅会考虑坡度是否够大，还会考虑你走了一步之后，坡度是否会变得更大。所以，可以说牛顿法比梯度下降法看得更远一点，能更快地走到最底部。（牛顿法目光更加长远，所以少走弯路；相对而言，梯度下降法只考虑了局部的最优，没有全局思想。）</strong></p><p><strong>根据wiki上的解释，从几何上说，牛顿法就是用一个二次曲面去拟合你当前所处位置的局部曲面，而梯度下降法是用一个平面去拟合当前的局部曲面，通常情况下，二次曲面的拟合会比平面更好，所以牛顿法选择的下降路径会更符合真实的最优下降路径。</strong></p></blockquote><p><a href="https://arxiv.org/pdf/1412.6980.pdf">Adam</a>优化算法: 其实就是momentum + RMSProp，减缓mini-batch训练中的抖动，同时自适应更新学习率，对超参的选择比较鲁棒。相关解释：<a href="https://blog.csdn.net/liuyuemaicha/article/details/52497512">矩估计</a>，<a href="https://zhuanlan.zhihu.com/p/32335746">指数加权移动平均与初始时刻阶段偏差修正</a>，<a href="https://moodle2.cs.huji.ac.il/nu15/pluginfile.php/316969/mod_resource/content/1/adam_pres.pdf">a review ppt</a>.</p><blockquote><p>The two recommended updates to use are either SGD+Nesterov Momentum or Adam.（有时候带动量的SGD法可能比Adam训练出的效果更好，但是调参的难度可能大点）</p></blockquote><p>优化算法总结推荐阅读Juliuszh的知乎专栏：<a href="https://zhuanlan.zhihu.com/p/32230623">1</a>，<a href="https://zhuanlan.zhihu.com/p/32262540">2</a>，<a href="https://zhuanlan.zhihu.com/p/32338983">3</a></p><p>另有一篇大牛Sebastian Ruder写的<a href="https://ruder.io/optimizing-gradient-descent/index.html">An overview of gradient descent optimization algorithms</a>，最近一次更新在2020.3.20，加入了新的优化器，博客中也提供了arXiv版本。</p><p>超参Hyperparameters主要包括网络架构，学习率以及其deacy 机制，参数更新机制，和正则化regularization选择及其强度。面对这些超参，在实验时可以通过以下步骤来进行：首先检查模型初始化是的loss，一般权重对每一类都是零认知的，所以会给出平均猜测；然后拿出小部分样本进行实验，进行初始化，给出一些学习率然后对其训练，从中挑出靠谱的；接着再组合学习率和deacy参数，看看哪些不错；然后对上面最好的进行长时间训练，一言以蔽之就是先在数据中的小范围中进行预演。此外也要注意learning rate中的deacy参数选择和加入时间，否则可能使学习不充分。训练刚开始可以采取<a href="https://blog.csdn.net/sinat_36618660/article/details/99650804">warm up</a>或者grad warm up处理，这个主要是针对大数据，大网络中权重的初始平稳问题，详见<a href="https://www.zhihu.com/question/338066667">知乎回答</a>。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/8_4.JPG" alt="学习率下降处理"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/8_5.JPG" alt="warmup"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/8_3.JPG" alt="超参选择方法"></p><blockquote><p>To train a Neural Network:</p><ul><li>Gradient check your implementation with a small batch of data and be aware of the pitfalls.</li><li>As a sanity check, make sure your initial loss is reasonable, and that you can achieve 100% training accuracy on a very small portion of the data</li><li>During training, monitor the loss, the training/validation accuracy, and if you’re feeling fancier, the magnitude of updates in relation to parameter values (it should be ~1e-3), and when dealing with ConvNets, the first-layer weights.</li><li>The two recommended updates to use are either SGD+Nesterov Momentum or Adam.</li><li>Decay your learning rate over the period of the training. For example, halve the learning rate after a fixed number of epochs, or whenever the validation accuracy tops off.</li><li>Search for good hyperparameters with random search (not grid search). Stage your search from coarse (wide hyperparameter ranges, training only for 1-5 epochs), to fine (narrower rangers, training for many more epochs)</li><li>Form model ensembles for extra performance</li></ul></blockquote><h2 id="lecture-9-cnn-architecture">Lecture 9. CNN Architecture</h2><p>这一节主要讲CNN的几个经典结构（AlexNet, VGG, GoogLeNet, ResNet），课外阅读材料相关网络对应的论文。</p><p>推荐阅读Justin ho对CNN architecture的介绍文章，链接在<a href="https://zhuanlan.zhihu.com/p/28749411">此</a>。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/9_1.JPG" alt="2019较2017加了最新的NAS技术，自动搜索最优结构网络"></p><p><strong>AlexNet</strong>: 开启CNN风潮的奠基之作，规划了CNN网络该有的部件（data augmentation, filter, maxpool, normalization, non-linearity activation function, fc, dropout, gpu加速等）。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/9_2.JPG" alt="AlexNet结构（5Conv+3FC），初版由于GPU显存小所以一半一半丢到两块GPU训练，最后合并"></p><p><strong>VGG</strong>: 引入小卷积核，一方面小卷积核堆叠拥有大卷积核同样的感受野，另一方面还可以减小参数，同时加深网络，提高拟合精度。后续的网络基本吸取了VGG网络中小卷积核（3x3, p=1, s=1）提取特征，mxpool (s=2) downsample 特征图，同时在缩小后的特征图上加倍filter数量保持时间复杂度。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/9_3.JPG" alt="现在以16和19层为主，且只有3x3卷积核，和s=2的maxpool缩小特征图尺寸"></p><p><strong>GoogLeNet</strong>: 受到<a href="https://arxiv.org/pdf/1312.4400.pdf">Network in Network</a>很大启发（一个是跨通道融合的1x1卷积核带来的MLP功能，提高局部特征的抽象表达能力，另一个是Global Average Pooling (GAP)，单独利用特征图分类），同时提升网络的深度和宽度。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/9_4.jpg" alt="GoogLeNet--22层，三个分类器，FC前面利用AP减少参数"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/9_5.JPG" alt="采用inception module进行堆叠，并增加网络宽度，同时采用1x1卷积核降维特征图层数，减少参数并增加非线性"></p><blockquote><p>为了避免梯度消失，网络额外增加了2个辅助的softmax用于向前传导梯度（辅助分类器）。辅助分类器是将中间某一层的输出用作分类，并按一个较小的权重（0.3）加到最终分类结果中，这样相当于做了模型融合，同时给网络增加了反向传播的梯度信号，也提供了额外的正则化，对于整个网络的训练很有裨益。而在实际测试的时候，这两个额外的softmax会被去掉。</p></blockquote><p>之后Google对inception进行改进到v4版本(详见<a href="https://my.oschina.net/u/876354/blog/1637819">blog</a>)，v2, v3主要是改小卷积核，v4是加入了Resnet的残差连接思想，然后将basic block或者bottleneck中的conv组合换成inception module。</p><p>GoogLeNet团队发表的有关GoogLeNet的论文：《Going deeper with convolutions》、《Batch Normalization: Accelerating Deep Network Training by Reducing Internal Covariate Shift》、《Rethinking the Inception Architecture for Computer Vision》、《Inception-v4, Inception-ResNet and the Impact of Residual Connections on Learning》</p><p><strong>ResNet</strong>：加深网络可以获得更好的性能，但是采用常规方法堆叠卷积加深优化困难，实际效果不好。</p><p>恒等映射，深网络中有不少是对浅网络的缝补，深层网络中，如果保留那些浅层网络的性能，同时又考虑采用恒等映射，那么效果应该不会比单独用浅层网络更差。但是直接学习恒等映射不如学习输出与恒等映射的残差有效（redidual模块会明显减小模块中参数的值从而让网络中的参数对反向传导的损失值有更敏感的响应能力，虽然根本上没有解决回传的损失小的问题，但是却让参数减小，相对而言增加了回传损失的效果，也产生了一定的正则化作用），因此引入跳级连接，ResNet诞生（参考<a href="https://blog.csdn.net/weixin_43624538/article/details/85049699?from=timeline&amp;isappinstalled=0">PRIS-SCMonkey</a>，<a href="https://zhuanlan.zhihu.com/p/54289848">Pascal</a>）。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/9_6.JPG" alt="basic block和bottleneck结构应对不同深度的网络，bottleneck结构应该受到GoogLeNet启发进行降维减少参数"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/9_7.JPG" alt="不同深度网络结构参数配置"></p><p>后续的研究者一直在思考为什么ResNet会如此简洁高效，它到底在解决网络学习中的什么问题？1.degradation问题，梯度有效性被跳级连接解决（何恺明在论文中指出梯度消失爆炸问题已经被BN等normalization手段解决得很好了，跳级连接是为了深层的网络参数对梯度更加敏感，保持前面梯度的相关性，因为前向传播的时候将原始的信息带出一部分。当然ResNet也可以在一定程度上缓解梯度弥散的问题，但是这不是最主要的，详见<a href="https://www.zhihu.com/question/64494691">这个知乎回答</a>），且必须是1系数。多个浅层子网络代表的函数的组合函数，并不是真正意义上的深层特征网络。</p><blockquote><p>**神经网络的退化才是难以训练深层网络根本原因所在，而不是梯度消散。**虽然梯度范数大，但是如果网络的可用自由度对这些范数的贡献非常不均衡，**也就是每个层中只有少量的隐藏单元对不同的输入改变它们的激活值，而大部分隐藏单元对不同的输入都是相同的反应，此时整个权重矩阵的秩不高。并且随着网络层数的增加，连乘后使得整个秩变的更低。**这也是我们常说的网络退化问题，虽然是一个很高维的矩阵，但是大部分维度却没有信息，表达能力没有看起来那么强大。<strong>残差连接正是强制打破了网络的对称性。</strong>(来自Orhan A E, Pitkow X. Skip connections eliminate singularities[J]. arXiv preprint arXiv:1701.09175, 2017.)</p><p>来自知乎专栏：<a href="https://zhuanlan.zhihu.com/p/42833949">https://zhuanlan.zhihu.com/p/42833949</a></p></blockquote><p>2.ResNet中恒等变换的意义目前有多种解释，我目前倾向的<a href="https://www.zhihu.com/question/293243905">解释</a>是这种残差结构是为了动态自适应拟合训练数据集网络深度的一种方法，它除了可以平稳甚至加速训练外（跳级连接让不同分辨率的feature组合，梯度的相关性得到了保持，后续的DenseNet则用了更多的不同分辨率的特征组合），就是可以根据你的问题去慢慢补充浅层网络解决的最主要的拟合之外的小边边角角，让最后的函数更加平滑。网络输出的残差<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>部分可能在某个block接近0，可能某个部分比较大，所以是一种自适应复杂度。</p><blockquote><p>ResNet是完成一个微分方程的差分形式，dx(t)/dt=H(t)=&gt;x(t+1)=x(t)+H(t). 所以ResNet就是用微分方程来描述一个动态系统，寻找合适的H(t)来构造系统。采用这个结构的好处是H(t)具有某种自适应特性（相比于普通的CNN），对网络的深度不会过于敏感（自适应差分方程的步长），同时简化网络的结构，让网络结构更加均匀化，从几何角度看就是制造了一个更为平直的流形并在其上进行优化，导致系统的收敛性更好。</p><p>不同的网络结构实际上构造了不同的解空间的流形，并且部分的定义了其上的度量，而不同的度量引出不同的曲率分布，这对系统的收敛性能影响重大。所以不同网络结构的差异表现在：（1）网络结构是否和问题匹配，是否是一个包含了可能解的足够紧致的空间；（2）由网络结构所部分定义的度量是否导致一个比较平直的均匀的流形（度量还被所采用的代价函数所部分定义）。从这两个角度就可以定性和半定量的分析不同网络结构的特性和关系。</p><hr><p>残差模块并不是就是恒等啊，我觉得可以理解为:当网络需要这个模块是恒等时，它比较容易变成恒等。而传统的conv模块是很难通过学习变成恒等的，因为大家学过信号与系统都知道，恒等的话filter的冲激响应要为一个冲激函数，而神经网络本质是学概率分布 局部一层不太容易变成恒等，而resnet加入了这种模块给了神经网络学习恒等映射的能力。</p><p>所以我个人理解resnet除了减弱梯度消失外，我还理解为这是一种自适应深度，也就是网络可以自己调节层数的深浅，不需要太深时，中间恒等映射就多，需要时恒等映射就少。当然了，实际的神经网络并不会有这么强的局部特性，它的训练结果基本是一个整体，并不一定会出现我说的某些block就是恒等的情况</p><p>来自知乎回答：<a href="https://www.zhihu.com/question/293243905">https://www.zhihu.com/question/293243905</a></p></blockquote><p>在论文<a href="https://arxiv.org/abs/1603.09382">Deep Networks with Stochastic Depth</a>中，作者设置概率p让residual block随机失活（均匀概率与线性概率，线性概率更有效些，符合ResNet的设计思想），只保留shortcut，结果精度也没有怎么下降，反而提高了训练速度，这也说明Identity Mapping的正确性。</p><p>对ResNet的改进以及后续其他网络：</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/9_8.jpg" alt="改进downsample部分，减小信息流失"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/9_9.JPG" alt="把激活函数和BN放在residual模块中，称其为full pre-activation，其效果最好。论文来自ResNet原班人马，Identity Mappings in Deep Residual Networks，在该论文中也分析讨论了有关ResNet的其他设置问题"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/9_10.JPG" alt="GoogLeNet引入ResNet结构，Inception-ResNet-v1"></p><p><a href="https://arxiv.org/pdf/1605.07146.pdf">Wide Residual Networks</a>认为ResNet中有些block去掉也没有影响，所以residual是最主要的影响因素，作者尝试加倍block中的卷积核数量，而不是增加深度，结果发现效果更好，而且由于加深宽度可以由并行化计算解决，所以计算也更加快速。另外，作者也使用了卷积层上的dropout，结果也可以得到一些提升（论文指出何恺明他们是在identity part使用dropout效果不好，所以他们用在这，我想可能是因为拓宽了宽度，特征图增多，可能带来冗余信息，存在过拟合信息）。我没有仔细看论文，也没看源代码，不清楚作者是不是随机给特征图某个元素置0来进行的，实际上给卷积层做dropout的操作并不常见，一般都是BN就足够了，有部分研究是针对卷积层上或者特征图上的droput的，而且认为随机置某元素为0并不能起到作用，因为特征图一般是局部关联的，所以提出了区域置0，某个特征图置0等操作，见此知乎<a href="https://www.zhihu.com/question/52426832/answer/926104467">回答</a>。</p><p><a href="http://openaccess.thecvf.com/content_cvpr_2017/papers/Xie_Aggregated_Residual_Transformations_CVPR_2017_paper.pdf">Aggregated Residual Transformations for Deep Neural Networks</a>: ResNeXt，来自ResNet的作者，想法和上面的差不读，在一个block里采用多组重复卷积核操作，拓宽网络。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/9_11.JPG" alt="ResNet和ResNeXt结构差异"></p><p><a href="https://arxiv.org/pdf/1709.01507.pdf">Squeeze-and-Excitation Networks</a> : SENet是在网络的特征通道之间进行建模，显示地通过FC去得到通道之间的依赖关系，然后利用最后的sigmoid激活函数给每个通道附一个新的权重，依照这个重要程度去提升有用的特征抑制用处不大的特征 (feature recalibration)。相关介绍见作者胡杰在机器之心的<a href="https://www.cnblogs.com/bonelee/p/9030092.html">解释</a>。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/9_12.JPG" alt="在inception module和residual module中加入SE Block结构"></p><p><a href="https://arxiv.org/abs/1605.07648">FractalNet: Ultra-Deep Neural Networks without Residuals</a>: 分形（从多个层次、多个角度、多个组成成分来共同解决一个问题）网络结构，类似于ResNet，但是认为深层网络的关键是浅层到深层的有效过度，residual representation不是必须的。分阶段组合不同分辨率特征，达到了类似于教师-学生机制、深度监督的效果。由于比较复杂，所以没有ResNet用的广泛，但是思想很有深度，其中最突出的contribution就是drop path。在下图的示意中，从输入到预测有很多条路可以走通，drop path机制就是随机失活某些路径，假如其中一条承担的作用是比较大，那么一旦被失活，其他网络就得承担全部的责任，加强其学习力度，所以一方面防止过拟合，另一方面让整个网络变得非常鲁棒，不会出现退化问题，参考此<a href="https://blog.csdn.net/wspba/article/details/73251731">博客</a>。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/9_13.JPG" alt="Fractal architecture"></p><p><a href="https://arxiv.org/abs/1608.06993">Densely Connected Convolutional Networks</a>: CVPR2017 Best paper，写的也非常简洁通透。其dense block的设计是ResNet的“完全版”，不仅提高了特征的利用率，减小了参数，也减轻了梯度弥散，每一dense block单独产生的特征图层数也相对较少，也便于训练，具体解读见此<a href="https://blog.csdn.net/u014380165/article/details/75142664">博客</a>。但是一开始的DenseNet虽然参数少，但是由于复杂的的skip connection和concatenate操作，中间量的存在会占用很多显存，作者后续论文<a href="https://arxiv.org/abs/1707.06990">Memory-Efficient Implementation of DenseNets</a>减缓了这个问题，现在PyTorch等框架也应该自动解决了这个问题，在一定程度上。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/9_14.JPG" alt="Dense Block结构，前面每一层都会和后面每一层沟通"></p><p>MobileNet, ShuffleNet等轻量级计算网络，通过引入depthwise separable convolution, pointwise group convolution, channel shuffle (顺序重分配每组的channel到新的组，减少每个组单独流动信息的局限性)等操作改变传统卷积计算方式，来加速计算。详见知乎白裳的<a href="https://zhuanlan.zhihu.com/p/35405071">博客随笔</a>和AI之路的<a href="https://blog.csdn.net/u014380165/article/details/75137111">详解</a>。</p><p>Meta-learning，NAS自动搜索合适架构，开山之作是Google的<a href="https://arxiv.org/abs/1611.01578">Neural Architecture Search with Reinforcement Learning </a>，通过RNN确定架构中每个元素的参数，然后利用reinforcement learning奖励精度高的，惩罚精度差的，以此来学习。NAS领域交叉知识多，暂时无法深入理解。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/9_15.JPG" alt="google最新的EfficientNet"></p><h2 id="assignment-2">Assignment 2</h2><p>宝藏作业，值得认真做。</p><p><a href="http://cs231n.github.io/assignments2019/assignment2/">assignment page</a>;</p><p>reference：</p><ul><li><p><a href="https://github.com/Wangxb06/CS231n">github-code</a>;</p></li><li><p>参考培训机构深度之眼的cs231n-camp的文档</p></li></ul><p>具体过程和结果参见这个<a href="https://github.com/Richardyu114/CS231N-notes-and-assignments">repository</a></p><p>在做CNN那一节时（ubuntu环境，如果是Windows环境可能需要安装python for c++等库），如果在fast_layer.py环节出现<code>CS231n A2: Global name 'col2im_6d_cython' is not defined解决</code>，请关掉jupyter notebook，然后重新编译就可以了。</p><h2 id="lecture-10-recurrent-neural-networks">Lecture 10. Recurrent Neural Networks</h2><p>这一节课主要讲RNN的网络结构（recursive neural network是树结构，recurrent neural network是chain结构），设计文本生成，image caption, visual question之类的网路，后面通过training问题提及了下LSTM。课程的目的在于希望NLP和CV两者结合，相辅相成，解决更为智能化的问题。</p><p>参考阅读材料方面主要是花书《deep learning》中的<a href="http://www.deeplearningbook.org/contents/rnn.html">第十章</a>: Sequence Modeling: Recurrent and Recursive Nets. 其内容不难理解，也都是介绍性文字，大部分细节都是列出论文便于感兴趣读者去进一步阅读。（个人觉得看好Justin Johnson的<a href="http://cs231n.stanford.edu/slides/2019/cs231n_2019_lecture10.pdf">课件</a>就差不多了，主要内容都是RNN结构和LSTM）</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/10_1.JPG" alt="一个典型RNN结构，其中对每个类型变量的权重都是相同的，会重复使用"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/10_4.JPG" alt="多输出一个特征图的权重注意力分配信息"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/10_5.JPG" alt="VQA机制"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/10_6.JPG" alt="根据用户言语指导进行视觉导航"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/10_2.JPG" alt="原生RNN梯度回传会出现弥散或者爆炸现象，难以训练"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/10_3.JPG" alt="long-short-term-memory (LSTM)修正梯度回传问题"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/10_7.JPG" alt="LSTM处理方式示意"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/10_8.JPG" alt="LSTM可以很好缓解梯度问题，但是不能完全避免"></p><p>这里有一篇讲解LSTM的<a href="http://colah.github.io/posts/2015-08-Understanding-LSTMs/">blog</a>（嫌麻烦的可以直接看<a href="https://www.jianshu.com/p/9dc9f41f0b29">中文翻译版本</a>）。</p><p>有关Justin Johnson课上提到的RNN的一些fun application可以在karpathy的这篇<a href="http://karpathy.github.io/2015/05/21/rnn-effectiveness/">blog</a>找到。</p><p>目前，有关机器翻译，文本生成等NLP问题自谷歌的”Attention is all you need“之后，基本上都直接采用self-attention机制了，但这并不代表RNN没有用，已被淘汰了，其在处理依赖时间序列问题还是有很多用武之地的。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/10_9.JPG" alt="自Facebook的DETR检测模型开了transformers和CNN特征结合的先河之后，预测后续会有更多的想法出现"></p><h2 id="lecture-11-gnerative-models">Lecture 11. Gnerative Models</h2><p>这节课没有官方推荐阅读材料，只有<a href="http://cs231n.stanford.edu/slides/2019/cs231n_2019_lecture11.pdf">slides</a>首先介绍监督学习和分监督学习的一些区别（有无外部label带来的监督信号，前者着重利用数据做任务，后者着重学习数据内部的结构和分布等）。</p><p>2020新版增加了CS236的VAE的<a href="https://deepgenerativemodels.github.io/notes/vae/">notes</a>和Ian Goodfellow在NIPS2016上的<a href="https://arxiv.org/pdf/1701.00160.pdf">tutorial</a>.</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/11_1.JPG" alt="supervised v.s. unsupervised learning"></p><p>后面主要讲无监督学习中的一个核心问题density estimation，介绍跟此问题有关的三类generative models：</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/11_2.JPG" alt="PixelRCNN/CNN, VAE, GAN"></p><p>目前在生成式模型方面还未进行研究，所以暂时也没有啥思考，也就单纯把这节课当成一次introduction。课程中有关这三类模型的概念的公式也不搬过来了，直接看课件就好。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/11_3.JPG" alt="三类生成式模型比较"></p><p>后续会好好研究一下GAN，那时会再专门写笔记讨论体会心得，先放几个不错的resources链接：</p><ul><li>review-<a href="https://arxiv.org/abs/2001.06937">A Review on Generative Adversarial Networks: Algorithms, Theory, and Applications</a></li><li>paper list-<a href="https://github.com/hindupuravinash/the-gan-zoo">the-gan-zoo</a></li><li>how-to-train-gan-<a href="https://github.com/soumith/ganhacks">ganhacks</a></li><li>知乎文章-<a href="https://zhuanlan.zhihu.com/p/25071913">令人拍案叫绝的Wasserstein GAN</a></li><li>researcher-<a href="https://people.csail.mit.edu/junyanz/">Jun-Yan-Zhu</a></li><li>Stanford-cs236-<a href="https://deepgenerativemodels.github.io/">deep generative models</a></li><li>UCB-cs294-<a href="https://sites.google.com/view/berkeley-cs294-158-sp19/home">deep unsupervised learning</a></li></ul><hr><p>2020.6更新：</p><p>普通的pixelRNN/CNNs是显示估计数据分布，即：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>p</mi><mi>θ</mi></msub><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>∣</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">p_{\theta}(x)= \prod\limits _{i=1}^{n} p_{\theta}\left(x_{i} \mid x_{1}, \ldots, x_{i-1}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.329066em;vertical-align:-0.9776689999999999em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3513970000000004em;"><span style="top:-2.122331em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0000050000000003em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∏</span></span></span><span style="top:-3.950005em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9776689999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>，虽然效果不错，但是计算很慢，VAE是利用一个中间的隐变量来进行，即：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mo>∫</mo><msub><mi>p</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><msub><mi>p</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo>∣</mo><mi>z</mi><mo stretchy="false">)</mo><mi>d</mi><mi>z</mi></mrow><annotation encoding="application/x-tex">p_{\theta}(x)=\int p_{\theta}(z) p_{\theta}(x \mid z) d z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.11112em;vertical-align:-0.30612em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/11_4.JPG" alt="利用中间变量进行降维，提取主要特征"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/11_5.JPG" alt="训练好的VAE还可以讲decoder去掉进行监督任务训练"></p><p>但是上述的VAE只能重建输入图片，如果想要重建满足输入数据分布下的另一个图片该怎么做？</p><p>我们可以选择<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span>为一个已知的比较简单的先验分布，比如高斯分布，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(x|z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span>是神经网络解码出的分布，但是前面的积分会使得整个过程intractable. 考虑后验概率，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>z</mi><mo>∣</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>p</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo>∣</mo><mi>z</mi><mo stretchy="false">)</mo><msub><mi>p</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><msub><mi>p</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p_{\theta}(z \mid x)=p_{\theta}(x \mid z) p_{\theta}(z) / p_{\theta}(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mord">/</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>，进一步地有：</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/11_6.JPG" alt="丢掉最后一个KL散度，最大化data likelihood"></p><p>现在我们先让encoder去让后验概率去近似我们设定的先验概率<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span>，比如说是标准正态分布，然后让decoder从拟合的后验概率中采样去重建图片。训练时重建输入图片，用以反向传播，测试时可以直接丢掉encoder，利用decoder随机从先验概率分布中采一个数然后decoder出新的图片。非常漂亮的思想！</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/11_7.JPG" alt="VAE的学习过程，两步近似"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/11_8.JPG" alt="测试时可以生成新的图片"></p><p>此外，隐变量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span>也是多维的，每个维度可以带便不同的图像特征，这样的话可以控制我们想要输出的图片内容。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/11_9.JPG" alt="不同维度的z编码了图片的不同因素"></p><p>以上的两种方法都在试图显示建立数据的分布，而GAN试图绕过复杂的数据分布建模，利用博弈的思想隐式建立数据分布，从而直接生成新的图片样本。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/11_10.JPG" alt="GAN将最大最小化改为双最大化，原因是在对生成器进行参数更新的时候，原始是希望最小化判别器对生成器的判断正确的能力，这样的话根据数学公式，导数-1/(1-x)前期变化慢，后期变化快，不利用学习，后来将其改成最大化判别器对生成器判断错误的能力，这样计算出的导数1/x，前期变化快，后期变化慢，符合一般的网络学习规律"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/11_11.JPG" alt="训练CNN结构GAN的建议"></p><h2 id="lecture-12-detection-and-segmentation">Lecture 12. Detection and Segmentation</h2><p>这节课介绍了计算机视觉中比较重要的四个任务：classification, semantic segmentation, object detection, instance segmentation, <a href="http://cs231n.stanford.edu/slides/2019/cs231n_2019_lecture12.pdf">slides</a>做的很不错。</p><p>此外，18版的课程里有个两个相关的discussion section：<a href="http://cs231n.stanford.edu/slides/2018/cs231n_2018_ds06.pdf">Practical Object Detection and Segmentation</a>，列出了经典的检测和分割结构，并给出了相应的代码实现链接和一些其他resources；<a href="http://cs231n.stanford.edu/slides/2018/cs231n_2018_ds08.pdf">Video Understanding</a>.</p><p>1.semantic segmentation主要通过FCN的结构介绍了downsampling–upsampling这种经典结构，重点引出一般的upsampling的方法，比如unpooling (一种是最近邻补值，一种是记下pooling的索引，然后其他补零)和转置卷积（利用权重矩阵乘以每个元素，然后得到大的特征图区域，overlap的地方累加&lt;累加只是一种处理手段，这方面或许可以有更好的办法恢复信息&gt;）</p><p>转置卷积transpose convolution： upsampling的一种 ，unpooling, max unpooling, 为什么叫转置卷积更好点，Justin Johnson在课上也给了数学解释。（<a href="https://www.zhihu.com/question/43609045/answer/132235276">知乎问题</a>）</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/12_1.JPG" alt="转置卷积"></p><p>空洞卷积Dilated Convolution：源自于语义分割领域，目前也大多用于语义分割领域。初衷是为了解决downsample丢失的信息会影响pixel-wise的分类。“dilated的好处是不做pooling损失信息的情况下，加大了感受野，让每个卷积输出都包含较大范围的信息”（<a href="https://www.zhihu.com/question/54149221">知乎问题</a>）</p><p>2.object detection和instance detection是交叉介绍的，因为后者是前者的集成，也顺带提及了human pose estimation，keypoint。这一部分的介绍相比2017版多了一些细节（尤其是RoI pooling&lt;浮点数两次转整型处理，丢失proposal原始像素信息&gt;和RoI Align&lt;保留浮点数，利用双线性插值得到每个max pooling小区域的四个点，对小目标更好&gt;）和scene graph, 3D检测，3D shape prediction等部分（3D Machine Learning应该是目前工业界比较看重的一个领域，在无人驾驶，增强现实等领域可以发挥作用）。其中object detection部分着重介绍了R-CNN系列，更详细的解释可以阅读另一篇<a href="http://densecollections.top/2019/11/30/RCNN-series-in-object-detection/">博客</a>。课程中也推荐一篇综述类型的paper: <a href="https://arxiv.org/abs/1611.10012">Speed/accuracy trade-offs for modern convolutional object detectors</a>便于进一步了解（在我的另一篇R-CNN检测专题<a href="http://densecollections.top/2020/01/10/RCNN-series-in-object-detection-%E7%BB%AD/">博客</a>会有所提及）。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/12_2.JPG" alt="ROI Align利用双线性插值提高ROI映射精度"></p><p>可变形卷积Deformable convolutional networks：受Andrew Zisserman的STN (Spatial Transformer Network) 启发，针对物体的形状自发的选择卷积的区域，而不是按照约定的矩形计算规则，更适合实际。在<a href="https://www.zhihu.com/question/57493889">知乎回答</a>中，有人说可变性卷积是对空洞卷积的一种generalization，增大了感受野 。</p><h2 id="lecture-13-visualizing-and-understanding">Lecture 13. Visualizing and Understanding</h2><p>1.试图理解卷机神经网络是怎么做决策的，这些layers到底学了什么东西。因此引入了特征图可视化，看看网络对图像的那些区域或者blob甚至是pixel反应大些（感受野，遮挡，<strong>回传对pixel的梯度，gradient ascent</strong>等），激活的是哪些地方（这里面的针对像素的梯度上升方法与学习权重等参数的方法是对立统一的，固定神经元参数，给定zero 图像，加一些正则化方法，然后对图像进行优化，看看什么样的图像可以获得更高的类别分数），然后借此产生对抗样本adversarial example试图欺骗网络（17年的最后一课就是请Ian Goodfellow讲这个）。</p><p>2.利用可视化思想通过选定特定的layer对输入图像做gradient，然后更新图像，放大特征，产生<a href="https://github.com/google/deepdream">DeepDream</a>效果；</p><p>3.Neural Texture Synthesis, 利用<em>Gram matrix</em>对小区域图像进行延展；</p><p>4.Neural Style Transfer, 对输入图像进行特定风格的渲染。这项技术现在已经被商业化了，有不少手机APP和其他应用都有此功能！Justin Johnson也有个torch的<a href="https://github.com/jcjohnson/neural-style">实现</a>。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/13_1.JPG" alt="Neural Style Transfer model"></p><p>但是得到一张转换的图片很慢，因为有很多的forward和backword，因此J.J做了个<a href="https://github.com/jcjohnson/fast-neural-style">Fast Style Transfer</a>, 训练另外一个网络来实现style transfer, 其中IN (instance norm)就是为了快速风格转换发明的。课程的<a href="http://cs231n.stanford.edu/slides/2019/cs231n_2019_lecture13.pdf">slides</a>里也提供了很多相关的paper，对细节感兴趣的可以看看。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/13_2.JPG" alt></p><p>有关神经网络可视化，个人觉得是个很有意义也和好玩的一个领域，它在一定程度上解释了模型为什么work，也可以结合一些idea做出可消费的funny application出来。~~Assignment3也有相关的作业，到时候应该可以深入学习理解下。~~从assignment3来看，为了让输入图像的风格靠近目标图像 (style loss)，采用gram矩阵来编码模型各个层产生的通道之间的相关性，然后尽量让两幅图像的gram矩阵（以指定维度方向上的各个向量之间做内积）相近。gram矩阵代表图像特征中哪些特征是同时出现的，哪些是此消彼长，不相干的，而特征呢就相当于图像的某个特性，比如在修图的时候，我们会调调对比度，加些高光，调调饱和度等，为了得到我们想要的风格的图像，其中有些修图选项可以一起做，有些往大的值调，有些就得往小的调，gram矩阵也是类似的操作，缩小目标gram矩阵和输入gram矩阵之间的差异就等于是给图像加滤镜。此外，gram矩阵的对角线上还包含了每个特征图的原始信息，也就是说不仅有哪些特征（哪些修图选项），也有各个特征之间的联系（修图选项的调整值），因此可以大致代表图像的风格。（相关<a href="https://www.zhihu.com/question/49805962?sort=created">知乎问题</a>)</p><p>相关blog: Hungryof的“谈谈图像的style transfer&quot;系列—<a href="https://blog.csdn.net/Hungryof/article/details/53981959">1</a>, <a href="https://blog.csdn.net/Hungryof/article/details/71512406">2</a>, <a href="https://blog.csdn.net/Hungryof/article/details/80310527">3</a></p><h2 id="discussion-learning-on-videos">Discussion–Learning on videos</h2><p>视频理解和3D machine learning 似乎成为现在CV中的两个新的热点。2020年的课程中也没有把视频理解放进前面的CV applications中，估计是考虑到视频理解中用的方法也是从那些分类，检测等基础任务中迁移过来的。从现在工业界短视频作为火热的媒介来看，视频理解的研究预计会出现比较大的需求和增长。</p><p><a href="http://cs231n.stanford.edu/slides/2020/section_8_video.pdf">Discussion Section—learning on videos</a></p><p>其中提到目前主流的三种模型：</p><ul><li><p>CNN + RNN: video understanding as sequence modeling</p></li><li><p>3D Convolution: embed temporal dimension to CNN</p></li><li><p>Two-stream: explicit model of motion (video = apperance + motion)</p></li></ul><h2 id="lecture-14-deep-reinforcement-learning">Lecture 14. Deep Reinforcement Learning</h2><p>对于强化学习的印象只停留在一个框架的系统层面上：输入是状态（state），动作（action）和奖励（reward），输出时方案或者策略（policy），大意就是通过奖惩机制，在某个环境中为对象制定在初始状态实现目标的一系列策略。</p><p>强化学习的热度似乎没有神经网络，GAN等技术大，而且据我身边研究的朋友说，强化学习的学习难度有点高，具体没有细问，可能是模型，critic制作和训练的难度不低。一位bloger在他对强化学习简介的<a href="https://www.cnblogs.com/geniferology/p/what_is_reinforcement_learning.html">blog</a>中说到：</p><blockquote><p>强化学习的领导研究者<a href="http://www.incompleteideas.net/">Richard S. Sutton</a>认为，只有这种学习法才考虑到 <em>自主个体</em>、<em>环境</em>、<em>奖励</em> 等因素，所以它是人工智能中最 top-level 的 architecture，而其他人工智能的子系统，例如 logic 或 pattern recognition，都应该在它的控制之下，我觉得颇合理。</p></blockquote><p>个人认为，目前的强化学习方式确实是一个可以融合许多机器学习技术和模型的一个理论框架，视觉中的注意力机制可以用到，NAS中也可以用到，随着时间推移，可能会有更多的结合和应用会产生，甚至引导未来很多产业的落地。</p><p>一些相关resources:</p><ul><li><p><a href="https://www.zhihu.com/question/49230922/answer/115011594">知乎–强化学习（reinforcement learning)有什么好的开源项目、网站、文章推荐一下</a></p></li><li><p><a href="https://github.com/simoninithomas/Deep_reinforcement_learning_Course">Deep_reinforcement_learning_Course</a></p></li><li><p><a href="https://pathmind.com/wiki/deep-reinforcement-learning">A Beginner’s Guide to Deep Reinforcement Learning</a></p></li><li><p><a href="http://www.incompleteideas.net/book/the-book.html">textbook–Reinforcement Learning: An Introduction</a></p></li></ul><p>Besides，这<a href="http://cs231n.stanford.edu/slides/2019/cs231n_2019_lecture14.pdf">课件</a>做得也挺好的，虽然Serena Yeung小姐姐讲的课让我一知半解，云里雾里的 :(</p><h2 id="assignment-3">Assignment 3</h2><p><a href="https://cs231n.github.io/assignments2019/assignment3/">assignment page</a>;</p><p>reference：</p><ul><li><p><a href="https://github.com/FortiLeiZhang/cs231n/tree/master/code/cs231n/assignment3">github-code</a>;</p></li><li><p>参考培训机构深度之眼的cs231n-camp的文档</p></li></ul><p>具体过程和结果参见这个<a href="https://github.com/Richardyu114/CS231N-notes-and-assignments">repository</a></p><p>COCO_Caption数据集下载速度很能很慢，将链接放至迅雷可能快点，我这边是1～2M/s。</p><p>做<code>RNN_Caption.ipynb</code>时出现类似assignment1的无法导出<code>imread,imresize</code>问题，原因就是<code>scipy</code>包现在不支持这个函数了，直接将<code>scipy</code>从1.4退回到1.2.0即可。</p><p>在执行<code>Look at the data</code>部分时出现<code>[WinError 10054] 远程主机强迫关闭了一个现有的连接</code>错误，按照<a href="http://188.131.244.232/article/10">此博客</a>的解释，可能是链接存在一些无法访问的情况，将“http&quot;改成”https&quot;即可，<code>url = url.replace(http://&quot;, 'https://')</code></p><p>改完之后可以顺利访问，但是出现<code>进程被占用</code>情况，解决方法同上面博客，修改<code>image_utils.py</code>中的<code>image_from_url</code>函数：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def image_from_url(url):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    Read an image from a URL. Returns a numpy array with the pixel data.</span><br><span class="line">    We write the image to a temporary file then read it back. Kinda gross.</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    try:</span><br><span class="line">        f = urllib.request.urlopen(url)</span><br><span class="line">        #_, fname = tempfile.mkstemp()</span><br><span class="line">        # 为了解决“另一个程序正在使用此文件，进程无法访问的错误&quot;</span><br><span class="line">        fd, fname = tempfile.mkstemp(dir=&quot;G:\CS231N&quot;)</span><br><span class="line">        with open(fname, &#x27;wb&#x27;) as ff:</span><br><span class="line">            ff.write(f.read())</span><br><span class="line">        img = imread(fname)</span><br><span class="line">        # 在删除临时文件前关闭该文件，防止被占用</span><br><span class="line">        os.close(fd)</span><br><span class="line">        os.remove(fname)</span><br><span class="line">        return img</span><br><span class="line">    except urllib.error.URLError as e:</span><br><span class="line">        print(&#x27;URL Error: &#x27;, e.reason, url)</span><br><span class="line">    except urllib.error.HTTPError as e:</span><br><span class="line">        print(&#x27;HTTP Error: &#x27;, e.code, url)</span><br></pre></td></tr></table></figure><p>在<code>NetworkVisualization-Pytorch.ipynb</code>的<code>load some ImageNet images</code>中，运行报错<code>Object arrays cannot be loaded when allow_pickle=False</code>，通过<a href="https://blog.csdn.net/weixin_42096901/article/details/89855804">这篇博客</a>发现是自己<code>numpy</code>版本过高问题，将其回退到1.16.1或1.16.2即可解决</p><p>在使用pytorch时，要注意对<code>requires_grad=True</code>的Tensor和求梯度阶段需要用到的Tensor都不能用inplace operation，也就是不能直接对这些张量进行数值操作，最好加上.detach()曲线救国，见<a href="https://zhuanlan.zhihu.com/p/38475183">此</a>。</p><p>在<code>Generative_Adversarial_Networks_PyTorch.ipynb</code>中下载MNIST可能很慢，可以直接找到数据网址自己下载好数据集，然后放到代码自动创建的存放数据的文件夹中的<code>raw</code>中，再次运行就可以不用在线下载，而是直接读取在process了。还有一种办法是改变源代码的中的urls到本地，详情可见<a href="https://blog.csdn.net/york1996/article/details/81780065">here</a>.</p><h2 id="2017-invited-talk-efficient-methods-and-hardware-for-deep-learning-song-han">2017 Invited Talk-Efficient Methods and Hardware for Deep Learning, Song Han</h2><p>CS231N每年都会邀请不同的专家来做一些专题介绍，由于2017年以后都没release视频了，所以就直接看17年的talk了，正好17年的这两个topic都比较不错，在应用上都很重要，因此也很值得学习下。</p><ul><li><p><a href="http://cs231n.stanford.edu/slides/2017/cs231n_2017_lecture15.pdf">课件</a></p></li><li><p><a href="https://songhan.mit.edu/">Song Han</a></p></li><li><p>17年的旷视也有一节课专门讲神经网络压缩，<a href="https://www.bilibili.com/video/BV1E7411t7ay?p=9">链接</a></p></li></ul><p>韩松在该领域算是比较有名的一位，他在此节课从算法讲到硬件（分inference和training两部分），非常系统。虽然大多是overview，但是包含的内容很多，后续研究压缩领域也会从他主页中列举的资料来入门和学习。</p><p>韩松教授2017年的phd thesis: [EFFICIENT METHODS AND HARDWARE FOR DEEP LEARNING]([<a href="https://stacks.stanford.edu/file/druid:qf934gh3708/EFFICIENT%20METHODS%20AND%20HARDWARE%20FOR%20DEEP%20LEARNING-augmented.pdf">https://stacks.stanford.edu/file/druid:qf934gh3708/EFFICIENT METHODS AND HARDWARE FOR DEEP LEARNING-augmented.pdf</a>](<a href="https://stacks.stanford.edu/file/druid:qf934gh3708/EFFICIENT">https://stacks.stanford.edu/file/druid:qf934gh3708/EFFICIENT</a> METHODS AND HARDWARE FOR DEEP LEARNING-augmented.pdf))</p><p><a href="https://songhan.github.io/DSD/">DSD (Dense-Sparse-Dense Training) Model Zoo</a></p><h2 id="2017-invited-talk-adversarial-examples-and-adversarial-training-ian-goodfellow">2017 Invited Talk-Adversarial Examples and Adversarial Training, Ian Goodfellow</h2><p><a href="http://cs231n.stanford.edu/slides/2017/cs231n_2017_lecture16.pdf">课件</a></p><p>Ian Goodfellow的语速很慢，然而我整节课却没怎么听懂他在讲什么。</p><ul><li><p>知乎文章<a href="https://zhuanlan.zhihu.com/p/42667844">对抗样本Adversarial Examples</a></p></li><li><p>知乎问题<a href="https://www.zhihu.com/question/49129585">如何看待机器视觉的“对抗样本”问题，其原理是什么？</a></p></li></ul><h2 id="lecture-17-human-centered-ai">Lecture 17. Human-Centered AI</h2><p>李飞飞最后的总结性课程，描绘AI对社会和人类的影响和蓝图，提出HAI的概念。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/17_1.JPG" alt="HAI"></p><h2 id="lecture-18-scene-graphs">Lecture 18. Scene Graphs</h2><p>2020版新增了Scene Graphs and Graph Convolutions，<a href="http://cs231n.stanford.edu/slides/2020/lecture_18.pdf">slides</a>.</p><p>这一部分应该是让计算机去更好的理解图片。分类，检测都是认识图片的一种手段，不是目的。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/18_1.JPG" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/18_2.JPG" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/18_3.JPG" alt></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;about&quot;&gt;About&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://cs231n.stanford.edu/&quot;&gt;homepage&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.bilibili.com/video/av13260183?from=search&amp;amp;seid=2308745029556209710&quot;&gt;2017 lecture video&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/21930884&quot;&gt;中文笔记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;课程相关时间安排，课件，参考资料，作业详见homepage链接，以最新版为主；&lt;/li&gt;
&lt;li&gt;官方的assignments和notes做得非常好，强烈推荐学习和反复观看；&lt;/li&gt;
&lt;li&gt;时间原因，学习19版的时候恰好2020版春季课程将要开始，这一版换了team，里面加了不少新的research介绍，尤其是非监督，自监督之类的，因此会加入一下2020版的内容；&lt;/li&gt;
&lt;li&gt;个人比较喜欢Justin Johnson的讲课风格和深度，因此配合他在UMICH (University of Michigan) 的 &lt;a href=&quot;https://web.eecs.umich.edu/~justincj/teaching/eecs498/&quot;&gt;EECS498: Deep Learning for Computer Vision&lt;/a&gt;课一起看，可以相互补充（和CS231N有很大重叠， 但也些不同）；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/notesofCS231N/summary.JPG&quot; alt=&quot;提前把最后一节课的总结放出来。整个课程将按照这个fundamentals-CNN-applications来讲&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;lecture1-introduction&quot;&gt;Lecture1. Introduction&lt;/h2&gt;
&lt;p&gt;Related courses in Stanford:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;CS131: Computer Vision: Foundations and Applications&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CS231a: Computer Vision, from 3D Reconstruction to Recognition&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CS 224n: Natural Language Processing with Deep Learning&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CS 230: Deep Learning&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CS231n: Convolutional Neural Networks for Visual Recognition&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Andrew Ng的CS229虽然不在列表中，但个人觉得也值得一看，毕竟也属于经典ML课程。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A  Brief history of Computer Vision and CS 231n:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从史前生物产生视觉开始，到后面的人类对于视觉的研究：相机，生物学研究，以及陆续地对于计算机视觉/机器视觉的系统研究，在社会各个领域结合产生的特定任务的建模设计等工作，这里再一次提到了David Marr的《vision》一书对整个计算机视觉领域的奠基于推动作用。&lt;/li&gt;
&lt;li&gt;介绍卷积神经网络CNN对计算视觉的推动作用，简介了CNN的历史以及在各个视觉有关问题上的强大作用。&lt;/li&gt;
&lt;li&gt;推荐课本教材：《Deep Learning》 by Goodfellow, Bengio, and Courville.&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="课程记录" scheme="http://densecollections.top/categories/%E8%AF%BE%E7%A8%8B%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="computer vision" scheme="http://densecollections.top/tags/computer-vision/"/>
    
    <category term="public course" scheme="http://densecollections.top/tags/public-course/"/>
    
    <category term="deep learning" scheme="http://densecollections.top/tags/deep-learning/"/>
    
    <category term="Standford" scheme="http://densecollections.top/tags/Standford/"/>
    
  </entry>
  
  <entry>
    <title>旷视2017年深度学习实践课程</title>
    <link href="http://densecollections.top/posts/megviidlcourse/"/>
    <id>http://densecollections.top/posts/megviidlcourse/</id>
    <published>2020-02-25T03:57:44.000Z</published>
    <updated>2022-09-09T03:27:30.047Z</updated>
    
    <content type="html"><![CDATA[<h2 id="about">About</h2><ul><li><a href="https://www.bilibili.com/video/av88056282/">视频</a>;</li><li>课件关注“旷视研究院”公众号回复“深度学习实践PPT”可获取;</li><li>这套课程虽然是2017年的，但是涉及的内容还是很全面的，很多工作现在都发挥着不小的作用，所以并不过时，仍然值得一看。建议观看者是有过一定基础的人，刚入门者最好一开始不要看此系列课程，个人觉得第五课神经网络压缩，第六课基于DL的目标检测，第十课GAN，第十一课Person Re-Identification讲得比较好。</li></ul><span id="more"></span><h2 id="1-introduction">1. Introduction</h2><ul><li>computer vision 在AI中的地位属于感知（perception）智能（还包括speech），另外一块是认知（cognitive），包括NLP和AGI（通用人工智能）；</li><li>人使用眼睛和大脑认识世界，电脑使用图像传感器和算力来视觉感知周围环境；</li><li>大脑皮层的出现，灵活，结构化，计算处理；</li><li>CV和AI的关系：其中非常重要的一个task/不同的研究工作和成果/作为关键应用；</li><li>现阶段的CV任务：classification (image)/ detection (region) /segmentation (pixel，实例，语义，全景)/ sequence (video，spatial+temporal)；</li><li>David Marr 的《vision》一书，这在visual SLAM中也十分重要，视觉知识的表示，part representation (拆成块，用各种模型表示，举例关键点检测);</li><li>part representation存在局限，有些不可分，引发了神经网络第二次复兴，Yann Lecun 的卷积神经网络应用于手写字体识别和人脸检测。由于当时难以复现，且懂的人不多，加上小规模数据和SVM等模型流行，神经网络出现衰落；</li><li>learning-based representation/ feature-based representation，特征工程+分类器（handcraft features engineering+SVM/Random Forest），浅层学习pipeline a short sequence；</li><li>端到端学习，所有参数联合优化 ，a long or very long sequence实现高维非线性映射；</li><li>受感知机启发的多层感知机（multilayer perceptron，MLP），利用backpropagation (BP) 梯度训练逼近（局部最优解）任意非线性函数；</li><li>90年代的神经网络成果：CNN/ autocoder/ boltzmann machine/ belief nets/ RNN；</li><li>复兴：data+computing+industry competition+a few breakthrough；</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/megviidlcourse/a_brief_history.JPG" alt="深度学习沉浮历史"></p><ul><li><p>Resnet的思想：由浅到深学习，保持梯度数值较大，防止梯度消失 ；</p></li><li><p>从以前的手工设计feature为重点到现在设计网络结构（2012-2017为止）为重点，不同的结构所需算力不同，现在轻量级网络是一个热点；</p></li><li><p>卷积核的方式：1x1，3x3，<a href="https://blog.csdn.net/tintinetmilou/article/details/81607721">depthwise 3x3</a>等，网络layer连接的方式；</p></li></ul><h2 id="2-math-in-dl-and-ml-basics">2. Math in DL and ML Basics</h2><ul><li><p>深度学习的内涵：deep learning) representation learning) machine learning) AI;</p></li><li><p>Linear Algebra：</p><ul><li><p>向量，矩阵，集合，群，封闭性，矩阵乘法是为了表示一种变换关系，向量映射到另一个向量；</p></li><li><p>方阵，正交矩阵，特征值，特征向量，实对称矩阵，二次型，正定矩阵，半正定矩阵，奇异值分解；</p></li></ul></li><li><p>Probability：</p><ul><li><p>随机事件，随机变量，概率密度函数，联合分布，边缘分布，条件分布，独立变量；</p></li><li><p>贝叶斯法则，先验分布，后验分布，期望，方差，协方差矩阵（半正定）；</p></li><li><p>常见分布：二值分布，二项分布，多值/多相分布（图像分类问题），正态分布（高斯分布）；</p></li><li><p>信息熵（分类中的交叉熵损失函数，发生概率越大的事情信息越不值钱），交叉熵和KL-divergence，生成式模型中的wassertein distance；</p></li></ul></li><li><p>Optimize：</p><ul><li>minimization（最小化）-- 梯度下降gradient descent（步长的选取很关键），stochastic gradient descent;</li></ul></li><li><p>机器学习基本知识（machine learning basics）-- 定义，假设，模型，评估，supervised &amp; unsupervised learning (learning <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mspace width="1em"><mi>o</mi><mi>r</mi><mspace width="1em"><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mspace></mspace></mrow><annotation encoding="application/x-tex">p(y | x) \quad or \quad p(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>，判别式模型，生成式模型&lt;目前都用判别式模型&gt;, learning <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>，auto encoder，GAN)，“no free lunch theorem&quot;（all learning algorithms are equal, but some algorithm are more equal than others），overfitting &amp; underfitting，model capacity vs. generalization error，regularization (正则项，数据增强，parameter reduce and tying);</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/megviidlcourse/supervised&amp;unsupervisedlearning.JPG" alt></p><h2 id="3-neural-networks-basics-architecture-design">3. Neural Networks Basics &amp; Architecture Design</h2><ul><li><p>Fundamental task in CV: classification, object detection, semantic segmentation, instance segmentation, keypoint detection, human pose estimation, VQA…</p></li><li><p>计算机识别图像的难点：图像内容的复杂性和多样性，比如姿势，光照，模糊等；</p></li><li><p>特征是计算机认识图像的一个灯塔，且应当使用非线性特征抽取器；</p></li><li><p>线性组合特征（kernel learning，boosting），缺点是需要大量的templates，对特征的利用性差；</p></li><li><p>特征层级组合，重复利用特征，更为高效 —&gt; concepts reuse in DL，网络层级的特征也是由低到高，但是这样高度非线性的函数难以优化（目前采用收敛到局部最优值）；</p></li><li><p>key ideas of DL: nolinear system, learn it from data, feature hierarchies, end-to-end learning；</p></li><li><p>激活函数，神经元，全连接网络，训练决定网络参数（前向，反向，更新）；</p></li><li><p>针对图像的认识从locally-connected net到convolutional net的设计，参数共享；</p></li><li><p>卷积层的卷积操作，pooling layer等；</p></li><li><p>网络结构设计：网络拓扑结构，layer function，超参，优化算法等经验性的东西，手动/autoML；</p></li><li><p>简介AlexNet（包含LRN，加速收敛），VGG（发掘3x3小卷积核的显著作用，但并不代表最高效的做法），GoogleNet，ResNet（拟合残差而不是直接拟合原函数），Xception，ResNeXt (借鉴Xception在resnet基础改进)，ShuffleNet，DesneNet，SqueezeNet；</p></li><li><p>structure design: deeper and wider, ease of optimization, multi-path design, resdiual path, sparse connection；</p></li><li><p>简介部分layer design：SPP，batch normalization，parametric rectifiers，bilinear CNNs（做细粒度分类）；</p></li><li><p>针对特定任务的结构设计：Deepface (人脸识别)，Global Convolutional Networks (语义分割)，Hourglass Networks (沙漏结构，大的感受野，用于pose estimation或者关键点)；</p></li></ul><h2 id="4-introduction-to-computation-technologies-in-deep-learning">4. Introduction to Computation Technologies in Deep Learning</h2><p>该节课偏底层，听的不是很懂，权当了解。</p><ul><li><p>symbolic computation：</p><ul><li><p>深度学习框架overview–program, compilation, runtime mangement, kernels, hardware；</p></li><li><p>computing graph, graph structure–variable, operator, edge；</p></li><li><p>静态图和动态图；</p></li><li><p>执行和优化；</p></li></ul></li><li><p>dense numerical computation:</p><ul><li><p>CPU computation (机器码，流水线，超流水线，超标量，乱序执行/cache hierarchy/…)；</p></li><li><p>other computation devices (NVIDIA GPU&lt;单指令，多线程架构&gt;，Google TPU，Huawei NPU in Kirin 970，Mobile CPU+GPU+DSP)；</p></li><li><p>computation &amp; memory gap；</p></li></ul></li><li><p>distributed computation:</p><ul><li><p>system (communication，Remote Direct Memory Access);</p></li><li><p>optimization algorithm (synchronous SGD，asynchronous SGD)；</p></li><li><p>communication algorithm (MPI Primitives，An AllReduce Algorithm)；</p></li></ul></li></ul><h2 id="5-neural-network-approximation-low-rank-sparsity-and-quantization">5. Neural Network Approximation(low rank, sparsity, and quantization)</h2><p>该节课着重神经网络压缩，for faster training，faster inference， smaller capacity;</p><p>convolution as matrix product，利用近似权重矩阵达到网络压缩的目的;</p><p>Low Rank (本质是对矩阵进行一系列分解变换近似操作，减小计算量和存储量):</p><ul><li><p>对权重矩阵进行奇异值分解，singular value decomposition；</p></li><li><p>SVD+Kronecker Product ----&gt; KSPD；</p></li><li><p>矩阵分解：C-HW-K====》C-HW-R-(1X1)-K，然后通过reshape进行重新分解，目前horizontal-vertical decomposition最好；</p></li><li><p>shared group convolution is a kronrcker layer；</p></li><li><p>CP-decomposition与depthwise；</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/megviidlcourse/CNN_decomposition.JPG" alt></p><p>Sparse Approximation:</p><ul><li><p>权重分布有点类似高斯分布 ，0附近很多，微调网络，weight pruning: 韩松博士的deepcompression，让为0的权重逐渐增多（掩模矩阵使权重为0），不让0附近的权重在训练时抖动，FC层效果压缩明显；</p></li><li><p>网络加速计算–稀疏矩阵计算，channel purning，sparse communication for distributed gradient descent；</p></li></ul><p>Quantization：</p><ul><li><p>用什么精度算；</p></li><li><p>参数的量化，激活的量化，梯度的量化；</p></li><li><p>二值化，binary network；</p></li><li><p>大容量模型利用小bit训练时掉点不明显，小容量模型视情况而定；</p></li></ul><p>主讲人<a href="http://zsc.github.io/">周舒畅</a>推荐的几篇文章，其中XNOR-Net为课程阅读要求材料：</p><blockquote><p>Bit Neural Network<br>● Matthieu Courbariaux et al. BinaryConnect: Training Deep Neural Networks with binary<br>weights during propagations. <a href="http://arxiv.org/abs/1511.00363">http://arxiv.org/abs/1511.00363</a>.<br>● Itay Hubara et al. Binarized Neural Networks <a href="https://arxiv.org/abs/1602.02505v3">https://arxiv.org/abs/1602.02505v3</a>.<br>● Matthieu Courbariaux et al. Binarized Neural Networks: Training Neural Networks with<br>Weights and Activations Constrained to +1 or -1. <a href="http://arxiv.org/pdf/1602.02830v3.pdf">http://arxiv.org/pdf/1602.02830v3.pdf</a>.<br>● Rastegari et al. XNOR-Net: ImageNet Classification Using Binary Convolutional Neural<br>Networks <a href="http://arxiv.org/pdf/1603.05279v1.pdf">http://arxiv.org/pdf/1603.05279v1.pdf</a>.<br>● Zhou et al. DoReFa-Net: Training Low Bitwidth Convolutional Neural Networks with<br>Low Bitwidth Gradients <a href="https://arxiv.org/abs/1606.06160">https://arxiv.org/abs/1606.06160</a>.<br>● Hubara et al. Quantized Neural Networks: Training Neural Networks with Low Precision<br>Weights and Activations <a href="https://arxiv.org/abs/1609.07061">https://arxiv.org/abs/1609.07061</a>.</p></blockquote><h2 id="6-modern-object-detection">6. Modern Object Detection</h2><p><a href="https://zhuanlan.zhihu.com/p/62372897">anchor-free与anchor-based的交替轮回</a>;</p><p>Representation:</p><ul><li><p>Bounding-box: face detection, human detection, vehicle detection, text detection, general object detection;</p></li><li><p>Point: semantic segmentation (下一节课);</p></li><li><p>Keypoint: face landmark, human keypoint;</p></li></ul><p>Evaluation Criteria：</p><ul><li>precision (预测为真的里面真正是真的比例), recall (所有是真的里面预测为真的比例), Average Prcision (AP), mean AP (mAP)，IoU, mmAP(coco);</li></ul><p>Perform a detection:</p><ul><li><p>之前是手工特征+图像金字塔+滑动窗口+分类器（robust real-time detection; IJCV 2001）；</p></li><li><p>通过Fully Convolutional Network进行计算共享;</p></li></ul><p>Deep Learning for Object Detetcion:</p><ul><li><p>proposal and refine;</p></li><li><p>one stage:</p><ul><li><p>example: Densebox, YOLO, SSD, Retina Net…</p></li><li><p>keyword: anchor, divide and conquer, loss sampling;</p></li></ul></li><li><p>two stage:</p><ul><li>example: Faster R-CNN, RFCN, FPN, Mask R-CNN;</li></ul></li><li><p>keyword: speed, performance;</p></li></ul><p>One Stage:</p><p><strong>Densebox:</strong></p><ul><li><p>流程：图–&gt;图像金字塔–&gt;卷积神经网络–&gt;upsampling–&gt;卷积神经网络–&gt;（4+1）通道–&gt;预测+threshold+NMS；</p></li><li><p>输入：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>×</mo><mi>n</mi><mo>×</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">m \times n \times 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>，输出：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi mathvariant="normal">/</mi><mn>4</mn><mo>×</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>4</mn><mo>×</mo><mn>5</mn></mrow><annotation encoding="application/x-tex">m/4 \times n/4 \times 5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord">/</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mord">/</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span></span></span></span>；</p></li><li><p>输出的feature map每个像素对应一个带分数的边框：</p></li></ul><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mi>i</mi></msub><mo>=</mo><mrow><mo fence="true">{</mo><msub><mi>s</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>d</mi><msup><mi>x</mi><mi>t</mi></msup><mo>=</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mi>t</mi></msub><mo separator="true">,</mo><mi>d</mi><msup><mi>y</mi><mi>t</mi></msup><mo>=</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mi>y</mi><mi>t</mi></msub><mo separator="true">,</mo><mi>d</mi><msup><mi>x</mi><mi>b</mi></msup><mo>=</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mi>b</mi></msub><mo separator="true">,</mo><mi>d</mi><msup><mi>y</mi><mi>b</mi></msup><mo>=</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mi>y</mi><mi>b</mi></msub><mo separator="true">,</mo><mo fence="true">}</mo></mrow></mrow><annotation encoding="application/x-tex">t_{i}=\left\{s_{i}, d x^{t}=x_{i}-x_{t}, d y^{t}=y_{i}-y_{t}, d x^{b}=x_{i}-x_{b}, d y^{b}=y_{i}-y_{b},\right\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">{</span></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">}</span></span></span></span></span></span></p><p>其中t和b分别代表左上角和右下角坐标；</p><ul><li>问题：回归的L2损失函数选的不好（不同程度scale的object学习程度不同），GT assignment也存在问题，object比较拥挤的情况下，多个物体可能缩小在最后特征图上的一个点上，FP比较多，回归变量选取问题，误差较大；</li></ul><p>UnitBox：</p><ul><li>把L2 loss换成IoU loss = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mi>ln</mi><mo>⁡</mo><mi>I</mi><mi>o</mi><mi>U</mi></mrow><annotation encoding="application/x-tex">-\ln IoU</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span>;</li></ul><p>YOLO：</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>7</mn><mo>×</mo><mn>7</mn></mrow><annotation encoding="application/x-tex">7 \times 7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span></span></span></span>的grid，加了fc层可以覆盖到一些更全局的context，但是受限于固定输入尺寸，运行速度虽快但是拥挤场景检测不是很work；</li></ul><p><strong>SSD</strong>：</p><ul><li><p>引入不同scale和aspect ratio的anchor；</p></li><li><p>回归GT与anchor的offset；</p></li><li><p>不同layer检测不同尺寸的物体，小物体浅层出，大物体深层出（但是并没有直接证据证明此法可靠）；</p></li><li><p>loss sampling和OHEM；</p></li><li><p><a href="https://blog.csdn.net/qq_30815237/article/details/90292639">blog</a>；</p></li></ul><p>DSSD:</p><ul><li><p>SSD利用浅层检测小目标，但是浅层语义信息少；</p></li><li><p>利用upsampling和融合加强语义信息；</p></li></ul><p>RON:</p><ul><li><p>reverse connect (similar to FPN)；</p></li><li><p>loss sampling: objectness prior (先做二分类在再细分)；</p></li></ul><p>RetainaNet:</p><ul><li><p>引入Focal loss；</p></li><li><p>FPN结构；</p></li></ul><p>One Stage Detector: Summary</p><ul><li><p>Anchor：</p><ul><li><p>No anchor: YOLO, densebox/unitbox/east；</p></li><li><p>Anchor: YOLOv2, SSD, DSSD, RON, RetinaNet；</p></li></ul></li><li><p>Divide and conquer：</p><ul><li>SSD, DSSD, RON, RetinaNet；</li></ul></li><li><p>loss sample：</p><ul><li>all sample: densebox；</li><li>OHEM: SSD；</li><li>focal loss: RetinaNet；</li></ul></li></ul><p>Two Stage:</p><p>RCNN:</p><ul><li>selective search+分类proposal；</li></ul><p>Fast RCNN:</p><ul><li>selective search对应到特征图，通过RoI pooling去分类；</li></ul><p>Faster RCNN:</p><ul><li>用预设的anchor去找proposal；</li></ul><p>RFCN，Deformable Convolutional Networks，FPN，Mask RCNN…</p><p>Two Stages Detector-Summary:</p><ul><li>Speed：<ul><li>RCNN -&gt; Fast RCNN -&gt; Faster RCNN -&gt; RFCN；</li></ul></li><li>Performance：<ul><li>Divide and conquer：<ul><li>FPN；</li></ul></li><li>Deformable Pool/ROIAlign；</li><li>Deformable Conv；</li><li>Multi-task learning；</li></ul></li></ul><p>Open Problem in Detection：</p><ul><li>FP；</li><li>NMS (detection in crowd)；</li><li>GT assignment issue；</li><li>Detection in video：<ul><li>detect &amp; track in a network；</li></ul></li></ul><p>Human Keypoint Task:</p><ul><li><p>Single Person Skeleton：</p><ul><li><p>CPM；</p></li><li><p>Hourglass；</p></li></ul></li><li><p>Multiple-Person Skeleton：</p><ul><li><p>top down:</p><ul><li><p>detect-&gt;single person skeleton；</p></li><li><p>Depends on the detector：</p><ul><li><p>Fail in the crowd case；</p></li><li><p>Fail with partial observation；</p></li><li><p>can detect the small-scale human；</p></li></ul></li><li><p>More computation；</p></li><li><p>Better localization when the input-size of single person skeleton is large；</p></li></ul></li><li><p>bottom up:</p><ul><li>Deep/Deeper cut, OpenPose, Associative Embedding；</li><li>Fast computational speed；</li><li>good at localizing the human with partial observation；</li><li>Hard to assemble human；</li></ul></li></ul></li></ul><h2 id="7-scene-text-detection-and-recognition">7. Scene Text Detection and Recognition</h2><p>Background:</p><ul><li><p>文字的重要性：文明标志，携带高层语义信息，作为visual recognition的线索；</p></li><li><p>problem: scene text detection+scene text recognition；</p></li><li><p>challenge: 比OCR更复杂，比如背景，颜色，字体，方向，文字混杂等；</p></li><li><p>application: card recognition，图片定位，产品搜索，自动驾驶，工业自动化等；</p></li></ul><p>conventional methods：</p><ul><li><p>detection before deep learning: MSER (maximally stable extremal regions)，SWT (stroke width transform)，Multi-Oriented；</p></li><li><p>recognition: Top-down and bottom-up cues（滑窗+统计特性），Tree-structured Model (DPM+CRF)，Label embedding (另辟蹊)；</p></li><li><p>统一检测和识别：Lexicon Driven；</p></li></ul><p>Deep learning methods：</p><p>包含传统辅助方法的：</p><ul><li><p>end-to-end-recognition: PhotoOCR，Deep Features，Reading Text；</p></li><li><p>detection: MSER Trees；</p></li></ul><p>不包含传统辅助方法的：</p><ul><li>detection: Holistic (当作语义分割来做)，<a href="https://github.com/argman/EAST">EAST</a> (旷视CVPR2017，多任务学习)，Deep Direct Regression (与EAST相似)，SegLink (多尺度特征图)，Synthetic Data (在图片上产生文字)；</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/megviidlcourse/EAST.JPG" alt="EAST框架"></p><ul><li><p>recognition：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>R</mi><mn>2</mn></msup><mi>A</mi><mi>M</mi></mrow><annotation encoding="application/x-tex">R^2AM</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span> (递归循环神经网络+soft-attention)，Visual Attention；</p></li><li><p>end-to-end recognition：<a href="https://github.com/MichalBusta/DeepTextSpotter">Deep TextSpotter</a>；</p></li><li><p>summary: ideas from object detection and segmentation，end-to-end，use synthetic data；</p></li></ul><p>datasets and competitions：</p><ul><li>dataset: ICDAR 2103, MARA-TD500, ICDAR 2015, IIIT 5K-Word, COCO-Text, MLT, Total-Text；</li></ul><p>conclusion:</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/megviidlcourse/7_conclusion.JPG" alt></p><p>challenges:</p><ul><li>Diversity of text: language, font, scale, orientation, arrangement, etc；</li><li>Complexity of background: virtually indistinguishable elements (signs, fences, bricks and grasses, etc.)；</li><li>Interferences: noise, blur, distortion, low resolution, nonuniform illumination, partial occlusion, etc；</li></ul><p>Trends:</p><ul><li>Stronger models (accuracy, efficiency, <strong>interpretability</strong>)；</li><li>Data synthesis；</li><li>Muiti-oriented text；</li><li>Curved text；</li><li>Muiti-language text；</li></ul><p>References:</p><ul><li><p>Survey:</p><ul><li>Ye et al… Text Detection and Recognition in Imagery: A Survey. TPAMI, 2015.</li><li>Zhu et al… Scene Text Detection and Recognition: Recent Advances and Future Trends. FCS, 2015.</li></ul></li><li><p>Conventional Methods:</p><ul><li>Epshtein et al… Detecting Text in Natural Scenes with Stroke Width Transform. CVPR, 2010.</li><li>Neumann et al… A method for text localization and recognition in real-world images. ACCV, 2010.</li><li>Yao et al… Detecting Texts of Arbitrary Orientations in Natural Images. CVPR, 2012.</li><li>Wang et al… End-to-End Scene Text Recognition. ICCV, 2011.</li><li>Mishra et al… Scene Text Recognition using Higher Order Language Priors. BMVC, 2012.</li><li>Busta et al… FASText: Efficient Unconstrained Scene Text Detector. ICCV 2015.</li></ul></li><li><p>Deep Learning Methods:</p><ul><li>Bissacco et al… PhotoOCR: Reading Text in Uncontrolled Conditions. ICCV, 2013.</li><li>Jaderberg et al… Deep Features for Text Spotting. ECCV, 2014.</li><li>Gupta et al… Synthetic Data for Text Localisation in Natural Images. CVPR, 2016.</li><li>Zhou et al… EAST: An Efficient and Accurate Scene Text Detector. CVPR, 2017.</li><li>Busta et al… Deep TextSpotter: An End-To-End Trainable Scene Text Localization and Recognition Framework. ICCV, 2017.</li><li>Ghosh et al… Visual attention models for scene text recognition. 2017. arXiv:1706.01487.</li><li>Cheng et al… Focusing Attention: Towards Accurate Text Recognition in Natural Images. ICCV, 2017.</li></ul></li></ul><p>Useful Resources:</p><ul><li>Laboratories and Papers<br><a href="https://github.com/chongyangtao/Awesome-Scene-Text-Recognition">https://github.com/chongyangtao/Awesome-Scene-Text-Recognition</a></li><li>Datasets and Codes<br><a href="https://github.com/seungwooYoo/Curated-scene-text-recognition-analysis">https://github.com/seungwooYoo/Curated-scene-text-recognition-analysis</a></li><li>Projects and Products<br><a href="https://github.com/wanghaisheng/awesome-ocr">https://github.com/wanghaisheng/awesome-ocr</a></li></ul><h2 id="8-image-segmentation">8. Image Segmentation</h2><p>semantic segmentaion, instace segmentation, scene parsing,  human parsing, stuff segmentation, UlrtraSound segmentation, selfie segmentation…</p><p>评价指标：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">Accuracy</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi mathvariant="bold">y</mi><mo separator="true">,</mo><mover accent="true"><mi mathvariant="bold">y</mi><mo>^</mo></mover><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msubsup><mfrac><mrow><mi>I</mi><mrow><mo fence="true">[</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub><mo fence="true">]</mo></mrow></mrow><mi>n</mi></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">mean</mi><mo>⁡</mo><mi>I</mi><mi>O</mi><mi>U</mi><mo stretchy="false">(</mo><mi mathvariant="bold">y</mi><mo separator="true">,</mo><mover accent="true"><mi mathvariant="bold">y</mi><mo>^</mo></mover><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><msubsup><mo>∑</mo><mi>c</mi><mi>m</mi></msubsup><msubsup><mo>∑</mo><mi>i</mi><mi>n</mi></msubsup><mi>I</mi><mrow><mo fence="true">[</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><mi>c</mi><mo separator="true">,</mo><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub><mo>=</mo><mi>c</mi><mo fence="true">]</mo></mrow></mrow><mrow><msubsup><mo>∑</mo><mi>c</mi><mi>m</mi></msubsup><msubsup><mo>∑</mo><mi>i</mi><mi>n</mi></msubsup><mi>I</mi><mrow><mo fence="true">[</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><mi>c</mi><mtext> or </mtext><mover accent="true"><mi>y</mi><mo>^</mo></mover><mo>=</mo><mi>c</mi><mo fence="true">]</mo></mrow></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l}{\operatorname{Accuracy}(\mathbf{y}, \hat{\mathbf{y}})=\sum_{i=0}^{n} \frac{I\left[y_{i}=\hat{y}_{i}\right]}{n}} \\{\operatorname{mean} I O U(\mathbf{y}, \hat{\mathbf{y}})=\frac{\sum_{c}^{m} \sum_{i}^{n} I\left[y_{i}=c, \hat{y}_{i}=c\right]}{\sum_{c}^{m} \sum_{i}^{n} I\left[y_{i}=c \text { or } \hat{y}=c\right]}}\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000139999999997em;vertical-align:-1.2500069999999999em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7500069999999999em;"><span style="top:-3.8000139999999996em;"><span class="pstrut" style="height:3.0600069999999997em;"></span><span class="mord"><span class="mord"><span class="mop"><span class="mord mathrm">A</span><span class="mord mathrm">c</span><span class="mord mathrm">c</span><span class="mord mathrm">u</span><span class="mord mathrm">r</span><span class="mord mathrm">a</span><span class="mord mathrm">c</span><span class="mord mathrm" style="margin-right:0.01389em;">y</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">y</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">y</span></span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">[</span></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">=</span><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord mtight">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">]</span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span style="top:-2.380007em;"><span class="pstrut" style="height:3.0600069999999997em;"></span><span class="mord"><span class="mord"><span class="mop"><span class="mord mathrm">m</span><span class="mord mathrm">e</span><span class="mord mathrm">a</span><span class="mord mathrm">n</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">y</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">y</span></span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.060007em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7046857142857144em;"><span style="top:-2.1785614285714283em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span style="top:-2.8971428571428572em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32143857142857146em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7046857142857144em;"><span style="top:-2.1785614285714283em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-2.8971428571428572em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32143857142857146em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">[</span></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">=</span><span class="mord mathdefault mtight">c</span><span class="mord text mtight"><span class="mord mtight"> or </span></span><span class="mord accent mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord mtight">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mrel mtight">=</span><span class="mord mathdefault mtight">c</span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">]</span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5350070000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.1785614285714283em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32143857142857146em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.1785614285714283em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32143857142857146em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">[</span></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">=</span><span class="mord mathdefault mtight">c</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord mtight">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">=</span><span class="mord mathdefault mtight">c</span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">]</span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5700069999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2500069999999999em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p><p>Semantic Segmantation:</p><ul><li><p>FCN: 第一篇语义分割工作；</p></li><li><p>Learning Deconvolution Network for Semantic Segmentation，引入unpool和反卷积deconvolution；</p></li><li><p>DeepLab，引入空洞卷积<a href="https://www.jianshu.com/p/f743bd9041b3">dilated-convolution</a>和DenseCRF；</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/megviidlcourse/CRF.JPG" alt></p><ul><li><p>CRF AS RNN;</p></li><li><p>Deeplab Attention;</p></li><li><p>PSPNet;</p></li><li><p>GCN (Global Convolutional Network，主讲人的工作，想要框住任意尺度的物体);</p></li><li><p>Deeplab V3;</p></li><li><p><strong>Deformable Convolution</strong>;</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/megviidlcourse/deformable_convolution.JPG" alt="deformable deconvolution"></p><p>Instance Segmentation:</p><p>Top-down pipeline (目前主流，依赖detection框架)：</p><ul><li><p>先detection再segmentation</p></li><li><p>FCIS (框得不准，但是分割依然准)；</p></li><li><p>Mask RCNN;</p></li></ul><p>Bottom-up pipeline (效果差，难实现，思考空间大):</p><ul><li><p>不出框分割;</p></li><li><p>Semantic instance segmentation via metric learning;</p></li></ul><hr><p>介绍旷视的框架：</p><ul><li>batch size in training:</li></ul><p>​       detection得batch size往往比分类小很多，主要是训练尺寸不同，另外可能一张图片会有很多proposal…</p><p>​       小batch size 会导致：unstable gradient，inaccurate BN statistics， extremely imbalanced data, very</p><p>​       long training period…</p><ul><li><p>Multi-device BatchNorm;</p></li><li><p>Sublinear Memory;</p></li><li><p>Large Learning Rate;</p></li><li><p>打COCO instance segmentation比赛的一些tricks: precise RoI pooling, context extractor, mask generator；</p></li><li><p>keypoint比赛tricks；</p></li></ul><h2 id="9-recurrent-neural-network">9. Recurrent Neural Network</h2><p>RNN Bascis:</p><ul><li><p><a href="https://plato.stanford.edu/entries/turing-machine/">Turning Machine</a>, RNN is Turing Complete, Sequence Modeling；</p></li><li><p>RNN Diagram,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>h</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>F</mi><mo stretchy="false">(</mo><msub><mi>h</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>W</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(h_{i}, y_{i}) = F(h_{i-1},x_{i},W)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mclose">)</span></span></span></span> ；</p></li><li><p>根据input/output分类：many-to-many,  many-to-one, one-to-many, many-to-one+one-to-many;</p></li><li><p>many-to-many example: language model (predict next word by given previous words, tell story, write books in LaTex…);</p></li><li><p>many-to-one example: Sentiment analysis…</p></li><li><p>many-to-one+one_to_many exapmle: Neural Machine Translation (encoder+decoder)…</p></li><li><p>训练RNN，梯度爆炸和梯度消失: singular value &gt; 1 =&gt; explodes, singular value &lt; 1 =&gt; vanishes… LSTM (Long short-term memory) come to the resuce;</p></li><li><p>why LSTM works (input gate, forget gate, output gate, temp variable, memory cell);</p></li><li><p>GRU (similar to LSTM, let information flow without a separate memory cell);</p></li><li><p>Search for better RNN architecture;</p></li></ul><p>Simple RNN Extentsions:</p><ul><li><p>Bidirectional RNN (BDRNN)，预测未来；</p></li><li><p>2D-RNN: Pixel-RNN, each pixel depends on its top and left neighbor  (补图，segmentation);</p></li><li><p>Deep RNN (stack more of them, harder to train);</p></li></ul><p>RNN with Attention:</p><ul><li><p>attention: differentiate entities by its importance, spatial attention is related to location;  temporal attention is related to causality;</p></li><li><p>attention over input sequence: Neural Machine Translation (NMT);</p></li><li><p>Image Attention: Image Captioning (input image–&gt; Convolutional feature extraction–&gt;RNN with attention over the image–&gt;Word by word generation);</p></li></ul><p>RNN with External Memory:</p><ul><li>copy a sequence: Neural Turning Machines (NTM);</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/megviidlcourse/NTM.JPG" alt></p><p>More Applications:</p><ul><li><p>RNN without a sequence input: read house numbers from left to right, generate images of digits by learning to sequentially add color to canvas;</p></li><li><p>generalizing recurrence (a computation unit with shared parameter occurs at multiple places in the computation graph);</p></li><li><p>apply when there’s tree structure in data;</p></li><li><p>bottom-up aggregation of information;</p></li><li><p>speech recognition;</p></li><li><p>generating sequence;</p></li><li><p>question answering;</p></li><li><p>visual question answering;</p></li><li><p>combinatorial problems;</p></li><li><p>learning to excute;</p></li><li><p>compress image;</p></li><li><p>model architecture search;</p></li><li><p>meta-learning;</p></li></ul><p>…</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/megviidlcourse/RNN_pros_cons.JPG" alt></p><p>RNN’s RIval:</p><ul><li><p>WaveNet: causal dilated convolution,  Oord, Aaron van den, et al. “Wavenet: A generative model for raw audio.” arXiv preprint arXiv:1609.03499 (2016).</p></li><li><p>Attention is All You Need (Transformer) ;</p></li></ul><h2 id="10-introduction-to-generative-models-and-gans">10. Introduction to Generative Models (and GANs)</h2><p>Basics:</p><ul><li><p>Generative Models: Learning the distributions;</p></li><li><p>Discriminative: learn the likelihood;</p></li><li><p>Generative: performs Density Estimation (learns the distribution) to allow sampling;</p></li><li><p>回归建模的话会取平均值，回归的是最可能情况的平均值，显得不真实，a driscrminative model just smoothes all possibilities, ambiguity and “blur” effect;</p></li><li><p>application of generative models: image generation from sketch, interactive editing, image to image translation;</p></li></ul><p>How to train generative models:</p><ul><li>给出一系列样本点，模型生成符合预期分布的输出；</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/megviidlcourse/taxonomy_of_generative_models.JPG" alt="从左往右方法逐渐work"></p><ul><li><p>exact model: NVP (non-volume preserving), real NVP: invertible no-linear transforms, 理论要求过于严格（Restriction on the source domain: must be of the <strong>same</strong> as the target.），效果不好（人脸稍微好点，因为其structure比较规矩）；</p></li><li><p>Variational Auto-Encoder (VAE): encoder 做density estimation的过程， decoder做sampling的过程。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/megviidlcourse/VAE.JPG" alt></p><ul><li><p>Generative Adversarial Networks (GAN): 生成器和判别器相互学习进步，交替训练；</p></li><li><p>DCGAN: example of feature manipulation （人脸加眼镜，变性别之类的的操作）；</p></li><li><p>conditional, cross-domain generation (genenative adversarial text to image synthesis);</p></li><li><p>GAN training problems: unstable losses（训练时应该G和D应该处于动态平衡）, mini-batch fluctuation （每个batch之间生成的图像不同），model collapse (lack of diversity in generated results);</p></li><li><p>improve GAN training: label smoothing, <strong>Wasserstein GAN (WGAN)</strong> (stabilized taining curve, non-vanishing gradient), loss sensitive GAN (LS-GAN)… <a href="https://github.com/hindupuravinash/the-gan-zoo">The GAN Zoo</a>;</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/megviidlcourse/WGAN.JPG" alt></p><p>举一些有名的GAN例子：</p><ul><li><p>zhu junyan—Cycle GAN :correspondence from unpaired data;</p></li><li><p>DiscoGAN: cross-domain relation;</p></li><li><p>GeneGAN: shorter pathway improves training  (cross breeds and reproductions, 生成笑容)，object transfiguration (变发型)，interpolation in object subspace (改变发型方向)；</p></li></ul><p>Math behind Generative Models:</p><ul><li><p>formulation: sampling vs. density estimation;</p></li><li><p>RBM  (现在已经不怎么使用)；</p></li><li><p>from density to sample: 给定概率密度方程，无法有效采样；</p></li><li><p>from sample to density: 给定black-box sampler，是否可以估计概率密度（频率）；</p></li></ul><p>​        Given samples, some properties of the distribution can be learned, while others cannot.</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/megviidlcourse/game_G_D.JPG" alt></p><ul><li><p>the future of GANs: guaranteed stabilization (new distance), broader application (apply adversarial loss in xx/ different type of data);</p></li><li><p>GAN tutorial from Ian Goodfellow: <a href="https://arxiv.org/abs/1701.00160;">https://arxiv.org/abs/1701.00160;</a></p></li></ul><h2 id="11-persom-re-identification">11. Persom Re-Identification</h2><p>ReID: from face to person;</p><ul><li><p>face recognition (verification, size: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>32</mn><mo>×</mo><mn>32</mn></mrow><annotation encoding="application/x-tex">32 \times 32</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">2</span></span></span></span>, horizontal: -30~30, vertical: -20~20, little occlusion);</p></li><li><p>person Re-Identification (trcaking in cameras, searching person in videos, clustering person in photos, challenges: inaccurate detection, misalignment, illumination difference, occlusion…);</p></li><li><p>common in FR &amp; ReID: deep metric learning, mutual learning, re-ranking;</p></li><li><p>special in ReID: feature alignment, ReID with pose estimation, ReID with human attributes;</p></li></ul><p>from classification to metric learning:</p><ul><li><p>classification network只能辨别那些“见过的”物体，没见过的物体就要重训练，对于人脸识别部署来说，不现实。为了克服这点，加入metric learning，拿pre-train过的classification网络在metric learning中finetune (similar feature);</p></li><li><p>有些工作是fusing intermediate feature maps, 但是计算量和存储都加大，拖慢了速度，不实用；</p></li></ul><p>Metric Learning:</p><ul><li><p>Learn a function that measures how similar two objects are. Compared to classification which works in a closed-word, metric learning deals with an open-world.</p></li><li><p>contrastive loss: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mtext>pairwise</mtext></msub><mo>=</mo><mi>δ</mi><mrow><mo fence="true">(</mo><msub><mi>I</mi><mi>A</mi></msub><mo separator="true">,</mo><msub><mi>I</mi><mi>B</mi></msub><mo fence="true">)</mo></mrow><mo>⋅</mo><msub><mrow><mo fence="true">∥</mo><msub><mi>f</mi><mi>A</mi></msub><mo>−</mo><msub><mi>f</mi><mi>B</mi></msub><mo fence="true">∥</mo></mrow><mn>2</mn></msub><mo>+</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><mi>δ</mi><mrow><mo fence="true">(</mo><msub><mi>I</mi><mi>A</mi></msub><mo separator="true">,</mo><msub><mi>I</mi><mi>B</mi></msub><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><msub><mrow><mo fence="true">(</mo><mi>α</mi><mo>−</mo><msub><mrow><mo fence="true">∥</mo><msub><mi>f</mi><mi>A</mi></msub><mo>−</mo><msub><mi>f</mi><mi>B</mi></msub><mo fence="true">∥</mo></mrow><mn>2</mn></msub><mo fence="true">)</mo></mrow><mo lspace="0em" rspace="0em">+</mo></msub></mrow><annotation encoding="application/x-tex">L_{\text {pairwise}}=\delta\left(I_{A}, I_{B}\right) \cdot\left\|f_{A}-f_{B}\right\|_{2}+\left(1-\delta\left(I_{A}, I_{B}\right)\right)\left(\alpha-\left\|f_{A}-f_{B}\right\|_{2}\right)_{+}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.317502em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">pairwise</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0497em;vertical-align:-0.29969999999999997em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∥</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∥</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151408em;"><span style="top:-2.4003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29969999999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.157731em;vertical-align:-0.40773099999999995em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∥</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∥</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151408em;"><span style="top:-2.4003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29969999999999997em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.05893100000000007em;"><span style="top:-2.3506em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.40773099999999995em;"><span></span></span></span></span></span></span></span></span></span> （最后一项有focus困难样本的作用，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span></span> is Kronecker Delta，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span> is the margin for different identities），让有相同identity的图像距离变小，反之变大，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>被用来略掉那些“naive”的negative pairs；</p></li><li><p>triplet loss: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>t</mi><mi>r</mi><mi>p</mi></mrow></msub><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><mover><mo>∑</mo><mi>N</mi></mover><msub><mrow><mo fence="true">(</mo><msub><mrow><mo fence="true">∥</mo><msub><mi>f</mi><mi>A</mi></msub><mo>−</mo><msub><mi>f</mi><msup><mi>A</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msub><mo fence="true">∥</mo></mrow><mn>2</mn></msub><mo>−</mo><msub><mrow><mo fence="true">∥</mo><msub><mi>f</mi><mi>A</mi></msub><mo>−</mo><msub><mi>f</mi><mi>B</mi></msub><mo fence="true">∥</mo></mrow><mn>2</mn></msub><mo>+</mo><mi>α</mi><mo fence="true">)</mo></mrow><mo lspace="0em" rspace="0em">+</mo></msub></mrow><annotation encoding="application/x-tex">L_{t r p}=\frac{1}{N}  \sum \limits ^{N}\left(\left\|f_{A}-f_{A^{\prime}}\right\|_{2}-\left\|f_{A}-f_{B}\right\|_{2}+\alpha\right)_{+}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.936067em;vertical-align:-0.40773099999999995em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.528336em;"><span style="top:-3.0000050000000003em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.950005em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25000500000000003em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∥</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∥</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151408em;"><span style="top:-2.4003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29969999999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∥</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∥</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151408em;"><span style="top:-2.4003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29969999999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.05893100000000007em;"><span style="top:-2.3506em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.40773099999999995em;"><span></span></span></span></span></span></span></span></span></span> (The distance of A and A’ should be smaller than that of A and B. <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span> is the margin between negative and positive pairs. Without  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>,  all distance converge to zero.);</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/megviidlcourse/closs_Tloss.JPG" alt></p><ul><li><p>improved triplet loss: $ L_{i m t r p}=\frac{1}{N} \sum^{N}\left(\left|f_{A}-f_{A^{\prime}}\right|<em>{2}-\left|f</em>{A}-f_{B}\right|<em>{2}+\alpha\right)</em>{+} +\frac{1}{N} \sum^{N}\left(\left|f_{A}-f_{A^{\prime}}\right|<em>{2}-\beta\right)</em>{+} $ (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span> penalizes distance between features of <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">A^{\prime}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>), only consider image pairs with the same identity;</p></li><li><p>quadruplet loss: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>L</mi><mrow><mi>q</mi><mi>u</mi><mi>a</mi><mi>d</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><mover><mo>∑</mo><mi>N</mi></mover><mo stretchy="false">(</mo><mover><mover><mrow><msub><mrow><mo fence="true">∥</mo><msub><mi>f</mi><mi>A</mi></msub><mo>−</mo><msub><mi>f</mi><msup><mi>A</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msub><mo fence="true">∥</mo></mrow><mn>2</mn></msub><mo>−</mo><msub><mrow><mo fence="true">∥</mo><msub><mi>f</mi><mi>A</mi></msub><mo>−</mo><msub><mi>f</mi><mi>B</mi></msub><mo fence="true">∥</mo></mrow><mn>2</mn></msub><mo>+</mo><mi>α</mi></mrow><mo stretchy="true">⏞</mo></mover><mtext>relative distance</mtext></mover><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>+</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><mover><mo>∑</mo><mi>N</mi></mover><mo stretchy="false">(</mo><mover><mover><mrow><msub><mrow><mo fence="true">∥</mo><msub><mi>f</mi><mi>A</mi></msub><mo>−</mo><msub><mi>f</mi><msup><mi>A</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msub><mo fence="true">∥</mo></mrow><mn>2</mn></msub><mo>−</mo><msub><mrow><mo fence="true">∥</mo><msub><mi>f</mi><mi>C</mi></msub><mo>−</mo><msub><mi>f</mi><mi>B</mi></msub><mo fence="true">∥</mo></mrow><mn>2</mn></msub><mo>+</mo><mi>β</mi></mrow><mo stretchy="true">⏞</mo></mover><mtext>absolute distance </mtext></mover><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned} L_{q u a d} &amp;=\frac{1}{N} \sum^{N}(\overbrace{\left\|f_{A}-f_{A^{\prime}}\right\|_{2}-\left\|f_{A}-f_{B}\right\|_{2}+\alpha}^{\text {relative distance}}) \\ &amp;+\frac{1}{N} \sum^{N}(\overbrace{\left\|f_{A}-f_{A^{\prime}}\right\|_{2}-\left\|f_{C}-f_{B}\right\|_{2}+\beta}^{\text {absolute distance }}) \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.140216000000001em;vertical-align:-2.8201080000000007em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.320108em;"><span style="top:-5.320108em;"><span class="pstrut" style="height:4.0841080000000005em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:4.0841080000000005em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.8201080000000007em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.320108em;"><span style="top:-5.320108em;"><span class="pstrut" style="height:4.0841080000000005em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5500050000000001em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mover"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.084108em;"><span style="top:-3.398em;"><span class="pstrut" style="height:3.398em;"></span><span class="mord mover"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3980000000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∥</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∥</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151408em;"><span style="top:-2.4003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29969999999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∥</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∥</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151408em;"><span style="top:-2.4003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29969999999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span><span class="svg-align" style="top:-3.85em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMinYMin slice"><path d="M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7 5-6 9-10 13-.7 1-7.3 1-20 1H6z"/></svg></span><span class="brace-center" style="height:0.548em;"><svg width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMidYMin slice"><path d="M200428 334c-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z"/></svg></span><span class="brace-right" style="height:0.548em;"><svg width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMaxYMin slice"><path d="M400000 542l-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5s-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1c124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z"/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29969999999999997em;"><span></span></span></span></span></span></span><span style="top:-4.996em;"><span class="pstrut" style="height:3.398em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">relative distance</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29969999999999997em;"><span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:4.0841080000000005em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5500050000000001em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mover"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.084108em;"><span style="top:-3.398em;"><span class="pstrut" style="height:3.398em;"></span><span class="mord mover"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3980000000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∥</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∥</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151408em;"><span style="top:-2.4003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29969999999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∥</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∥</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151408em;"><span style="top:-2.4003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29969999999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span><span class="svg-align" style="top:-3.85em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMinYMin slice"><path d="M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7 5-6 9-10 13-.7 1-7.3 1-20 1H6z"/></svg></span><span class="brace-center" style="height:0.548em;"><svg width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMidYMin slice"><path d="M200428 334c-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z"/></svg></span><span class="brace-right" style="height:0.548em;"><svg width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMaxYMin slice"><path d="M400000 542l-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5s-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1c124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z"/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29969999999999997em;"><span></span></span></span></span></span></span><span style="top:-4.996em;"><span class="pstrut" style="height:3.398em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">absolute distance </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29969999999999997em;"><span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.8201080000000007em;"><span></span></span></span></span></span></span></span></span></span></span>, 结合了triplet loss和pairwise loss，任何有着相同identity的image之间的distance都要比不同不同image之间的distance小；</p></li><li><p>triplet loss较contrastive loss提升明显，后面的quadruplet loss较triplet提升不多，而带来了计算量和搜索空间的提升，因此常用triplet loss;</p></li></ul><p>Hard Sample Mining:</p><ul><li><p>triplet hard loss: $ L_{\text {trihard}}=\frac{1}{N} \sum_{A \in \text {batch}}(\overbrace{\max <em>{A^{\prime}}\left(\left|f</em>{A}-f_{A^{\prime}}\right|<em>{2}\right)}^{\text {hard positive pair }} -\overbrace{\min \left(\left|f</em>{A}-f_{B}\right|_{2}\right)}^{\text {hard negative pair }}+\alpha) $, 找出矩阵中相同identity images中最不像的（the largest distance in the diagonal block）和不同identity images中最像的（The smallest distance in other places）;</p></li><li><p>soft  triplet hard loss: 不用一个个找出来，而是利用softmax自动去分配大权重给harder samples;</p></li><li><p>margin sample mining: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>e</mi><mi>m</mi><mi>l</mi></mrow></msub><mo>=</mo><mo stretchy="false">(</mo><mover><mover><mrow><msub><mo><mi>max</mi><mo>⁡</mo></mo><mrow><mi>A</mi><mo separator="true">,</mo><msup><mi>A</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow></msub><mrow><mo fence="true">(</mo><msub><mrow><mo fence="true">∥</mo><msub><mi>f</mi><mi>A</mi></msub><mo>−</mo><msub><mi>f</mi><msup><mi>A</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msub><mo fence="true">∥</mo></mrow><mn>2</mn></msub><mo fence="true">)</mo></mrow></mrow><mo stretchy="true">⏞</mo></mover><mtext>hardest positive pair </mtext></mover><mo>−</mo><mover><mover><mrow><msub><mo><mi>min</mi><mo>⁡</mo></mo><mrow><mi>C</mi><mo separator="true">,</mo><mi>B</mi></mrow></msub><mrow><mo fence="true">(</mo><msub><mrow><mo fence="true">∥</mo><msub><mi>f</mi><mi>C</mi></msub><mo>−</mo><msub><mi>f</mi><mi>B</mi></msub><mo fence="true">∥</mo></mrow><mn>2</mn></msub><mo fence="true">)</mo></mrow></mrow><mo stretchy="true">⏞</mo></mover><mtext>hardest negative pair </mtext></mover><mo>+</mo><mi>α</mi><msub><mo stretchy="false">)</mo><mo lspace="0em" rspace="0em">+</mo></msub></mrow><annotation encoding="application/x-tex">L_{e m l}=(\overbrace{\max _{A, A^{\prime}}\left(\left\|f_{A}-f_{A^{\prime}}\right\|_{2}\right)}^{\text {hardest positive pair }}-\overbrace{\min _{C, B}\left(\left\|f_{C}-f_{B}\right\|_{2}\right)}^{\text {hardest negative pair }}+\alpha)_{+}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1006549999999997em;vertical-align:-0.880439em;"></span><span class="mopen">(</span><span class="mord mover"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2202159999999997em;"><span style="top:-3.398em;"><span class="pstrut" style="height:3.398em;"></span><span class="mord mover"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3980000000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43055999999999994em;"><span style="top:-2.3556690000000002em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.880439em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∥</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∥</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151408em;"><span style="top:-2.4003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29969999999999997em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span class="svg-align" style="top:-3.85em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMinYMin slice"><path d="M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7 5-6 9-10 13-.7 1-7.3 1-20 1H6z"/></svg></span><span class="brace-center" style="height:0.548em;"><svg width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMidYMin slice"><path d="M200428 334c-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z"/></svg></span><span class="brace-right" style="height:0.548em;"><svg width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMaxYMin slice"><path d="M400000 542l-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5s-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1c124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z"/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.880439em;"><span></span></span></span></span></span></span><span style="top:-5.132108000000001em;"><span class="pstrut" style="height:3.398em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">hardest positive pair </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.880439em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.1006549999999997em;vertical-align:-0.880439em;"></span><span class="mord mover"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2202159999999997em;"><span style="top:-3.398em;"><span class="pstrut" style="height:3.398em;"></span><span class="mord mover"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3980000000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.3556690000000002em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.880439em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∥</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∥</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151408em;"><span style="top:-2.4003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29969999999999997em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span class="svg-align" style="top:-3.85em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMinYMin slice"><path d="M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7 5-6 9-10 13-.7 1-7.3 1-20 1H6z"/></svg></span><span class="brace-center" style="height:0.548em;"><svg width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMidYMin slice"><path d="M200428 334c-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z"/></svg></span><span class="brace-right" style="height:0.548em;"><svg width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMaxYMin slice"><path d="M400000 542l-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5s-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1c124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z"/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.880439em;"><span></span></span></span></span></span></span><span style="top:-5.132108000000001em;"><span class="pstrut" style="height:3.398em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">hardest negative pair </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.880439em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25833100000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>;</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/megviidlcourse/conclu_dmetriclea.JPG" alt></p><p>Mutual Learning:</p><ul><li><p>knowledge distill: 知识蒸馏，学生网络学习老师网络的输出；</p></li><li><p>mutual learning: 几个学生网络自己相互学习，利用KL散度算各个网络output pro之间的接近程度；</p></li><li><p>metric mutual learning: $ L_{M}=\frac{1}{N^{2}} \sum_{i}^{N} \sum_{j}^{N} \left(\left[Z G\left(M_{i j}^{\theta_{1}}\right)-M_{i j}^{\theta_{2}}\right]^{2}+\left[M_{i j}^{\theta_{1}}-Z G\left(M_{i j}^{\theta_{2}}\right)\right]^{2}\right) $, ZG代表zero gradient，不计算梯度，不进行反向传播，学习distance matrix;</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/megviidlcourse/framework_MML.JPG" alt></p><ul><li>re-ranking: 对initial ranking list进行再ranking，使其smooth，on Supervised Smoothed Manifold/ by K-reciprocal Encoding;</li></ul><p>Person Re-Identification:</p><ul><li><p>difficulties: inaccurate detection, misalignment, illumination difference, occlusion, non-rigid body deformation, similar apperance…</p></li><li><p>evaluation criteria: CMC (Cumulative Math Characteristic)&lt;rank-1, rank-5, rank-10&gt;, mAP (based on rank);</p></li><li><p>datasets: Marke1501, CUHK03, DukeMTMC-reid, MARS;</p></li></ul><p>Feature Alignment:</p><p>motivations:</p><ul><li>Person is highly structured;</li><li>Local similarity plays a key role to decide the identity;</li></ul><p>methods:</p><ul><li>Local Features from local regions<ul><li>Traditional Methods (colors, texture…);</li><li>Deep Learning Methods;</li></ul></li><li>Local Feature Alignment<ul><li>Fusion by LSTM (RNN cannot fuse local features properly);</li><li>Alignment in PL-Net (Part Loss Network, unsupervised);</li><li>Alignment in AlignedReID (Face++出品，性能超越人类，global feature+7个local feature，代表人的7个部分，横向pool，只拿对应的边，使用动态规划);</li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/megviidlcourse/AlignedReID.JPG" alt></p><p>ReID with Extra Information:</p><p>ReID with Pose Estimation:</p><ul><li>Providing explicit guidance for alignment;</li><li>Global-Local Alignment Descriptor (GLAD);<ul><li>Vertical alignment by pose estimation;</li></ul></li><li>SpindleNet;<ul><li>Fusing local features from regions proposed by pose estimation;</li></ul></li></ul><p>ReID with Human Attributes:</p><ul><li>Attributes is critical in discriminating different persons;</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/megviidlcourse/11_conclusion.JPG" alt></p><h2 id="12-shape-from-x-3d-reconstruction-传统和dl">12. Shape from X (3D reconstruction: 传统和DL)</h2><ul><li><p>Structure from Motion (SfM): the most easy-to-understand approach, triangulation gets depth;</p></li><li><p>triangulation: the epipolar constraint对极约束，单目；</p></li><li><p>stereo, rectification (更正), disparity (视差，depth): correspondence, 不能远距离测量；</p></li><li><p>3D point cloud: paper-building Rome in one day, 多视角图片SfM重建，3D geometry；</p></li><li><p>surface reconstruction: integration of oriented point;</p></li><li><p>SfM scanning: SLAM based, positioning, 华为手机发布会实现静止小熊猫玩偶重建；</p></li><li><p>depth sensing: active sensors, structured light, ToF (Time of Flight);</p></li><li><p>short baseline stereo: phase detection autofous;</p></li><li><p>shape from shading: shading as cue of 3D shape (the Lambertian law);</p></li><li><p>photometric stereo;</p></li><li><p>shape from texture, depth from focus, depth from defocus, shape from shadows, shape from sepcularities, object priors paper-<a href="https://arxiv.org/abs/1612.00603">A point set generation network for 3D object reconstruction from single image</a>;</p></li></ul><p>3D reconstruction from single image:</p><ul><li><p>the ShapeNet dataset;</p></li><li><p>depth map;</p></li><li><p>volumetric occupancy;</p></li><li><p>XML file;</p></li><li><p>ponit-based represenation;</p></li></ul><p>A neural method to stereo matching:</p><ul><li><p>Flownet &amp;  Dispnet (using raw left and right images as input, output disparity map);</p></li><li><p>stereo matching cost convolutional neural network–Yan lecun;</p></li><li><p>MRF (马尔可夫随机场) stereo methods;</p></li><li><p>global local stereo neural network;</p></li><li><p>PatchMatch Communication Layer;</p></li></ul><h2 id="13-visual-object-tracking">13. Visual Object Tracking</h2><p>Motion estimation/ Optical flow:</p><ul><li><p>motion field: the projection of the 3D motion onto a 2D image;</p></li><li><p>optical flwow: the pattern of apparent motion in images, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>d</mi><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>+</mo><mi>d</mi><mi>y</mi><mo separator="true">,</mo><mi>t</mi><mo>+</mo><mi>d</mi><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">I(x, y, t)=I(x+d x, y+d y, t+d t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span>, 在adjacent frames中像素的运动；</p></li><li><p>motion field与optical flow不是完全相等；</p></li><li><p>KLT feature tracker (找点，计算光流，更新点)，比较成熟，available in OpenCV；</p></li><li><p>optical flow with CNN: FlowNet / <a href="https://github.com/lmb-freiburg/flownet2">FlowNet 2.0</a>, lack of training data (Flying Chairs / ChairsSDHom, Flying Things 3D);</p></li><li><p>optical flow长距离跟踪和复杂场景跟踪容易失效，不建议采用；</p></li></ul><p>Single object tracking:</p><ul><li><p>model free:  nothing but a single training example is provided by the bounding box in the first frame;</p></li><li><p>short term and subject to causality;</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/megviidlcourse/single_object_tracking.JPG" alt></p><ul><li><p><a href="https://github.com/foolwood/benchmark_results">paper list</a>;</p></li><li><p>correlation fiter: 模板匹配，similar to convolution;</p></li><li><p>MOSSE (Minimum Output Sum of Squared Error) Filter;</p></li><li><p>KCF (Kernelized Correlation Filter);</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/megviidlcourse/KCF.JPG" alt></p><ul><li><p>from KCF to Discriminative CF Trackers: Martin Danelljan, 从Deep SRDCF开始利用CNN feature;</p></li><li><p><a href="https://github.com/martin-danelljan/Continuous-ConvOp">Continous-Convolution Operator Tracker</a>: very slow (~1fps) and easy to overfitting;</p></li><li><p>Efficient Convolution Operators: based (factorized convolution operator + Guassian mixture model) on C-COT, ~15fps on GPU;</p></li><li><p><a href="https://github.com/HyeonseobNam/MDNet">Multi-Domain Convolutional Neural Network Tracker</a>: online tracking, bounding box regression, ~1fps;</p></li><li><p><a href="http://davheld.github.io/GOTURN/GOTURN.html">GOTURN</a>: ~100fps;</p></li><li><p><a href="https://github.com/bertinetto/siamese-fc">SiameseFC</a>: ~60fps, a deep FCN is trained to address a more general similarity learning problem in an initial offline phase;</p></li><li><p>Benchmark: VOT (accuracy, robustness, EAO-expect average overlap), OTB(one pass evaluation, spatial robustness evaluation);</p></li></ul><p>Multiple object tracking:</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/megviidlcourse/multi_object_tracking.JPG" alt></p><ul><li><p>tracking by detection: assocation based on location (IoU, L1/L2 distance), motion (modeling the movement of objects, Kalman filter), apperance (feature) ans so on;</p></li><li><p>association:</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/megviidlcourse/association.JPG" alt></p><ul><li><p>association as optimization: local method (Hungarian algorithm), global methods (clustering, network flow, minimum cost multi-cut problem), do optimization in a window (trade off speed against acc);</p></li><li><p>Benchmark: MOT, KITTI, ImageNet VID;</p></li><li><p>evaluation metrics: Multiple object tracking accuracy (MOTA);</p></li></ul><p>Other:</p><ul><li><p>fast moving object (FMO): an object that moves over a distance exceeding its size within the<br>exposure time;</p></li><li><p>multiple camera tracking;</p></li><li><p>tracking with multiple cues: with multiple detectors, with key points, with semantic segmentation, with RGBD camera;</p></li><li><p>multiple object tracking with NN:</p><ul><li>Milan, Anton, et al. &quot;Online Multi-Target Tracking Using<br>Recurrent Neural Networks“. AAAI. 2017.</li><li>Son, Jeany, et al. “Multi-Object Tracking with Quadruplet<br>Convolutional Neural Networks.” CVPR. 2017.</li></ul></li></ul><h2 id="14-neural-network-in-computer-graphics">14. Neural Network in Computer Graphics</h2><p>计算机视觉是将图像信息转换成抽象的语义信息等，而计算机图形学是将抽象的语义信息转换成图像信息。</p><ul><li><p>Graphics: rendering, 3D modeling, visual media retouching （图像修整）；</p></li><li><p>Neural Network for graphics: faster, better, more robust;</p></li><li><p>NN rendering:</p><ul><li><p>Monte Carlo ray tracing （光线追踪，寻找光源），paper-[SIGGRAPH17] Kernel-Predicting Convolutional Networks for Denoising Monte Carlo Renderings ( utilize CNN to predict de-noising kernels, thus enhance ray tracing rendering result);</p></li><li><p>volume rendering;</p></li><li><p>NN shading (real-time rendering), paper-Deep shading: Convolutional Neural Networks for Screen-space shading (2016);</p></li><li><p>goal is to accelerate, all training data can be gathered virtually;</p></li></ul></li><li><p>NN 3D modeling:</p><ul><li>shape understanding:<ul><li>3D ShapeNets: A Deep Representation for Volumetric Shapes (2015).</li><li>VoxNet: A 3D Convolutional Neural Network for Real-Time Object Recognition (2015).</li><li>DeepPano: Deep Panoramic Representation for 3-D Shape Recognition (2015).</li><li>FusionNet: 3D Object Classification Using Multiple Data Representations (2016).</li><li>OctNet: Learning Deep 3D Representations at High Resolutions (2017).</li><li>O-CNN: Octree-based Convolutional Neural Networks for 3D Shape Analysis (2017).</li><li>Orientation-boosted voxel nets for 3D object recognition (2017).</li><li>PointNet: Deep Learning on Point Sets for 3D Classification and Segmentation (2017).</li></ul></li><li>shape synthesis: 3D-conv, also use GAN</li><li>from 2D to 3D, data becomes harder to handle, design of mesh representation, high-resolution 3D problem;</li></ul></li><li><p>NN visual retouching:</p><ul><li>tone mapping:  paper-Deep Bilateral Learning for Real-Time Image Enhancement (2017), it can handle high-resolution images relatively fast;</li><li>automatic enhancement: paper- Exposure: A white-box Photo Post-processing Framework (2017);</li></ul></li></ul><p>Example-NN 3D Face:</p><ul><li><p>given a face RGB/RGBD still/sequence, reconstruct for each frame (intrinsic image or inverse rendering):</p><ul><li>Inner/outer camera matrix;</li><li>Face 3D pose;</li><li>Face shape;</li><li>Face expression;</li><li>Face albedo;</li><li>lighting;</li></ul></li><li><p>3D face priors: shape &amp; albedo, paper-A 3D Morphable Model learnt from 10,000 faces (2016);</p></li><li><p>3D face priors: expression: paper- FaceWarehouse: a 3D Facial Expression Database for Visual Computing (2012);</p></li><li><p>optimization: based 3D face fitting;</p></li><li><p>Coarse Net, Fine Net;</p></li><li><p>3D Face-without prior: paper-DenseReg: Fully Convolutional Dense Shape Regression In-the-Wild(2017);</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/megviidlcourse/3D_face.JPG" alt></p><ul><li><p>render for CV:</p><ul><li>Synthesizing Training Data for Object Detection in Indoor Scenes, (2017);</li><li>Playing for Data: Ground Truth from Computer Games (2016)</li><li>Learning from Synthetic Humans (2017);</li></ul></li><li><p>demo: Face2Face, Real-Time high-fidelity facial performance capture, DenseReg;</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;about&quot;&gt;About&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.bilibili.com/video/av88056282/&quot;&gt;视频&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;课件关注“旷视研究院”公众号回复“深度学习实践PPT”可获取;&lt;/li&gt;
&lt;li&gt;这套课程虽然是2017年的，但是涉及的内容还是很全面的，很多工作现在都发挥着不小的作用，所以并不过时，仍然值得一看。建议观看者是有过一定基础的人，刚入门者最好一开始不要看此系列课程，个人觉得第五课神经网络压缩，第六课基于DL的目标检测，第十课GAN，第十一课Person Re-Identification讲得比较好。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="课程记录" scheme="http://densecollections.top/categories/%E8%AF%BE%E7%A8%8B%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="computer vision" scheme="http://densecollections.top/tags/computer-vision/"/>
    
    <category term="deep learning" scheme="http://densecollections.top/tags/deep-learning/"/>
    
    <category term="Megvii" scheme="http://densecollections.top/tags/Megvii/"/>
    
  </entry>
  
  <entry>
    <title>2019-2020:漫长的告别</title>
    <link href="http://densecollections.top/posts/Summaryofthisyear-1/"/>
    <id>http://densecollections.top/posts/Summaryofthisyear-1/</id>
    <published>2020-01-10T02:52:06.000Z</published>
    <updated>2022-09-09T03:30:52.231Z</updated>
    
    <content type="html"><![CDATA[<p>搭博客的时间大概只有一年，当初是因为受到<a href="http://pluskid.org/">pluskid网站</a>和博客的影响，觉得做一个有趣的人，学习自己想了解的，放淡自己的心态是是每天很重要的事，因此想记录下来，有些规划，也好作为充实自己的见证，搁以前每年都来一个总结这件事我是不怎么做的。求学生涯没有结束，每年都是反复地上课，做项目，似乎都是浑浑噩噩度过，科研中的磕碰和一些不甘心也会时不时消磨自己的意志，让自己在怀疑，焦虑，麻木，强迫的交织中蹒跚着。我之前也知道很多励志结论，他们说的都很对，但每个人的生活总是悲喜交加的，而大多数情况下都是在平平无奇中暗生悲戚，羁绊越多的人似乎悲戚越浓。</p><p>2019年的寒假里，我翻看了很多<a href="http://freemind.pluskid.org/">pluskid的博客</a>内容，其中以年终总结最多。一开始我是被博主优秀的履历所吸引，后来在那些博客里我读到了对于生活细节的热爱，以及对于艺术，真理和其他人类活动的浓郁兴趣，真诚，质朴同时又很能温暖人，所以算是“始于履历，陷于才华”吧！（厚脸皮地说，有一种惺惺相惜之感）。罗曼罗兰在《米开朗琪罗传》中有句很出名的话：<em>“Il n’ya qu’un héroïsme au monde : c’est de voir le monde tel qu’il est et de l’aimer.（世界上只有一种真正的英雄主义，那就是认识生活的真相后依然热爱它）”</em>，我开始渐渐明白其中的血肉故事，目前虽然谈不上热爱，但可以说是慢慢从走出到走入，慢慢进入状态。</p><p>接下来，我想还是先从自己的学校科研生活讲起，然后再去讲讲自己看过的书，去过的地方，听过的音乐，拍过的照片，看过的电影等，一步步勾勒出自己的故事，就像是在索拉里斯星上模拟出的记忆花园，感想估计无法给出多少，倒是想能抓住几分情绪便好。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E7%94%B5%E5%BD%B1%E5%A4%A7%E5%B8%88%E5%89%A7%E7%85%A7.jpg" alt="电影'大师(the Master)'剧照"></p><span id="more"></span><h2 id="研究生科研工作">研究生科研工作</h2><p>2019年开始慢慢接受18年底国外读博计划失败的经历，审视自己这一个大时间段的失意，认清自己的能力和所需。前半年一半时间在慢慢恢复神志，试图理清自己后面的研究方向，还是想坚持SLAM+DL的路线。从头开始看高翔在深蓝学院的《视觉 SLAM 14讲》，看书，推公式，理解代码，再总结下来写到博客上，当然也时不时关注DL+CV相关论文的最新进展。大概是在3月底的时候，老板受人所托，给了我个在校外一家初创AI医疗研究院实习的机会，当时正好毫无头绪， 像个无头苍蝇到处乱撞，便答应下来。</p><p>为了能够顺利拿到实习机会（小型团队，气氛很好。mentor是海归，前百度员工，有梦想的工作狂），开始正式去看深度学习的理论，同时也参加了一个小型的“蔚蓝杯”人工智能 竞赛（赛题是检测图片中的商品，给出商品数量），熟悉一下数据分析，pytorch掉包和调参。趁着研一上课空余时间，突击学习理论，撕撕代码，看完了<a href="http://michaelnielsen.org/">Michael Nielsen</a>(这个人好像是个物理学家，写了一本关于量子通信，量子计算机方面的书籍，最近又搞了个网站专门介绍量子通信)的<a href="http://www.liuxiao.org/2016/10/dnn-%E3%80%8A%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%B8%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%8B%E4%B8%AD%E6%96%87%E7%89%88%E5%8F%8A%E4%BB%A3%E7%A0%81%E4%B8%8B%E8%BD%BD/">nndl</a>，<a href="http://www.weixiushen.com/">魏秀参</a>的《解析卷积神经网络》和一部分<a href="https://github.com/scutan90/DeepLearning-500-questions">深度学习500问</a>，本来计划接着看<a href="https://xpqiu.github.io/">邱锡鹏</a>教授的新书《神经网络与深度学习》，不过时间没赶得上就去面试了，个人感觉这些都是不错的参考资料。</p><p>实习面试的时候理论问题问得比较浅，可能对方知道我是个DL新手，只有训练CNN的一些防止过拟合技巧，BP中的链式法则等等；编程题就比较惨了，题目大概是在一个包含&quot;x&quot;和“o&quot;的矩阵（&quot;o&quot;是少量元素）中找出起始“o&quot;和终止&quot;o&quot;之间的最短距离（只能顺着“o&quot;走）。很久没撕过代码， 加上第一次工作面试有点紧张，连暴力搜索都没能写出来，场面一度十分尴尬。后来我觉得可能看在老板的面子上，还是让我过了。。。实习期是6月底到9月底，期间做的一些<a href="https://densecollections.top/posts/worksummaryofintern/">工作</a>和<a href="https://densecollections.top/posts/thoughtsofintern/">感想</a>我都放在了之前的博客里，认识的师兄，了解到的新知识都打开了我的思路，也培养了我一些工作习惯，锻炼了自己的代码能力，总之还是十分感谢这段实习经历的。</p><p>回来之后就在准备研究生毕业开题的事情，同时也赶着实习工作总结出的论文。当然要不是因为组里小老师给的项目，也不会三个月实习期结束就回来。年初的时候想着拿深度视觉里程计开题，后来实习的时候一度打算一边实习，一边拿实习的AI医疗项目做毕设，最后，还是综合考虑答应了做小老师的项目，以此作为毕设。毕设的大致内容其实就是检测无人机，但是由于要求检测距离远，所以可能常规的Faster R-CNN等框架的检测效果可能不太好，要引入GAN和超分辨率等手段。目前最大的坑处应该是数据集的收集了，既要拍摄RGB，也要拍摄红外；既要考虑不同出现场景和环境，还要引入多形态的无人机，鸟，风筝类别，此外还得保证将近1km的拍摄距离。估计数据拍完了，毕设时间也差不多到了(&gt;_&lt;|||)。</p><p>2019年的学习与科研不算太顺利，自己也经常没进入状态，算是那种没别人努力，却还时常抱怨，焦虑的人。希望2020年能加把劲，不管是工作还是继续申请读博，都得把自己整硬实起来才行啊（@_@）！</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/work-harder.jpg" alt="Photo by Jordan Whitfield on Unsplash"></p><h2 id="探访之境">探访之境</h2><p>今年南京之外去过的其他城市不多，大多是借着出差机会逛逛，不像本科时期年年都会找几个地方专程去看看。出走对于我来说已经成为生活中必不可少的一部分了，以为我是个很容易“习惯”的人，日常生活中的每件事都可以成为惯例，从不会厌倦，直到自己觉得到了需要进行调整或者改变的时刻。人在一个熟悉的封闭的空间里待久了，容易怀疑自己和这个世界，容易陷入空想而无所为的状态，这种感觉最能吞噬人的精神和智力。可能是我自己心浮气躁的原因，有时候会觉得内心烦闷，精气神不足，以前就任其发展，以无所事事应对，等待其消失。现在，随着这种情况出现次数的增多，我开始体会到这可能是科技异化人性和人类自身特质共同作用导致的，为了应对，我强制给自己找合适的，能辅助静下心来的事情做：“要么学习，要么运动“。其中”学习“的方式有很多种，不仅仅是科技理论知识，还可以是培养兴趣爱好，发展艺术视野和思维，出走旅游也是其中一种形式。</p><p>我学校处于靠市中心的位置，离很多景区都比较近，偶尔朋友来金陵的时候便会一起去玩玩，比如夫子庙，中山陵，老门东等地方。自己平时有点累或者烦躁的时候，通常会选择傍晚围中山陵绿道或者体育公园骑一圈，或者偶尔跟朋友师兄们相约爬紫金山，逛灵谷寺看萤火虫等。一年四季，这些地方都有很多”隐秘之地“，树草虫鸣，风拂月泻，令人舒心。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E5%A4%AB%E5%AD%90%E5%BA%99%E5%A4%9C%E6%99%AF1.jpg" alt="夏天夫子庙的傍晚"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E7%A7%A6%E6%B7%AE%E6%B2%B3.jpg" alt="秦淮河夜景"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E5%A4%AB%E5%AD%90%E5%BA%99%E4%B8%AD%E7%9A%84%E5%85%AC%E5%9B%AD.jpg" alt="夫子庙中的一个公园，具体名字我记不得了。"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E5%A4%AB%E5%AD%90%E5%BA%99%E9%B2%A4%E9%B1%BC.jpg" alt="夫子庙中一个公园里的一大群人工饲养鲤鱼"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E5%85%AC%E5%9B%AD%E4%B8%AD%E7%9A%84%E9%B9%85.jpg" alt="公园中的一只鹅，对游客已经免疫了"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E4%B8%AD%E5%B1%B1%E9%99%B5%E7%BB%BF%E9%81%93.jpg" alt="傍晚骑行的中山陵绿道"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E4%BD%93%E8%82%B2%E5%85%AC%E5%9B%AD.jpg" alt="傍晚的南京体育公园，挨着中山陵。颜色有种克莱因蓝的感觉"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E7%B4%AB%E9%87%91%E5%B1%B1%E5%A4%A7%E8%B7%AF.jpg" alt="和朋友一起爬紫金山路上"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E7%B4%AB%E9%87%91%E5%B1%B1%E5%A4%B4%E9%99%80%E5%B2%AD%E4%BF%AF%E7%9E%B0.jpg" alt="站在紫金山山群头陀岭俯瞰南京城，有些霾，拍得不是很清楚"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E4%B8%AD%E5%B1%B1%E9%99%B5%E5%85%AC%E5%9B%AD%E4%B8%80%E9%9A%85.jpg" alt="去灵谷寺路上的一汪水池"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E7%9C%8B%E8%90%A4%E7%81%AB%E8%99%AB%E6%A0%A1%E5%A4%96%E7%9A%84%E9%A9%AC%E8%B7%AF.jpg" alt="灵谷寺看完萤火虫回来的路上。第一次去拍萤火虫，相机不太好，光圈不够没拍出来萤火虫，囧x_x"></p><p>本科的时候有一些喜欢骑行的小伙伴，经常会约出去骑车到处逛，自从毕业读了研以后，朋友都各自纷飞，自己的圈子也越来越小，大家也都在实验室忙着各自的事。我偶尔一个人出去，也少了好几分乐趣。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E6%95%99%E7%A0%94%E5%AE%A4%E5%A4%96%E7%9A%84%E5%A4%A9%E7%A9%BA.jpg" alt="实验室外的天空"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E7%90%86%E6%83%B3%E9%AA%91%E8%A1%8C1.jpg" alt="日本一个小哥推特发的骑行照片，很是理想中的样子了"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E7%90%86%E6%83%B3%E9%AA%91%E8%A1%8C2.jpg" alt="这样的骑行环境国内似乎很少"></p><p>南京不像上海深圳，文化艺术多样性方面还是有所欠缺的，好歹有个南京博物院会时不时联合办些展览，可以饱饱眼福。2019年除了专程去看了固定的艺术馆的书画展，就是三次合作的特展：世界巨匠-意大利文艺复兴三杰；从毕加索到基弗-路德维希的艺术课；仰之弥高-二十世纪中国画大家展。前两次展品不多，毕竟大作是不太可能借过来的，最近一次的书画展规模比较大，看得也比较过瘾，将近百幅的画作看了两三个小时。</p><p><strong><a href="https://mp.weixin.qq.com/s/xrxMLSUhycpbtMBk53Q2yg">世界巨匠-意大利文艺复兴三杰</a></strong></p><p>展览内容是文艺复兴三杰达芬奇，米开朗琪罗，拉斐尔和他们继承人的一些作品，一开始我还妄想会有“蒙娜丽莎”，实际上三个人的真迹不多，其中有一些还只是复制品。不过，能看到这样的一些合作已经很满足了(&gt;～&lt;)。</p><p>拍的作品不多，有几幅是自己心水的。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E4%B8%96%E7%95%8C%E5%B7%A8%E5%8C%A03.jpg" alt="展览门票"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E4%B8%96%E7%95%8C%E5%B7%A8%E5%8C%A06.jpg" alt="米开朗琪罗的“哀悼基督”，展览中最喜欢的作品之一，可惜只是复制品"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E4%B8%96%E7%95%8C%E5%B7%A8%E5%8C%A01.jpg" alt="展览入门处矗立的雕塑，米开朗琪罗的“倚靠十字架的基督”。然鹅展览中没有“大卫”和“拉奥孔”的身影 Q_Q"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E4%B8%96%E7%95%8C%E5%B7%A8%E5%8C%A04.jpg" alt="米开朗琪罗画像"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E4%B8%96%E7%95%8C%E5%B7%A8%E5%8C%A05.jpg" alt="达芬奇的“女孩头部像”，自己比较喜欢的一幅作品，还专程买了相似的纪念品"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E4%B8%96%E7%95%8C%E5%B7%A8%E5%8C%A02.jpg" alt="达芬奇的“美丽公主”"></p><p><strong><a href="https://mp.weixin.qq.com/s?__biz=MzA5Mzk1NzQxNQ==&amp;mid=2656021627&amp;idx=1&amp;sn=54a8be2efaa5acd0c40f8da4850b43ee&amp;chksm=8beef033bc997925f6f4e35c4c417c9972b2bafd903674a3b2b26070eb1c53bfa1440b3d6960&amp;mpshare=1&amp;scene=1&amp;srcid=0128YyCtgogxHWDWaC7K1g3a&amp;sharer_sharetime=1580211377613&amp;sharer_shareid=4ed82b8c86f7bdeb368019cfe429ee62&amp;key=008658d21f0cfb81aea856e3b585c2ee570e286de35cc8bd4d066218d574c041f1493ecdcc46b9cd65bfba07cee59c36a74b56a57911c6c0e9b4292c04f2c18bb7c2103218fe57a9e9d788fa2cbec43f&amp;ascene=1&amp;uin=Mjg0MTMzNDQzMQ%3D%3D&amp;devicetype=Windows+10&amp;version=6208006f&amp;lang=zh_CN&amp;exportkey=A%2FAhzHlLl0jDCA0j%2FJwrG58%3D&amp;pass_ticket=2hEidokwNVuWD7Y6FL6DoxqyMg6FNzZEiYvkngh8pdxJI2%2Bneh%2F9h8tqW9J5PVnV">从毕加索到基弗一一路德维希的艺术课</a></strong></p><p>路德维希夫妇是非常有名的艺术收藏家，曾收集了很多毕加索的名画。这次展览也展出了毕加索的几幅真迹，比如“带鸟的步兵”等，不过鉴于规模，大部分还是我这个圈外人士不曾了解过的艺术家。画作风格上涵盖了立体主义，表现主义，抽象派，野兽派和波普艺术等，神秘，荒诞，又虚无。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%B7%AF%E5%BE%B7%E7%BB%B4%E5%B8%8C4.jpg" alt="贝尔纳德·舒尔茨，“伟大的母亲”。此次展览中最喜欢的一幅抽象画，我来回看了很久，但是没看出“母亲”的含义"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%B7%AF%E5%BE%B7%E7%BB%B4%E5%B8%8C5.jpg" alt="安塞尔姆·基弗，“阿拉里克的坟墓”"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%B7%AF%E5%BE%B7%E7%BB%B4%E5%B8%8C7.jpg" alt="娜塔丽亚·内斯特洛娃，“鸟”"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%B7%AF%E5%BE%B7%E7%BB%B4%E5%B8%8C1.jpg" alt="名字不记得了，画作内容好像是描绘新疆某个地方的烧烤摊的场景"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%B7%AF%E5%BE%B7%E7%BB%B4%E5%B8%8C2.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%B7%AF%E5%BE%B7%E7%BB%B4%E5%B8%8C3.jpg" alt="这幅画挺有意思的，人类拥有小范围太空探索的能力，与造物神之间的对峙和连接"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%B7%AF%E5%BE%B7%E7%BB%B4%E5%B8%8C6.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%B7%AF%E5%BE%B7%E7%BB%B4%E5%B8%8C8.jpg" alt></p><p>画作和诗歌一样，都得参照下创作背景，虽然有些艺术家可能是天赋异禀，像小松美羽，画作直接在脑海呈现，一气呵成。一千个读者，有一千个哈姆雷特，画作也是这样，那些吸引我的画，都有一种能攫住人的思绪得魅力，触发观赏者的千万感受。很抱歉我自己读书和思考比较少，鉴赏水平有限，没能做出比较完整的评价来。(+_+)</p><p><strong><a href="https://mp.weixin.qq.com/s?__biz=MzA5Mzk1NzQxNQ==&amp;mid=2656022782&amp;idx=1&amp;sn=e98882a7deac21af575b8298d24490e3&amp;chksm=8beeecb6bc9965a01af713ba2fd6a3618a1faaa24735cdf478f15dbf9bc548cd0cb2690f3f9b&amp;mpshare=1&amp;scene=1&amp;srcid=0128xHFfNOS2JdO2U7K6n5hW&amp;sharer_sharetime=1580211431161&amp;sharer_shareid=4ed82b8c86f7bdeb368019cfe429ee62&amp;key=1f3bd73ca2cb19588251434376e9c167a19004fc86747f5e66073c286ed4bf8a62151c98501fd2d8d6e7bb1bec11003fad8faf0ac6ae80516b1fbe2235c1e9f02f2d8dbe4128d1bd26a95a185e174974&amp;ascene=1&amp;uin=Mjg0MTMzNDQzMQ%3D%3D&amp;devicetype=Windows+10&amp;version=6208006f&amp;lang=zh_CN&amp;exportkey=AzstWxsx9pxr1OrJifPhDaI%3D&amp;pass_ticket=2hEidokwNVuWD7Y6FL6DoxqyMg6FNzZEiYvkngh8pdxJI2%2Bneh%2F9h8tqW9J5PVnV">仰之弥高-二十世纪中国画大家展</a></strong></p><p>20世纪中国画作继往开来，有种特别的魅力。南京博物院这一次的联合展览规模据说是国内之最，由于展品较多，分为上下半场，上半场在2019末尾，下半场在2020开年，我只看了上半场，就已经觉得展品数量多且质量高，2个多小时下来后意犹未尽，又去买了配套的书珍藏。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E4%BB%B0%E4%B9%8B%E5%BC%A5%E9%AB%981.png" alt="展览的八大家"></p><p>国画当中，我最喜爱也是唯一爱的是山水画，尤其以写意为主，创造了与西方讲究逼真复刻思想截然不同的心境体验。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E4%BB%B0%E4%B9%8B%E5%BC%A5%E9%AB%982.jpg" alt="展览封面是张大千的江岸图"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E4%BB%B0%E4%B9%8B%E5%BC%A5%E9%AB%983.jpg" alt="展览门票"></p><p>齐白石挑了几张图，从左到右分别是山溪群虾图，秋荷图，松寿图，寻旧图。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E9%BD%90%E7%99%BD%E7%9F%B3.jpg" alt></p><p>展出的黄宾虹作品中，狮子林望松谷园，练江南岸图，栖霞山居图，天目奇峰图，湖滨山居图，江村图，黄山记游图，九子山，练滨草堂图个人都非常喜欢，可惜手机里只翻出其中三张。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E9%BB%84%E5%AE%BE%E8%99%B9.jpg" alt></p><p>徐悲鸿：双马图|侧目图|飞鹰图，愚公移山图，鹰图，山鬼图，九方皋相马图。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E5%BE%90%E6%82%B2%E9%B8%BF.jpg" alt></p><p>张大千的画作想必很多人都喜欢，毕竟颇有古人风骨。下面挑出的几张是江岸图，泼墨荷花图，荷花图，仿杨昇笔意设色山水图，夏山高隐图。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E5%BC%A0%E5%A4%A7%E5%8D%83.jpg" alt></p><p>潘天寿：青山白云图，雄视图，雨后千山铁铸成，记写雁荡山花。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E6%BD%98%E5%A4%A9%E5%AF%BF.jpg" alt></p><p>林风眠，中西集合的一位画家：夜枭图，劈山救母图，早春暮色图，风景图，灰鹭图，鱼鹰小舟图。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E6%9E%97%E9%A3%8E%E7%9C%A0.jpg" alt></p><p>傅抱石：万竿烟雨图，待细把江山图画，兰亭修褉图，龙蟠虎踞今胜昔。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E5%82%85%E6%8A%B1%E7%9F%B3.jpg" alt></p><p>李可染：苏州虎丘图，万山红遍 层林尽染，崇山茂林源远流长图，无尽江山入画图，树百重泉图。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E6%9D%8E%E5%8F%AF%E6%9F%93.jpg" alt></p><p>近日受到2019-ncov病毒影响，学校也不准提前到校，下半场的展览不知还能不能赶得上了。</p><p>19年除南京城外，只到访过西安和成都。西安是“故地重游”，当时本科毕业时去了甘肃，正好顺路就去西安找朋友玩了趟。当时正值夏季，大西北天气炎热，白天毒辣的阳光炙烤得人很难受，不过晚上舒服，没有南京那么闷热，有些凉爽。西安的夜景确实很不错，市民们的夜生活也丰富多彩。大雁塔，大唐芙蓉园周边的柔和灯光映衬着来回的身着汉服的姑娘，恍如隔世。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%A5%BF%E5%AE%89%E5%A4%9C%E6%99%AF1.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%A5%BF%E5%AE%89%E5%A4%9C%E6%99%AF2.jpg" alt></p><p>第一次玩那会没吃上臊子面，算是一大憾事，19年年底开会的时候正好借着机会找了一家“乡党臊子面”体验了一把一顿“几十碗”的快感。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%87%8A%E5%AD%90%E9%9D%A2.jpg" alt="疯狂吃各种口味的臊子面 &gt;_&lt;"></p><p>吃撑了肚子，跟朋友一起到了附近的城墙走了一圈，夜景还是像以前来那样令人惊喜。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%A5%BF%E5%AE%89%E5%9F%8E%E5%A2%991.jpg" alt="城墙的夜景"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%A5%BF%E5%AE%89%E5%9F%8E%E5%A2%993.jpg" alt="站在小桥上拍，护城河？"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%A5%BF%E5%AE%89%E5%9F%8E%E5%A2%992.jpg" alt="走着走着发现一条走廊里挂着古风似的红灯笼，觉得非常喜欢，就拍下来了，但是我的GR II好像没对上焦"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%A5%BF%E5%AE%89%E5%9F%8E%E5%A2%994.jpg" alt="河边上的小人雕塑"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%A5%BF%E5%AE%89%E5%9F%8E%E5%A2%995.jpg" alt="商店旁一只会变色的鹿"></p><p>两次的西安之行，没有很长时间，达不到能够感受一个城市风格的力度。粗略的印象是面很好吃，夜景很好看，人民生活丰富也比较健谈，可惜大西北灰尘太多，空气质量差了点，嗓子实在吃不消。</p><p>大学本科四年来，成都是我一直想去但没能去成的地方，要么是没钱，要么是没时间。自西安开会结束回来后，正好收到要赶去四川成都陪师兄们做oral的消息，甚是激动。4天的学术会议，只花了几个小时参加作报告就溜了，剩下的时间都和师兄，朋友们在成都吃喝玩乐闲逛了。刚下飞机的那天就跑去谭鸭血吃了火锅，和热情的成都朋友们喝得酩酊大醉，半夜回旅馆路上还看到街上人来人往，分外悠闲。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%B0%AD%E9%B8%AD%E8%A1%80.jpg" alt="谭鸭血火锅店。不得不说成都的火锅确实很好吃，佐料也非常可口"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E6%88%90%E9%83%BD1.jpg" alt="晚上喝晕了，第二天起来已经是中午了，参会前就近找了一家小吃店，点了老妈蹄花，重庆小面和夫妻肺片"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E6%88%90%E9%83%BD2.jpg" alt="汇报结束去文殊院闲逛，吃了正宗的龙抄手，晚上被朋友拉去川菜馆"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E6%88%90%E9%83%BD3.jpg" alt="吃罢晚饭到春熙路溜达"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E6%88%90%E9%83%BD4.jpg" alt="听说成都人民的一大爱好是喝下午茶"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E6%88%90%E9%83%BD5.jpg" alt="到朋友的学校川师大参观"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E6%88%90%E9%83%BD6.jpg" alt="宽窄巷子"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E6%88%90%E9%83%BD7.jpg" alt="人民广场。大爷大妈聚集在此开展各种文艺活动，喝茶闲聊，掏耳朵打牌，应有尽有。我们待在一处啃着兔头"></p><p>尽管只有将近4天的短暂游玩，但成都却给我留下了与众不同的印象，特色美食，热情的小伙伴，悠然的生活方式，以及温润的气候让我一度不想归宁。临行的出租车司机大叔对我们说“你们年轻人不要随便来四川工作生活”，估计也是怕缓慢慵懒的生活节奏让我们丧失奋斗的意志了吧。</p><h2 id="阅读">阅读</h2><p>19年的阅读量比18年稍多了些，主要是在L同学的影响下，翻了很多画册或者手绘书。这些书看起来快，又不需要花时间思考，正好适合我现在的碎片阅读时间。本来今年打算着手学习一下画画，不管是什么绘画分支，得画起来才行，硬盘里也收藏了很多很多绘画教材和一些作品集，然而到现在都几乎没怎么翻过。</p><p>19年让我感触最大的两本书是两部小说，一本是科幻小说，《索拉里斯星》，塔可夫斯基也曾将其拍成电影《飞向太空》；另一本是写实结构主义小说，《城市与狗》，拉美文学作品，写作方式不怎么规则，但是阅读体验很好。我在豆瓣也建了个<a href="https://www.douban.com/photos/album/1686128240/">相册</a>存放自己有关看过的书的一些手拍照片，算是思考总结，也算是一种鞭策自己多阅读的手段吧。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E9%98%85%E8%AF%BB.jpg" alt="一大半的阅读量是绘画有关的书籍"></p><ul><li><p><a href="https://book.douban.com/subject/3618253/">和空姐同居的日子</a>是初中是很喜欢的一部广播小说，作者三十也居住在南京。内容虽然有些yy的成分，但是总体还算是清新自然，单纯美好。19年年初那会觉得心情不好，就重听了一遍，个人觉得第一部（季）质量最好，第二部可能是因为大家不喜欢第一部的结局而写出来的。现在喜马拉雅还有第一部的广播<a href="https://www.ximalaya.com/youshengshu/3087022/">资源</a>。</p></li><li><p><a href="https://book.douban.com/subject/26651221/">线性代数的几何意义</a>是19年年初看MIT 线性代数公开课阅读的课外材料。学过线代后看一遍会有不小的收获，也算是解释数学意义的一个体现吧，尤其是在实际工程上。</p></li><li><p><a href="https://book.douban.com/subject/5908654/">给青年人的信</a>是在自己的kindle上当作睡前读物看完的。大一时候听老师讲里尔克时心潮澎湃，专程去图书馆借了里尔克的诗集，囫囵吞枣地看完了，现在几乎对他的诗歌也没什么印象了，除了经典的几首。实际上，这本书作为枕边读物，常拿出来翻翻还是很有裨益的。里尔克写信的文字十分真诚，字里行间透露出对生活的热爱，对细节，真善美的观察和思考，不仅是对诗歌创作者，即使是对忧郁迷茫中人，也有不小的指导和振奋作用。</p></li><li><p><a href="https://book.douban.com/subject/25898192/">索拉里斯星</a>是波兰科幻作家斯塔尼斯瓦夫·莱姆的代表作，也是我目前最喜欢的科幻小说之一。它不同于一般的大格局的科幻小说，关心宇宙和人类的命运，或者讽刺人性等等，而是着眼于人的记忆和内心之中的隐秘之痛，和特德·姜的《你一生的故事》有些异曲同工之妙。这篇小说的故事内容很简单：人类在一个遥远的星系里发现了一个特别的天体，称之为索拉里斯，人类派出了空间站去探测研究这颗特别的天体，地球上还出现相关的研究学科。这颗天体本身就是一个生命体，表面几乎都被”海洋“覆盖，那些奇怪的液体可以随便被天体操作，模拟出各种形态，甚至是有自己意识的人类实体。男主到达空间站后发现几位同事都被索拉里斯星折磨得濒临崩溃，自己也随着索拉里斯星的实验慢慢揭开其中的秘密。实际上，索拉里斯星的这些实验都是处于自己对宇宙好奇的探索，空间站的人类在其面前没有任何秘密可言，包括记忆。记忆和亡妻之痛（或者说是每个人内心独有的隐秘之痛）是最近很着迷的点，总觉得它们代表着人类特有的印记，以此为内容的电影总能让我感触良多，弥漫着无法抗拒的悲痛感，像是“海边的曼彻斯特”，“登月第一人”等都可以说这种类型电影的代表。莱姆的索拉里斯星恰好也是有着这两个点，但是又不全是，书中包含着对人类道德，思想和精神世界的审视，虽然也有那种宇宙的孤独感，但是却又不全是那种冰冷的感觉。索拉里斯星上的大海，不像地球上孕育着生命，却表现出一种宇宙的隐士般的好奇，无欲，与人类触碰却又收回了手。书中有关男主的心理描写和索拉里斯星的描写都十分出色，在一定程度上缓解了阅读的枯燥。</p></li><li><p><a href="https://book.douban.com/subject/26827211/">小北野武</a>是导演北野武的童年生活记录，同时也亲自手绘了插图。北野武的真诚，诙谐，充满童趣的特点在这本书中表露无疑，以孩子天真无邪口吻说出的故事，表面让人发笑，背后实则充满辛酸之感，尤其读到最后“父亲的遗物”那里，看到北野武老爸叫菊次郎，突然觉得有点抑郁~。书里的插画我也上传到<a href="https://www.douban.com/photos/album/1686213156/?m_start=0">豆瓣相册</a>了。</p></li><li><p><a href="https://book.douban.com/subject/26863095/">素描的艺术：席勒</a>这本书是我在图书馆找书时无意发现的，看到书名时翻了一下，非常惊喜，国内有关埃·贡席勒作品介绍的书籍似乎不多，这本作品集编排得很用心，就借了出来。此外，前几年有部关于他的电影<a href="https://movie.douban.com/subject/26421474/">埃贡·席勒：死神和少女</a>，感兴趣可以看看。埃贡·席勒是个很有艺术天赋的艺术家，但是画作不走寻常路，人物通常瘦骨嶙峋，不符合正常规律的细长，大多都是反映内在世界得敏感，孤独，暧昧，神经质等，作品风格好像叫立体解构主义或表现主义？他也有很多自画像，评论家认为其有着明显的自恋和自我剖析倾向。作为作品集，自然文字内容会少很多，主要是不做二次加工展示给读者，让其自己去感受自己所看到的内容。书中大部分作品传到了我的<a href="https://www.douban.com/photos/album/1686395459/">豆瓣相册</a>上。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E5%9F%83%E8%B4%A1%E5%B8%AD%E5%8B%921.jpg" alt="埃贡·席勒作品"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E5%9F%83%E8%B4%A1%E5%B8%AD%E5%8B%922.jpg" alt="埃贡·席勒自画像"></p><ul><li><p><a href="https://book.douban.com/subject/30257644/">念书还是工作，这是一个问题</a>是法国一位女博士根据自己的经历画出的漫画故事。虽然是文学博士，但是很真实了，特别是在无穷的资料和方向中不断摸索，在碰壁，消沉，以及自我安慰中挣扎，有时还不得不面对社会和家庭的一些压力……在理工科界也有一本phd博士写的书，叫”<a href="http://pgbovine.net/PhD-memoir/pguo-PhD-grind.pdf">the phd grind</a>”。读不读博这个问题，感觉好难回答，那些读过了的人和没迈进去步子的人，感觉精神上应该有很大不同吧～或许那些有心得人会在读博期间不断地审视自己吧。</p></li><li><p><a href="https://book.douban.com/subject/30358084/">线条：斯坦伯格的世界</a>是漫画家斯坦伯格的一部作品集，这也是我偶然在图书馆发现的一本书。斯坦伯格的线条漫画作品简洁机智，有的讽刺意味很强，有的妙趣横生。他也曾经为杂志”New Yorker“作过不少次封面插画，在国外知名度很高。原书收集的作品比较多，我从书里挑了一些，放在了<a href="https://www.douban.com/photos/album/1686466375/">豆瓣相册</a>里。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E7%B4%A2%E5%B0%94%E6%96%AF%E5%9D%A6%E4%BC%AF%E6%A0%BC.jpg" alt="斯坦伯格作品"></p><ul><li><a href="https://book.douban.com/subject/27154489/">蓝色小药丸</a>是一部讲述HIV携带者相爱故事的漫画，作者画风凌厉，内容却细腻感人。难以想象，这样的事会如何发生在自己身上。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%93%9D%E8%89%B2%E5%B0%8F%E8%8D%AF%E4%B8%B8.jpg" alt="蓝色小药丸部分内容"></p><ul><li><a href="https://book.douban.com/subject/26597979/">梁山伯与祝英台</a>是一部似皮影戏般的绘本，当初从多抓鱼凑单买的，薄薄的一本，可以拿来收藏。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E6%A2%81%E5%B1%B1%E4%BC%AF%E4%B8%8E%E7%A5%9D%E8%8B%B1%E5%8F%B0.PNG" alt="梁山伯与祝英台插图"></p><ul><li><a href="https://book.douban.com/subject/25982252/">蝙蝠侠：致命玩笑</a>。在凤凰叔“Joker”资源未出来之前解渴用的。</li><li><a href="https://book.douban.com/subject/26930483/">英国插画师</a>里面介绍了10位不同风格的英伦插画师，有卡通的，也有成人暗黑的。当中有位Aubrey Beardsley(奥伯利·比亚兹莱)曾是奥斯卡·王尔德的情人，曾为其作品莎乐美绘制插图，带有日本浮世绘风格，算是这10位插画师当中风格最与众不同的一位，可惜英年早逝，20几岁就陨落了。此外，奥伯利在英国<a href="https://www.bl.uk/collection-items/the-yellow-book">the yellow book</a>期刊中的插画作品也非常经典，我之前还专门google找到了几期数字化的pdf，现在不知道链接存哪而去了/_\。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E5%A5%A5%E4%BC%AF%E5%88%A91.jpg" alt="书中有关奥伯利的介绍"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E5%A5%A5%E4%BC%AF%E5%88%A92.jpg" alt="奥伯利作品"></p><p>除了奥伯利之外，Arthur Rackham(亚瑟·拉克姆)的童话插画作品也十分梦幻，甚至带有些诡异。他为《爱丽丝梦游仙境》和《安徒生童话》绘制的插画神秘阴暗，带有一丝哥特风，风格十分独特。后来我在网上搜索，希望能翻到他的数字化作品，可惜童话插画作品太多，不如奥伯利的那么好找，只好放弃。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E6%8B%89%E5%85%8B%E5%A7%86.jpg" alt="拉克姆及其童话插画作品"></p><p>这本书的人物介绍和作品选取都很棒，但我还是没看过瘾，要是编辑能放多点图就好了。书中提到的10位插画师中我个人比较喜欢Kate Greenaway(凯特·格林纳威 )，Heath Robinson(希思·罗宾逊)，Edward Lear(爱德华·李尔)， Aubrey Beardsley(奥伯利·比亚兹莱)，John Millais(约翰·米莱斯)，Arthur Rackham(亚瑟·拉克姆)和Walter Crane(沃尔特·克莱恩)这7位，我也挑选了他们的一些作品放在<a href="https://www.douban.com/photos/album/1686128240/?m_start=36">豆瓣相册</a>。</p><ul><li><a href="https://book.douban.com/subject/26904293/">素描的艺术：毕加索</a>这本书与席勒那本同属一个系列。由于内容限制在素描，所以很多作品都是平时不常见的。这本书展示了毕加索自己平常生活中的速写，寥寥几笔，形神兼备，让我感觉比那些挂在博物馆里的大作更有温度和情感。美中不足的是，作品排列似乎没有按照一定的顺序，比较杂乱，也缺乏一定的说明。部分作品上传到了<a href="https://www.douban.com/photos/album/1686128240/?m_start=18">豆瓣相册</a>。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E6%AF%95%E5%8A%A0%E7%B4%A2.jpg" alt="毕加索素描作品"></p><ul><li><a href="https://book.douban.com/subject/30304849/">拍电影时我在想的事</a>是日本导演是枝裕和的随笔集，交织了电影拍摄历程，人生感悟。是枝裕和导演和村上春树的随笔风格很像，真诚又细腻，谦逊又不乏思考，没任何架子，感觉与这样的人聊天不仅很舒服，而且还会获益良多。不过说来惭愧，是枝裕和的影视作品看得不多，因此这本书也就是快速翻阅般地看完了，对他的作品有些了解之后再去看这本书或许阅读体验会更好。</li><li><a href="https://book.douban.com/subject/30228730/">观山海</a>是杉泽根据《山海经》所画的异兽部分。杉泽是微博上很火的手绘古风神话鬼怪艺术家，托L同学强烈推荐，我才开始慢慢了解到此类画风的作品和艺术家。总的来说，第一次看很新鲜，色彩很美，梦幻又诡谲。但是看多了有些审美疲劳，尤其是人物的脸部造型，觉得没什么变化，可能是一种想象和代表吧。同样，我也拍了些放在<a href="https://www.douban.com/photos/album/1688487996/">豆瓣相册</a>上。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%A7%82%E5%B1%B1%E6%B5%B7.jpg" alt="随意放几张"></p><ul><li><a href="https://book.douban.com/subject/26727997/">Neural Network and Deep Learning</a>和魏秀参的<a href="https://book.douban.com/subject/30381203/">卷积神经网络</a>是当初准备实习面试补的书，写得都还可以，不过魏秀参博士那本不太适合刚入门卷积神经网络的小白看。</li><li><a href="https://book.douban.com/subject/10750155/">数学之美</a>应当属于理工科内，尤其是是计算机专业圈内久负盛名的一本书，主要是以NLP自然语言处理，搜索引擎算法等讲述一些具体数学算法在工程中的实际应用。没有研究过相关领域，作为科普读物看看。</li><li><a href="https://book.douban.com/subject/26695174/">灯塔</a>是一本讲述孤独忧伤的“畸形儿”困在灯塔几十年，渴望自由和情感的漫画故事，故事很短很有想象力，像电影分镜一般，推荐阅读。其实19年也有一部电影也叫<a href="https://movie.douban.com/subject/30143336/">灯塔</a>（罗伯特·帕丁森和威廉·达福主演，导演之前的<a href="https://movie.douban.com/subject/26276364/?from=subject-page">女巫</a>我也很喜欢），不过故事截然不同，要暗黑惊悚得多，目前还没来得及看，在此不再多说啦。</li><li><a href="https://book.douban.com/subject/26780984/">城市与狗</a>算是今年读到的比较惊喜的一部小说。因为APP MONO中的一个海报特地从图书馆借来，阅读之前也并不知道是结构主义小说，刚开始的时候没有准备，确实被混乱的时间线叙述，不同的人物视角搞得有点蒙，直到第一部分一半，整体故事脉络就慢慢缕清了。后面的阅读体验极佳，略萨的对话和心理描写别具一格，画面感很强，读者自己很容易就代入进去，成为旁观者或主角，很难想象20出头的略萨就已经有如此高的写作技巧。“我曾有过二十岁，我也不同意任何人说那是最美好的年华。”这句话算是全书最无奈的最忧伤的精髓了。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E5%9F%8E%E5%B8%82%E4%B8%8E%E7%8B%97.jpg" alt></p><h2 id="音乐-电影-公开课以及其他">音乐，电影，公开课以及其他</h2><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E9%9F%B3%E4%B9%90%E4%B8%93%E8%BE%91.png" alt>19年听的除了一般的流行歌曲之外，主要是古典和爵士。听古典是由于一方面可以培养和提升个人品味，另一方面是可以放松舒缓心情，帮助大脑思考；听爵士呢主要是之前受村上春树和伍迪·艾伦的影响，自己也很喜欢爵士乐营造出的那种氛围，那种音乐里的情感和故事性，很能激发人的想象力。</p><p>目前两种类型的音乐领域我都处于泛听阶段，当然也有一些比较喜好的作曲家和演奏家等，像德彪西，萨蒂，肖斯塔科维奇，鲁宾斯坦，查里贝克，路易斯·阿姆斯特朗，Karen Souza等。接下来还会多去探索，等到了一个适合的饱和点，然后再去慢慢整理自己在这方面的喜好，同时我也在看耶鲁大学<a href="https://www.bilibili.com/video/av16809187?from=search&amp;seid=10378298280102696019">聆听音乐</a>这门公开课，当作一个参考的鉴赏指导，希望明年总结时也能给其他想入门的人一些听的建议。</p><p>观影上，19年看的总量不多，主要是当时的爆米花商业片加上一些偶尔看到的冷门片。以前都是专门找自己喜欢的口碑片来看，现在基本都是想找些没什么情感压抑的爽片，可能是19年比较劳累了吧:-}。电视剧方面倒是看了好几部韩剧，比如《春夜》，《我的鬼神大人》等，另外还有一部木村拓哉的《东京大饭店》，看完之后学做菜的热情猛地高涨起来，木村拓哉的”带货能力“是真的强:-D。美剧里由于《权力的游戏》最终季和《黑镜》第五季都让我很失望，后面就没再看其他的了。</p><p>我从自己的观影记录中挑出了10佳，其中昆汀的《好莱坞往事》是最喜欢的，而且还非常喜欢前面很长时间的絮絮叨叨，后面的”曼森杀人案“高潮也是一贯的昆汀式B级风格；马丁·斯科塞斯的《爱尔兰人》也还可以，更像是一曲挽歌，满怀忧伤唏嘘之感；凤凰叔的《小丑》中规中矩，凤凰叔的表演加上剧本上的点到为止成就了这部高分片；最惊艳的当属于基努·李维斯的《John Wick 3》了，续集不失前作的水准，反而让故事中的杀手世界变得越来越丰满…</p><ul><li><a href="https://movie.douban.com/subject/27087724/">好莱坞往事</a></li><li><a href="https://movie.douban.com/subject/26909790/">疾速备战</a></li><li><a href="https://movie.douban.com/subject/27119724/">小丑</a></li><li><a href="https://movie.douban.com/subject/33415943/">我失去了身体</a>   比较意识流的一部法国动画片</li><li><a href="https://movie.douban.com/subject/27138615/">自卫的艺术</a>   一部诡异黑色片，如果不是卷西，效果可能会大打折扣</li><li><a href="https://movie.douban.com/subject/30165034/">昨日奇迹</a>    纪念致敬披头士乐队</li><li><a href="https://movie.douban.com/subject/6538866/">极速车王</a>    改编自福特与法拉利的勒芒大赛竞争，没有落入俗套的热血，也顺带讽刺了系统和机构以及对其的反抗</li><li><a href="https://movie.douban.com/subject/4185834/">丧失乐园2</a>   时隔10年的续作，一如既往的脑洞大开</li><li><a href="https://movie.douban.com/subject/27089612/">纽约的一个雨天</a>  伍迪·艾伦的近作，甜茶饰演的男主彷佛就是老爷子本尊</li><li><a href="https://movie.douban.com/subject/6981153/">爱尔兰人</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E7%94%B5%E5%BD%B1.jpg" alt></p><p>戏剧方面，除了一如既往地搜寻NT Live的资源，一边也慢慢探索其他类型的舞台剧，比如音乐剧，芭蕾舞剧等，不过19年还没完整看过其中的任何一部。对于舞台剧，要想有好的观感体验，获得共情能力，是必须要去现场的，可惜资源和机会有限，能偶尔盼到一两部电子拷贝也是极好的。</p><p>听公开课是19年下半年开展的一个计划，每天都拿出30min~60min的时间花在一些有意义的课程上，不管是艺术类，理工科类，不管是通识概括还是深入讲解都可能拿来学习。但是自己的自律性还不够，没能每天坚持，尤其是年末那段时间基本属于自我放纵阶段了，20年里这个计划要得严格执行点才行。</p><ul><li><a href="https://www.bilibili.com/video/av68107287?from=search&amp;seid=15101072632370554317">梁老师的爱情课</a>  这个是一席 万象组织的一个演讲，内容比较充实，聊的也很透彻，需要观众在课后反复思考。里面的很多价值观我是持赞同态度的，然而爱情是人类中最复杂的问题之一，感性的，理性的手段都不一定能很好处理其中的纠葛联系。这个课更多地是让我看到了爱情中一些行为背后的人性因素，权当一种拓展知识面的材料了。</li><li><a href="https://www.bilibili.com/video/av18102433">戏剧入门-张先</a>  这个是在B站上发现的为数不多的国内戏剧入门公开课之一，是中央戏剧学院开设的。课程内容个人觉得不是很充足，学习体验不是很好，推荐后面Crash Course中的剧院公开课系列。</li><li><a href="https://www.bilibili.com/video/av21376839">Crash Course-Computer Science</a>  看的第一门Crash Course公开课，后面准备把整个系列中自己喜欢的系列都刷一遍。这门课我看很多微信公众号都推送了，内容上确实做得很用心，字幕组<a href="https://github.com/1c7/crash-course-computer-science-chinese">翻译</a>的也很棒。</li><li><a href="https://www.bilibili.com/video/av13762839">Crash Course-Philosophy</a>  课程基本上是以提出哲学问题形式展开的，看完之后可能需要看一些书籍辅助理解（这里有一个推荐的<a href="https://www.zhihu.com/question/19588342/answer/786026336">知乎回答</a>)，然后再去找自己感兴趣的哲学家的专著阅读。</li><li><a href="https://www.bilibili.com/video/av19463816?from=search&amp;seid=1384032167897391415">Crash Course-Theatre</a>  这个课看了一大半了，字幕组还没翻译完，内容属于通识类，老师的讲说风格有种”学术幽默“，挺有趣，只不过东西太多，记不住，有点伤脑筋@_@。</li></ul><p>我非常频繁的找有关戏剧的东西看是因为它这种融合了人性的考察、无处不在的想象力、轮回式的角色扮演的艺术形式让我深深着迷，我越深入其中，越发现它其实探讨的是人的命运问题，通过把虚构的/非虚构的人的过去、现在、和未来展现在观众面前，让我们发现生活的真相。</p><p>什么是戏剧：</p><blockquote><p>Percy Bysshe Shelley  The Cenci, ACT1. SCENE1</p><p>The highest moral purpose aimed at in the highest species of the drama, is the teaching the human heart, through its sympathies and antipathies, the knowledge of itself.</p></blockquote><p>亚里士多德关于悲剧的描述：</p><blockquote><p>An imitation of an action that is serious, complete, and of a certain magnitude; in language embellished with each kind of artistic ornament, the several kinds being found in separate parts of the play; … in the form of action, not of narrative; through pity and fear effecting the proper purgation.</p></blockquote><p>这些公开课在看的时候我是没有记笔记的，后来发现几乎全都忘光了，而且看的时候难免会分心走神，因此还是推荐做一些总结，加强记忆和理解，否则看公开课就成了一种形式了，起不到扩展知识面的作用。</p><h2 id="摄影捕捉笔记">摄影捕捉笔记</h2><p>19年的摄影陷入了瓶颈，同时拍摄热情也大大减少了。在写这一版块之前，我翻了翻手机相册，19年的作品少得可怜，更何况在这些片子之中基本上没有满意的作品。专门出去街拍的情况几乎没有，只是有时候碰巧出去会携带下GR II，因此相机SD卡里面的照片就更糟糕了。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E7%9B%B8%E6%9C%BA.jpg" alt="对于器材的热忱远比拍摄本身要多得多。19年在B站看的相机测评视频占据了总量的一大半，虽然我极力抑制，但那种狂热很快又会卷土重来"></p><p>为了寻求突破，我开始陆续看一些大师的摄影作品，而且尽量按照他们出版的摄影集的顺序看，毕竟目前还买不起纸质摄影出版物。从森山大道，到荒木经惟，再到深濑昌久，从薇薇安，罗伯特·卡帕，到罗伯特·弗兰克，再到亚历克斯·韦伯，平卡索夫，Stephen Gill，只要是有照片看出了某种意义，就会专门花时间找来看看该摄影师的作品集。下半年的时候，渐渐在B站上发现了一些“宝藏UP主 ”，他们有的将自己的作品剪成视频，有的讲解自己的拍摄心得和后期技巧，有的介绍摄影大师和他们的作品集，还有的是有了很高摄影鉴赏水平和摄影理念，直接在视频中讲解属于自己的摄影笔记，这些对我都有或多或少的帮助，非常感谢他们的分享。</p><p>回到我自己的摄影作品上来，拍景的明显多于拍人的，实际上，我个人一开始是倾向于拍人的，尤其是人景交织的作品对我最具有吸引力，人的独特性会让景更加生动化，富有情感。不过慢慢地，我不再执着于此，在开始拍之前，我不应该对将要拍到的内容做任何预期的规划，我觉得那样会破坏掉我拍摄时候的“捕捉力”，尤其对是任何未知的，不可预知的细节的捕捉，这些细节不局限于任何物和人，不局限于何种情绪，何种故事，恰是由于这些细节让观者解读到了属于他们每个人的独特的世界，成就了作品的魅力。</p><p>诚然，我私以为摄影理念应该会随着自己的拍摄历程的积累而不断地发生进化，这种进化可能是完善性的，也可能是转变性的，具体可能会取决于人的想象力。等到写20年总结的时候，或许自己又是另一番说法了。</p><p>我挑了几张自己的图片，基本上都是19年拍的，少数几张是19年之前的。自己的作品数量不多，质量也不高，希望20年能作为一个新的起点，多多去实践和思考。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%87%AA%E6%91%841.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%87%AA%E6%91%842.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%87%AA%E6%91%843.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%87%AA%E6%91%844.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%87%AA%E6%91%845.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%87%AA%E6%91%846.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%87%AA%E6%91%847.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%87%AA%E6%91%848.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%87%AA%E6%91%849.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%87%AA%E6%91%8410.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%87%AA%E6%91%8411.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%87%AA%E6%91%8412.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E8%87%AA%E6%91%8413.jpg" alt></p><h2 id="结语">结语</h2><p>其实我在写总结之前，一直在想该取什么题目，由于第一次这样写年终总结，很多事情拿捏不准，有点小紧张。“漫长的告别”这个名字来源于美国侦探小说家雷蒙德·钱德勒的同名小说，书里面有句经典的话是“To say goodbye is to die a little.&quot;，不过我取这个名字没有这么重的情怀，也没有这么哀伤，我只是觉得19年让我明白了很多事情，真正地认识到”这个充满偏见的，残酷的真实的世界“和渺小的自己，所以我想以此为人生的一个分割线，整理一下，告别20多年的过去，然后继续下一段路。</p><p>现在2020年已经过去一个月了，我希望这年可以：</p><ul><li><p>把自己未来3，4年的路明确下来，不管是读博还是工作，都希望能追求到一个满意的结果；</p></li><li><p>现场看一次音乐会和戏剧或者舞台剧；</p></li><li><p>好好写一篇论文；</p></li><li><p>多多看书，看不同类型的书，开卷有益；</p></li><li><p>坚持摄影，日常摄影；</p></li><li><p>多陪陪、关心身边爱我的人；</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;搭博客的时间大概只有一年，当初是因为受到&lt;a href=&quot;http://pluskid.org/&quot;&gt;pluskid网站&lt;/a&gt;和博客的影响，觉得做一个有趣的人，学习自己想了解的，放淡自己的心态是是每天很重要的事，因此想记录下来，有些规划，也好作为充实自己的见证，搁以前每年都来一个总结这件事我是不怎么做的。求学生涯没有结束，每年都是反复地上课，做项目，似乎都是浑浑噩噩度过，科研中的磕碰和一些不甘心也会时不时消磨自己的意志，让自己在怀疑，焦虑，麻木，强迫的交织中蹒跚着。我之前也知道很多励志结论，他们说的都很对，但每个人的生活总是悲喜交加的，而大多数情况下都是在平平无奇中暗生悲戚，羁绊越多的人似乎悲戚越浓。&lt;/p&gt;
&lt;p&gt;2019年的寒假里，我翻看了很多&lt;a href=&quot;http://freemind.pluskid.org/&quot;&gt;pluskid的博客&lt;/a&gt;内容，其中以年终总结最多。一开始我是被博主优秀的履历所吸引，后来在那些博客里我读到了对于生活细节的热爱，以及对于艺术，真理和其他人类活动的浓郁兴趣，真诚，质朴同时又很能温暖人，所以算是“始于履历，陷于才华”吧！（厚脸皮地说，有一种惺惺相惜之感）。罗曼罗兰在《米开朗琪罗传》中有句很出名的话：&lt;em&gt;“Il n’ya qu’un héroïsme au monde : c’est de voir le monde tel qu’il est et de l’aimer.（世界上只有一种真正的英雄主义，那就是认识生活的真相后依然热爱它）”&lt;/em&gt;，我开始渐渐明白其中的血肉故事，目前虽然谈不上热爱，但可以说是慢慢从走出到走入，慢慢进入状态。&lt;/p&gt;
&lt;p&gt;接下来，我想还是先从自己的学校科研生活讲起，然后再去讲讲自己看过的书，去过的地方，听过的音乐，拍过的照片，看过的电影等，一步步勾勒出自己的故事，就像是在索拉里斯星上模拟出的记忆花园，感想估计无法给出多少，倒是想能抓住几分情绪便好。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/Summaryofthisyear-1/%E7%94%B5%E5%BD%B1%E5%A4%A7%E5%B8%88%E5%89%A7%E7%85%A7.jpg&quot; alt=&quot;电影&#39;大师(the Master)&#39;剧照&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="纪录与总结" scheme="http://densecollections.top/categories/%E7%BA%AA%E5%BD%95%E4%B8%8E%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="summary" scheme="http://densecollections.top/tags/summary/"/>
    
    <category term="computer vision" scheme="http://densecollections.top/tags/computer-vision/"/>
    
    <category term="memory" scheme="http://densecollections.top/tags/memory/"/>
    
    <category term="learning" scheme="http://densecollections.top/tags/learning/"/>
    
    <category term="movies" scheme="http://densecollections.top/tags/movies/"/>
    
    <category term="reflection" scheme="http://densecollections.top/tags/reflection/"/>
    
  </entry>
  
  <entry>
    <title>RCNN-series-in-object-detection(续)</title>
    <link href="http://densecollections.top/posts/RCNNseries-2/"/>
    <id>http://densecollections.top/posts/RCNNseries-2/</id>
    <published>2020-01-10T02:51:19.000Z</published>
    <updated>2022-09-09T03:31:15.197Z</updated>
    
    <content type="html"><![CDATA[<h2 id="about">About</h2><p>自Faster R-CNN后，基于深度学习的目标检测框架大致形成，且精度也较为不错。在这之后，围绕着对图像数据更深层次理解，以及根据现有结构进行改进成为了一个主流点。</p><p><a href="https://arxiv.org/abs/1611.10012">Speed/accuracy trade-offs for modern convolutional object detectors</a></p><p><a href="https://arxiv.org/abs/1905.05055">object detection in 20 years: a survey</a></p><p><a href="https://arxiv.org/abs/1912.05190">IoU-uniform R-CNN: Breaking Through the Limitations of RPN</a></p><p><a href="https://arxiv.org/pdf/1909.02466v2.pdf">https://arxiv.org/pdf/1909.02466v2.pdf</a></p><h2 id="r-fcn"><a href="https://arxiv.org/abs/1605.06409">R-FCN</a></h2><h3 id="introduction">Introduction</h3><p>内容有参考：</p><ul><li><a href="https://arleyzhang.github.io/articles/7e6bc4a/">blog1</a></li></ul><span id="more"></span><h3 id="content">Content</h3><h2 id="fpn"><a href="https://arxiv.org/abs/1612.03144">FPN</a></h2><h3 id="introduction">Introduction</h3><p>Feature Pyramid Networks(FPN)考虑到了卷积神经网络中各个尺度特征图的作用，认为像Fast R-CNN和Faster R-CNN这样的目标检测网络只用了一个特征图去来做RoI 和搜寻proposal，不一定能很好地处理全部尺寸的物体，虽然这种方式是为了speed-acc之间的trade off。作者认为，网络越深层产出的特征图往往语义信息越高，但是位置信息比较模糊，对小目标检测来说不太好；浅层的特征图提取出来的特征都是比较低级的边缘，纹理信息，但是分辨率好，位置信息得到了保留，因此将这些特征图结合起来，充分利用到高层语义信息，同时也不丢掉位置信息，应当能很大程度上提高检测的精度和鲁棒性。</p><p>博客内容有参考：</p><ul><li><a href="https://vision.cornell.edu/se3/wp-content/uploads/2017/07/fpn-poster.pdf">FPN在CVPR的poster</a></li><li><a href="https://zhuanlan.zhihu.com/p/34144226">blog1</a>, <a href="https://www.jiqizhixin.com/articles/2017-07-25-2">blog2</a>, <a href="https://zhuanlan.zhihu.com/p/61536443">blog3</a></li></ul><h3 id="content">Content</h3><p>为了让各个尺寸的物体都能很好的检测到，以往的工作提出了图像金字塔，利用不同大小的图像尺寸进行滑窗，到了深度学习时代，直接通过神经网络输出的高层特征图，进行对应特征上的检测分类，之后考虑到尺度问题，开始挑选网络中产出的几个level的feature  map，分别进行检测，然后合并筛选给出最后的结果。FPN认为，既然检测既需要高层的特征便于分类和统筹全局观念，又需要特征图具有一定的分辨率去定位物体的图像位置，那么应该想个办法将这两个重要信息结合起来。但是在网络的前向传播中，这两者是矛盾的，低层的特征图特征抽象度不够，高层的特征图物体分辨率过低。我想，作者应该是受到当时resnet等跳级连接和FCN，U-Net等语义分割模型的启发，通过下采样提取高级特征，上采样恢复尺度，同时侧级连接补充位置信息，然后在每个上采样的特征图上进行检测来覆盖到各个物体（这一点借鉴了SSD）。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-2/various_pyramid_ways_in_cv.PNG" alt="目标检测中的金字塔模型"></p><p>如果没有每个特征图的预测，乍看就是FCN的经典结构。不过FPN的侧重点是为了结合高级语义特征和位置信息，因此加了一些额外的卷积操作，让网络在梯度下降中去focus这一点。下采样过程属于正常的网络操作，上采样时每个特征图进行2倍放大（<strong>最近邻插值</strong>，非转置卷积），当然这个2倍是根据你的下采样倍数来的，一般都是2倍，然后侧向对应的不是直接加过来（FCN），也不是叠操作（U-Net），而且先用个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1 \times 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>卷积处理下采样的特征图，然后加在一起，最后再做个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">3 \times 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>的卷积。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1 \times 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>的卷积是为了减少通道数（上采样的通道数是固定的），否则不能相加，同时我想可能也是去提取一下位置信息，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">3 \times 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>的卷积是为了处理一下加在一起后的特征图的混叠效应，提取出两者的有用信息。</p><p>值得一提的是，作者在论文中也说了，按照解决问题的思想，这样的金字塔形式应当是最简单的，没有加入任何其他的复杂技巧，实验效果证明效果也足够好，简单又有效。</p><blockquote><p>Simplicity is central to our design and we have found that our model is robust to many design choices. We have experimented with more sophisticated blocks (e.g., using multilayer residual blocks [16] as the connections) and observed marginally better results. Designing better connection modules is not the focus of this paper, so we opt for the simple design described above.</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-2/FPN_architecture.PNG" alt="FPN的结构示意"></p><p>实验方面，FPN主要针对RPN和Fast R-CNN进行，通过ablation study论证了FPN结构的有效性，同时结构之间的各个部件都是必要的。其中 RPN 和 Fast RCNN 分别关注的是召回率和正检率，在这里对比的指标分别为 Average Recall(AR) 和 Average Precision(AP)，分别对比了不同尺度物体检测情况。</p><p>以resnet为例，不管第一次feature map的缩小（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>7</mn><mo>×</mo><mn>7</mn></mrow><annotation encoding="application/x-tex">7 \times 7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span></span></span></span>的卷积），用后面的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">{</mo><msub><mi>C</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>C</mi><mn>3</mn></msub><mo separator="true">,</mo><msub><mi>C</mi><mn>4</mn></msub><mo separator="true">,</mo><msub><mi>C</mi><mn>5</mn></msub><mo fence="true">}</mo></mrow><annotation encoding="application/x-tex">\left\{ C_{2}, C_{3}, C_{4}, C_{5} \right\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">}</span></span></span></span></span>。对RPN来说，只用了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">C_{4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>去生成预选框，然后利用pyramid of anchor去搜区域，由于FPN已经有了多尺度的作用，因此每个上采样的特征图中，会根据其特点设置一个固定size的anchor area，anchor aspect ratio还是保持[0.5, 1, 2]不变。为了照应到RPN中的512大小的anchor，FPN实验时多加了一个特征图（在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mn>5</mn></msub></mrow><annotation encoding="application/x-tex">P_{5}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>上下采样2倍），对应的区域大小和特征图level分别是：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">{</mo><mn>3</mn><msup><mn>2</mn><mn>2</mn></msup><mo separator="true">,</mo><mn>6</mn><msup><mn>4</mn><mn>2</mn></msup><mo separator="true">,</mo><mn>12</mn><msup><mn>8</mn><mn>2</mn></msup><mo separator="true">,</mo><mn>25</mn><msup><mn>6</mn><mn>2</mn></msup><mo separator="true">,</mo><mn>51</mn><msup><mn>2</mn><mn>2</mn></msup><mo fence="true">}</mo></mrow><mo>⟷</mo><mrow><mo fence="true">{</mo><msub><mi>P</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>P</mi><mn>3</mn></msub><mo separator="true">,</mo><msub><mi>P</mi><mn>4</mn></msub><mo separator="true">,</mo><msub><mi>P</mi><mn>5</mn></msub><mo separator="true">,</mo><msub><mi>P</mi><mn>6</mn></msub><mo fence="true">}</mo></mrow></mrow><annotation encoding="application/x-tex">\left\{ 32^{2}, 64^{2}, 128^{2}, 256^{2}, 512^{2} \right\} \longleftrightarrow \left\{ P_{2}, P_{3}, P_{4}, P_{5}, P_{6} \right\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">{</span></span><span class="mord">3</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">6</span><span class="mord"><span class="mord">4</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord"><span class="mord">8</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord"><span class="mord">6</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">5</span><span class="mord">1</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">}</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⟷</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">}</span></span></span></span></span>，用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span>代表上采样的特征图，便于区分下采样的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span>。从设置里可以看出，大特征图里找小物体，小特征图里找大物体。</p><p>实验Fast R-CNN时，固定FPN+RPN提取的proposal结果，在其中也加入FPN分别在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">{</mo><msub><mi>P</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>P</mi><mn>3</mn></msub><mo separator="true">,</mo><msub><mi>P</mi><mn>4</mn></msub><mo separator="true">,</mo><msub><mi>P</mi><mn>5</mn></msub><mo fence="true">}</mo></mrow><annotation encoding="application/x-tex">\left\{ P_{2}, P_{3}, P_{4}, P_{5} \right\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">}</span></span></span></span></span>中找物体做RoI Pooling，一样的，对于大尺度的RoI就用小的特征图，小尺度的RoI就用大的特征图。为了安排每个RoI Pooling尺度对应的特征图，作者给出如下公式：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mrow><mo fence="true">⌊</mo><msub><mi>k</mi><mn>0</mn></msub><mo>+</mo><msub><mo><mi>log</mi><mo>⁡</mo></mo><mn>2</mn></msub><mo stretchy="false">(</mo><msqrt><mrow><mi>w</mi><mi>h</mi></mrow></msqrt><mi mathvariant="normal">/</mi><mn>224</mn><mo stretchy="false">)</mo><mo fence="true">⌋</mo></mrow></mrow><annotation encoding="application/x-tex">k=\left\lfloor k_{0}+\log _{2}(\sqrt{w h} / 224)\right\rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">⌊</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981095em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">h</span></span></span><span style="top:-2.941095em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.058904999999999985em;"><span></span></span></span></span></span><span class="mord">/</span><span class="mord">2</span><span class="mord">2</span><span class="mord">4</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">⌋</span></span></span></span></span></span></span></p><p>其中，224是ImageNet的标准输入尺寸，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mn>0</mn></msub><mo>=</mo><mn>5</mn></mrow><annotation encoding="application/x-tex">k_{0} = 5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span></span></span></span>是基准值，代表最后一个特征图，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo separator="true">,</mo><mi>h</mi></mrow><annotation encoding="application/x-tex">w, h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span></span></span></span>分别代表RoI区域（RPN+FPN给的原图的proposal）的宽和高。假设RoI大小是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>112</mn><mo>×</mo><mn>112</mn></mrow><annotation encoding="application/x-tex">112 \times 112</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">2</span></span></span></span>，那么<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mn>5</mn><mo>−</mo><mn>1</mn><mo>=</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">k=5-1=4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span></span></span></span>，就在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">P_{4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>特征图上找，做RoI Pooling。一般来说proposal大小不固定，所以应该取整处理。</p><p>因为resnet的Conv5也作为特征金字塔的一部分，而原先的Fast R-CNN和Faster R-CNN在RoI Pooling后面才接上Conv5继续提取特征，所以论文简单的加了两个1024维的fc层在分类器和回归器之前，代替一下原先Conv5的工作。</p><p>最后在加入FPN的Faster  R-CNN中进行参数共享，检测精度也得到了一定的提升。具体实验结果直接看图，不再赘述。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-2/FPN_FasterRcnn.png" alt="图来自：https://github.com/unsky/FPN"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-2/FPN_experiments.PNG" alt="部分实验结果"></p><h3 id="conclusion">Conclusion</h3><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-2/FPN_QA.PNG" alt="FPN在CVPR现场QA"></p><p>FPN的贡献思想在于向上采样，融合了特征信息和位置信息，而且简洁有效。在这之后，何恺明率先利用FPN实现了Mask R-CNN，一统检测和实例分割，斩获马尔奖。现在FPN也被广泛使用，成为检测的必备组件（R-FCN由于自身设计缘故，无法加入FPN）。</p><p>但是，FPN设计中的上采样和侧向连接，其实主要是给小目标检测提供了帮助，因为主要是引入位置信息，然后放大特征图（实验结果也说明小目标检测精度提升多）。对于大目标来说，顶层特征图的高级语义固然重要，位置信息肯定还是没有底层特征图的多的，因此可以对一开始网络产出的浅层特征图跳级连接到顶层特征图，类似下面的结构（<a href="https://arxiv.org/abs/1803.01534">PANet</a>）：</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-2/FPN_for_bigobject.jpg" alt="FPN针对大物体检测改进"></p><h2 id="retinanet">RetinaNet</h2><p><a href="https://zhuanlan.zhihu.com/p/133317452">https://zhuanlan.zhihu.com/p/133317452</a></p><h2 id="mask-r-cnn">Mask R-CNN</h2><p><a href="https://arxiv.org/pdf/1912.04488.pdf">SOLO: Segmenting Objects by Locations</a></p><p><a href="http://deeplearning.csail.mit.edu/instance_ross.pdf">http://deeplearning.csail.mit.edu/instance_ross.pdf</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;about&quot;&gt;About&lt;/h2&gt;
&lt;p&gt;自Faster R-CNN后，基于深度学习的目标检测框架大致形成，且精度也较为不错。在这之后，围绕着对图像数据更深层次理解，以及根据现有结构进行改进成为了一个主流点。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://arxiv.org/abs/1611.10012&quot;&gt;Speed/accuracy trade-offs for modern convolutional object detectors&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://arxiv.org/abs/1905.05055&quot;&gt;object detection in 20 years: a survey&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://arxiv.org/abs/1912.05190&quot;&gt;IoU-uniform R-CNN: Breaking Through the Limitations of RPN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://arxiv.org/pdf/1909.02466v2.pdf&quot;&gt;https://arxiv.org/pdf/1909.02466v2.pdf&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;r-fcn&quot;&gt;&lt;a href=&quot;https://arxiv.org/abs/1605.06409&quot;&gt;R-FCN&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;内容有参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://arleyzhang.github.io/articles/7e6bc4a/&quot;&gt;blog1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="论文阅读" scheme="http://densecollections.top/categories/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="computer vision" scheme="http://densecollections.top/tags/computer-vision/"/>
    
    <category term="deep learning" scheme="http://densecollections.top/tags/deep-learning/"/>
    
    <category term="object detection" scheme="http://densecollections.top/tags/object-detection/"/>
    
    <category term="semantic segmentation" scheme="http://densecollections.top/tags/semantic-segmentation/"/>
    
  </entry>
  
  <entry>
    <title>尝试远程控制Ubuntu服务器</title>
    <link href="http://densecollections.top/posts/controlLinuxserver/"/>
    <id>http://densecollections.top/posts/controlLinuxserver/</id>
    <published>2020-01-05T11:45:06.000Z</published>
    <updated>2022-09-09T03:28:23.403Z</updated>
    
    <content type="html"><![CDATA[<h2 id="about">About</h2><p>暑假实习用公司的显卡的经历很舒服，所以寒假回家之前，想在教研室的工作站上搭个ssh，方便回家也可以用显卡跑网络。但是自己对这方面知识不是很了解，尤其是端口映射之类的操作，所以导致外网登陆服务器的时候折腾了一点时间，最后勉强利用ngork进行了内网穿透。。。使用过程中发现，ngork似乎有些延迟，加上scp传文件问题（我是win利用git bash登Ubuntu服务器）一直没解决，还是放弃了ssh转战了teamviewer（还是有点香的。。）</p><span id="more"></span><h2 id="ssh">ssh</h2><p>我安装的时候没关心密匙之类的问题，也没去修改ssh 的config文件，直接在Ubuntu 18.04上安装openssh-server就好了。</p><p>在Ubuntu终端上输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get openssh-server</span><br><span class="line"># 启动ssh</span><br><span class="line">sudo service ssh start</span><br><span class="line"># 重启</span><br><span class="line">sudo service ssh restart</span><br><span class="line"># 查看有没有启动</span><br><span class="line">ps -aux | grep &#x27;&#x27;ssh&#x27;&#x27;</span><br><span class="line"># 关闭ssh</span><br><span class="line">sudo /etc/init.d/ssh stop  </span><br></pre></td></tr></table></figure><p>然后我在windows上打开git bash，输入：</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/controlLinuxserver/log_command.PNG" alt="登陆命令"></p><p><code>-p</code>代表端口，默认是22，如果需要修改可以去<code>/etc/ssh/sshd_config</code>修改（改过记得source一下生效），参考<a href="https://blog.mythsman.com/post/5d2d65fca2005d74040ef873/">blog1</a>和<a href="https://www.jianshu.com/p/7028e5fecf2b">blog2</a>。端口后面跟的是<code>uername@ip_of_server</code>，密码输入服务器用户名密码，如果和服务器处于一个局域网，你的windows是可以无缝登陆的。服务器的ip地址可以通过<code>ifconfig</code>查询。</p><p>但是只能在一个局域网登陆没什么用处。。我们需要随时随地登陆服务器，这时候就需要科普一些公网，内网，端口映射等知识，看得我也有点眼花…后来我就找了个比较简单的内网穿透方法，也没有自己买服务器降低延迟啥的，基本上按照<a href="https://zhuanlan.zhihu.com/p/60962957">blog3</a>的教程，去<a href="https://ngrok.com/">ngork</a>下载软件，然后解压，在输入命令<code>./ngork tcp 22</code>，这个<code>tcp 22</code>默认端口22。在<code>Forwarding</code>一行会出现地址（<code>0.tcp.ngrok.io</code> ）和端口号，同样地在git bash输入即可。</p><h2 id="teamviewer">Teamviewer</h2><p>没自己买服务器做内网穿透的结果就是卡！卡！延迟让我有点受不了，而且scp一直搞不到win上来，也懒得查是不是自己命令哪里错了。当然除了上面的ngork外还可以搞个VPN，让你的电脑连上服务器所在的网，然后就可以按照最开始的方式登陆和传输了，暑假实习的公司就是这么干的，不过他们有专人维护这块，稳定性以及文件传输速度都很快。</p><p>最后…</p><p>我还是转向了teamviewer，设置了固定密码。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/controlLinuxserver/teamviewer.PNG" alt="这延迟还能接受，传输速度也不赖，还要啥自行车..."></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;about&quot;&gt;About&lt;/h2&gt;
&lt;p&gt;暑假实习用公司的显卡的经历很舒服，所以寒假回家之前，想在教研室的工作站上搭个ssh，方便回家也可以用显卡跑网络。但是自己对这方面知识不是很了解，尤其是端口映射之类的操作，所以导致外网登陆服务器的时候折腾了一点时间，最后勉强利用ngork进行了内网穿透。。。使用过程中发现，ngork似乎有些延迟，加上scp传文件问题（我是win利用git bash登Ubuntu服务器）一直没解决，还是放弃了ssh转战了teamviewer（还是有点香的。。）&lt;/p&gt;</summary>
    
    
    
    <category term="技术支持" scheme="http://densecollections.top/categories/%E6%8A%80%E6%9C%AF%E6%94%AF%E6%8C%81/"/>
    
    
    <category term="Ubuntu" scheme="http://densecollections.top/tags/Ubuntu/"/>
    
    <category term="ssh" scheme="http://densecollections.top/tags/ssh/"/>
    
    <category term="git" scheme="http://densecollections.top/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>RCNN series in object detection</title>
    <link href="http://densecollections.top/posts/RCNNseries-1/"/>
    <id>http://densecollections.top/posts/RCNNseries-1/</id>
    <published>2019-11-30T07:30:42.000Z</published>
    <updated>2022-09-09T03:29:56.143Z</updated>
    
    <content type="html"><![CDATA[<h2 id="about">About</h2><p>Faster  R-CNN是目标检测领域中&quot;two-stage&quot;的代表性方法，其精度高，适应性强，兼具学术和工程价值。整个框架由于吸取了很多先前工作的经验，因此比较庞大，而且细节很多，因此需要认真研读下相关paper和Faster R-CNN的python代码。</p><p>在此之前，先贴上一位博主做的“<a href="https://nikasa1889.github.io/2017/05/02/The-Modern-History-of-Object-Recognition-%E2%80%94-Infographic-1/">The Modern History of Object Recognition — Infographic</a>”，其中也包括了“one-stage&quot;的方法，不过2017年以后的没再更新了。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-1/HistoryOfObjectRecognition.png" alt="modern history of object recognition"></p><span id="more"></span><h2 id="r-cnn"><a href="https://arxiv.org/pdf/1311.2524.pdf">R-CNN</a></h2><h3 id="introduction">Introduction</h3><p>内容有参考<a href="https://zhuanlan.zhihu.com/p/23006190?refer=xiaoleimlnote">blog1</a>和<a href="https://blog.csdn.net/WoPawn/article/details/52133338">blog2</a>。</p><p>R-CNN(Rich feature hierarchies for accurate object detection and semantic segmentation)是将深度学习应用于目标检测的开山之作，以前传统的目标检测算法使用滑动窗口法依次判断所有的可能区域，在该文章中，采用selective search方法先预先提取一系列可能是物体的候选区域（foreground），之后将这些候选区域（proposals）整合成固定的大小（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>227</mn><mo>×</mo><mn>227</mn></mrow><annotation encoding="application/x-tex">227 \times 227</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord">2</span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">2</span><span class="mord">7</span></span></span></span>， 采用AlexNet）送到预训练的CNN模型上提取特征然后进行fine-tuning迁移学习，然后通过fc6和fc7层，得到了针对目标检测任务的特征向量，然后再过SVM二分类器得到物体的每个类别分数（至于为什么用了两层fc，不直接用三层fc得到softmax分数，Ross他也在论文中作了说明和实验，主要原因就是proposal的筛选更加严格点，mAP更高点），得到2K个左右proposal的所属类别之后再做非极大抑制(NMS)，去掉那些多余的框，留下局部最优的建议框，然后根据这些剩下的框再去训练20个类别（针对pascal VOC数据）的regression器，最后终于得到图像中物体的种类和矩形框坐标信息。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-1/RCNN-overview.PNG" alt="R-CNN architecture overview"></p><p>下面对一些重点内容进行分析，同时由于是object detection based CNN开篇，所以也顺便加上评价指标等细节。</p><h3 id="评价指标iou和ap">评价指标IoU和AP</h3><p>**IoU(insertion of union).**中文名为交并比，主要用来衡量框与框的重合程度，计算公式为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mi>o</mi><mi>U</mi><mo>=</mo><mfrac><mrow><mi>a</mi><mi>r</mi><mi>e</mi><mi>a</mi><mo stretchy="false">(</mo><mi>A</mi><mo>∩</mo><mi>B</mi><mo stretchy="false">)</mo></mrow><mrow><mi>a</mi><mi>r</mi><mi>e</mi><mi>a</mi><mo stretchy="false">(</mo><mi>A</mi><mo>∪</mo><mi>B</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">IoU=\frac{area(A \cap B)}{area(A \cup B)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">a</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">A</span><span class="mbin mtight">∪</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">a</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">A</span><span class="mbin mtight">∩</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-1/IOU.png" alt="IoU"></p><p>**AP(Average Precision)与mAP(mean Average Precision).**这是目标检测中常用的评价指标，AP代表每一类的检测精度，mAP代表所有类的整体检测精度，也就是所有类AP的平均值。AP一般是二分类问题的P-R曲线（precision-recall curve）与x轴围成的面积。</p><p>accuracy（准确率）=<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi><mo>+</mo><mi>F</mi><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(TP+TN)/(TP+FP+TN+FN)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">)</span><span class="mord">/</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span>，预测对的样本/所有样本；</p><p>precision（精准率）=<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi>P</mi><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">TP/(TP+FP)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord">/</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mclose">)</span></span></span></span>，预测对的正样本/预测出的正样本；</p><p>recall（召回率）=<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi>P</mi><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">TP/(TP+FN)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord">/</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span>，预测对的正样本/真正的正样本；</p><p><a href="https://blog.csdn.net/u013249853/article/details/96132766">如何绘制PR曲线?</a>首先将样本按照置信度从大到小排列，然后设置一个从高到低的阈值，大于该阈值的才能认定为正样本，否则为负样本，在该阈值下就能得到一组（P,R）值，阈值设的越细，点对就越多，这样连接成线就得到了P-R曲线。</p><p><a href="https://arleyzhang.github.io/articles/c521a01c/">AP的计算</a>一般是通过插值或者估算的方式进行的，并不是直接积分。</p><p>针对Pascal VOC数据来说，2010前后有两种计算方式，现在主要是<a href="https://www.zhihu.com/question/53405779/answer/419532990">第二种</a>，计算方法如下（Pascal VOC给出的评价文本结果是img_name+置信度+x1_lefttop+y1_lefttop+x2_rightbottom+y2_rightbottom，通过坐标计算IoU，大于0.5的认为是TP，小于等于0.5或者检测到同一个GT的多余框认为是FP，没有检测到GT认为是FN）：</p><blockquote><p>假设样本中有M个正样本，且每个样本都有预测的类别置信度和预测的GT（IoU大于0.5），根据置信度顺序给出各处的P-R值，画出曲线，根据样本设定[0/M, 1/M, 2/M, 3/M, …, M/M]这几个recall点，找出每个点之后最大的precision值（如果曲线不能全部遍历完则只遍历到最后出现的recall值，没有的对应点，precision做0处理），以precision为高，相邻recall点之间的距离为宽，相乘相加近似得到曲线与X轴的面积，即为AP</p></blockquote><p>算出所有类的AP，再做平均就得到了mAP。</p><p>举个例子：</p><p>我现在用训练好的Faster R-CNN测试自己的数据集，总共有三类：drone，bird，kite，最后会在<code>results</code>文件夹下生成三类检测的.txt文件。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-1/faster%20rcnn%20eval%20results.jpg" alt="三类检测的结果文件"></p><p>比如在<code>comp4_det_test_bird.txt</code>里面，前面几行是：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">njust_drone2videotest_0119 0.002 536.2 359.2 564.2 378.1</span><br><span class="line">njust_drone2videotest_0119 0.000 563.2 404.0 580.2 413.3</span><br><span class="line">njust_drone2videotest_0119 0.000 522.2 338.8 539.9 346.3</span><br><span class="line">njust_drone2videotest_0053 0.983 663.7 407.7 671.3 416.6</span><br><span class="line">njust_drone2videotest_0053 0.939 259.6 358.7 267.8 367.3</span><br><span class="line">njust_drone2videotest_0053 0.077 667.9 410.4 675.7 420.0</span><br><span class="line">njust_drone2videotest_0053 0.005 265.2 359.2 272.8 368.0</span><br><span class="line">njust_drone2videotest_0053 0.003 591.5 400.0 619.1 419.3</span><br><span class="line">njust_drone2videotest_0053 0.002 657.2 406.7 667.6 416.6</span><br><span class="line">njust_drone2videotest_0053 0.002 261.8 362.8 269.0 372.3</span><br><span class="line">njust_drone2videotest_0053 0.000 259.6 353.4 271.0 361.2</span><br><span class="line">njust_drone2videotest_0053 0.000 280.1 399.3 292.0 407.7</span><br><span class="line">njust_drone2videotest_0053 0.000 561.4 439.9 576.8 446.5</span><br><span class="line">njust_drone2videotest_0053 0.000 666.5 415.0 672.5 424.4</span><br><span class="line">njust_drone2videotest_0053 0.000 662.8 402.8 673.9 411.6</span><br><span class="line">njust_drone2videotest_0053 0.000 647.6 444.0 659.6 461.4</span><br><span class="line">njust_drone2videotest_0053 0.000 269.3 390.4 278.0 400.9</span><br><span class="line">njust_drone2videotest_0278 0.001 686.4 397.4 711.0 415.7</span><br><span class="line">njust_drone2videotest_0280 0.001 678.2 399.2 703.1 416.0</span><br><span class="line">njust_drone2videotest_0280 0.000 710.2 437.4 725.8 446.0</span><br><span class="line">njust_drone2videotest_0280 0.000 654.5 382.8 673.3 391.2</span><br><span class="line">njust_drone2videotest_0280 0.000 704.2 454.3 719.0 463.2</span><br></pre></td></tr></table></figure><p>之后需要对上述文本就行处理，主要是筛选检测框，比如设置置信度阈值，使用NMS等，然后根据推测的坐标和真值坐标计算IOU，大于0.5的设置框的GT为1，否则为0。值得注意的是，即使做过筛选后，最后得到的检测框还是可能误检（FP)，多检（FP，一个物体框了多个），漏检（FN），大致流程如下：</p><blockquote><p>首先对所有的结果按置信度排序，从高到低，然后根据坐标判断检测是否成功。排好序的坐标每一组都得和真实标注的GT进行比较计算IoU,大于0.5的认为检测成功，那么赋给他的标签就是1（TP)，否则是0(FP)，同时，每当一个GT被成功检测了，那么就会被标记，后续如果发现有其他的检测与这个GT重复，那么就把IoU最大的当作TP，其他多检的当作FP，遍历完成之后，如果存在没有匹配到的标注GT，也就是漏检，认定为FN。这样一整个流程下来就会得到TP,FP和FN。</p></blockquote><p>借用上头<a href="https://www.zhihu.com/question/53405779/answer/419532990">知乎链接</a>的答案，具体讲下怎么计算AP：</p><p>在筛选，NMS，比较等步骤之后，假设对于bird这一类，有如下检测结果(IoU&gt;0.5时GT=1，按照置信度排好了顺序)：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BB  | confidence | GT</span><br><span class="line">----------------------</span><br><span class="line">BB1 |  0.9       | 1</span><br><span class="line">----------------------</span><br><span class="line">BB2 |  0.9       | 1</span><br><span class="line">----------------------</span><br><span class="line">BB1 |  0.8       | 1</span><br><span class="line">----------------------</span><br><span class="line">BB3 |  0.7       | 0</span><br><span class="line">----------------------</span><br><span class="line">BB4 |  0.7       | 0</span><br><span class="line">----------------------</span><br><span class="line">BB5 |  0.7       | 1</span><br><span class="line">----------------------</span><br><span class="line">BB6 |  0.7       | 0</span><br><span class="line">----------------------</span><br><span class="line">BB7 |  0.7       | 0</span><br><span class="line">----------------------</span><br><span class="line">BB8 |  0.7       | 1</span><br><span class="line">----------------------</span><br><span class="line">BB9 |  0.7       | 1</span><br><span class="line">----------------------</span><br></pre></td></tr></table></figure><p>其中BB代表bounding box，其中两个BB1代表一个物体被框了两次，则应属于FP，因此在计算的时候要注意，虽然给出的GT是1，此外还有两个bird没有被检测出来，那么属于FN，整体上实际是正样本的有5+2=7个。现在从上到下以此按置信度大小计算（recall,precison）点对。（$recall \in [0/7, 1/7, 2/7, 3/7, 4/7, 5/7,  6/7, 7/7]) $</p><blockquote><p>1.首行以下认为预测值全为0，则TP=1(BB1)，BB2,BB5,BB8,BB9实际是1，但是预测为0，所以FN=4+2=6(两个漏检的)，FP=0，所以recall=1/(1+6)=0.14,precision=1/(1+0)=1.00;<br>2.第二行一下认为预测值全为0，则TP=2(BB1,BB2),BB5,BB8,BB9实际是1，但是预测0，所以FN=3+2=5,FP=0，所以recall=2/(2+5)=0.29,precision=2/(2+0)=1.00;<br>3.第三行一下认为预测值全为0，则TP=2(BB1,BB2,BB1为多余的，算FP)，BB5,BB8,BB9实际是1，但是预测是0，所以FN=3+2=5,FP=1,所以recall=2/(2+5)=0.29,precision=2/(2+1)=0.67;<br>4.第四行以下认为预测值全为0，则TP=2(BB1,BB2),BB5,BB8,BB9实际是1，但是预测是0，所以FN=3+2=5,BB3实际为0，预测为1，BB1多检一个，所以FP=2，则recall=2/(2+5)=0.29,precision=2/(2+2)=0.50;<br>5.第五行以下认为预测值全为0，则TP=2,FN=5,FP=3,所以recall=2/(2+5)=0.29,precision=2/(2+3)=0.40;<br>6.第六行以下认为预测值全为0，则TP=3,FN=4,FP=3,所以recall=3/(3+4)=0.43,precision=3/(3+3)=0.50;<br>7.第七行以下认为预测值全为0，则TP=3,FN=4,FP=4,所以recall=3/(3+4)=0.43,precision=3/(3+4)=0.43;<br>8.第八行以下认为预测值全为0，则TP=3,FN=4,FP=5,所以recall=3/(3+4)=0.43,precision=3/(3+5)=0.38;<br>9.第九行以下认为预测值全为0，则TP=4,FN=3,FP=5,所以recall=4/(4+3)=0.57,precision=4/(4+5)=0.44;<br>10.第十行以下认为预测值全为0，则TP=5,FN=2,FP=5,所以recall=5/(5+2)=0.71,precision=5/(5+5)=0.50</p></blockquote><p>接着根据每个不同的recall值去找对应的<strong>最大的precision值</strong>，即：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">recall&gt;=0.00,precision_max=1.00</span><br><span class="line">recall&gt;=0.14,precision_max=1.00;</span><br><span class="line">recall&gt;=0.29,precision_max=1.00;</span><br><span class="line">recall&gt;=0.43,precision_max=0.50;</span><br><span class="line">recall&gt;=0.57,precision_max=0.50;</span><br><span class="line">recall&gt;=0.71,precision_max=0.50;</span><br><span class="line">recall&gt;=1.00,precision_max=0.00;</span><br></pre></td></tr></table></figure><p>则</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>P</mi><mo>=</mo><mo stretchy="false">(</mo><mn>0.14</mn><mo>−</mo><mn>0</mn><mo stretchy="false">)</mo><mo>×</mo><mn>1</mn><mo>+</mo><mo stretchy="false">(</mo><mn>0.29</mn><mo>−</mo><mn>0.14</mn><mo stretchy="false">)</mo><mo>×</mo><mn>1</mn><mo>+</mo><mo stretchy="false">(</mo><mn>0.43</mn><mo>−</mo><mn>0.29</mn><mo stretchy="false">)</mo><mo>×</mo><mn>0.5</mn><mo>+</mo><mspace linebreak="newline"></mspace><mo stretchy="false">(</mo><mn>0.57</mn><mo>−</mo><mn>0.43</mn><mo stretchy="false">)</mo><mo>×</mo><mn>0.5</mn><mo>+</mo><mo stretchy="false">(</mo><mn>0.71</mn><mo>−</mo><mn>0.57</mn><mo stretchy="false">)</mo><mo>×</mo><mn>0.5</mn><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mn>0.71</mn><mo stretchy="false">)</mo><mo>×</mo><mn>0</mn><mo>=</mo><mn>0.50</mn></mrow><annotation encoding="application/x-tex">AP=(0.14-0) \times 1 + (0.29-0.14) \times 1 + (0.43-0.29) \times 0.5 + \\(0.57-0.43) \times 0.5 + (0.71-0.57) \times 0.5 + (1-0.71) \times 0 = 0.50</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mord">.</span><span class="mord">2</span><span class="mord">9</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span><span class="mord">4</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mord">.</span><span class="mord">4</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">2</span><span class="mord">9</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">4</span><span class="mord">3</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mord">.</span><span class="mord">7</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mord">7</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">7</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mord">0</span></span></span></span></span></p><p>实际上，这就是在P-R曲线上找出一些特定的recall点，然后利用多个矩形的面积和来近似代替曲线与X轴围成的面积。</p><p>如果是VOC2010之前，recall值的选取是固定的，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>l</mi><mo>∈</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>0.1</mn><mo separator="true">,</mo><mn>0.2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">recall \in [0, 0.1, 0.2, ..., 1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>，对应的最大precision为1，1，1，0.5，0.5，0.5，0.5，0.5，0，0，0，此时AP的计算公式是11个precision的和的平均值，为0.5。</p><p>在COCO数据集中，IoU要求在[0,5, 0.95]区间每隔0.05取一次作为正样本判断阈值，然后计算出10个类似Pascal VOC的mAP，然后再做平均，作为最后的AP。COCO并不将AP和mAP做区分，COCO中的AP@0.5等同于Pascal中的mAP。</p><p>AP是衡量检测器性能的一个综合指标，但是对于你的数据集，可能并不是最适合的，因为有的数据场景认为误检几个影响不大，主要是都能检测出来，那么这时候recall值就大点好；有的数据场景呢，认为漏检几个没问题，但是不能检测错了，那么precision大点好。而AP是对recall和precision做了一个整体的评估，是检测器对数据普遍场景下的检测性能的打分。后续的一些研究工作发现了此评价指标在一些场景下水土不服，以及没有考虑具体物体检测的置信度得分情况而导致泛化能力失衡的情况，并对此做了一些改进，有兴趣的可以阅读下南京旷视研究院的两篇博文做个大概的了解。（<a href="https://zhuanlan.zhihu.com/p/55575423">blog1</a>, <a href="https://zhuanlan.zhihu.com/p/56899189">blog2</a>）</p><h3 id="content">Content</h3><p>**Region proposals–Selective Search(<a href="https://www.koen.me/research/pub/uijlings-ijcv2013-draft.pdf">paper</a>, <a href="https://blog.csdn.net/mao_kun/article/details/50576003">blog</a>,<a href="https://www.cnblogs.com/zyly/p/9259392.html">code</a>).**最开始的阶段，算法要通过该方法提取出每张图像上存在物体的可能区域，即建议框，每张图片大概会提取2k左右。Selective Search算法属于经典计算机视觉范畴，主要是利用不同的尺度（颜色，纹理，大小等），采用图像分割，层次算法等，先分割成小区域，然后通过颜色直方图相近（颜色相似），梯度直方图相近（纹理相似）等规则合并，得到最终的proposals，由于这个方法严重限制了整体框架的速度，而且后面也被Faster R-CNN中的RPN取代，因此我也没有兴趣深究，感兴趣的读者可以通过原论文和代码进一步了解。</p><p>**CNN feature extraction.**利用selective search得到的预选框由于大小不一，不方便过卷积层后reshape成统一维度的矩阵，因此需要进行resize等预处理。变形操作方面主要就是拉伸和填充的组合。</p><p>如下图所示，(A)是原图，(B)，©是各向同性变形，(D)是各项异性变形。(B)考虑了proposal周围的纹理内容（context），利用其扩充到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>227</mn><mo>×</mo><mn>227</mn></mrow><annotation encoding="application/x-tex">227 \times 227</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord">2</span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">2</span><span class="mord">7</span></span></span></span>，如果遇到了图像边界就利用proposal的像素均值填充；©不考虑proposal周围的像素信息，直接用其像素均值填充到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>227</mn><mo>×</mo><mn>227</mn></mrow><annotation encoding="application/x-tex">227 \times 227</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord">2</span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">2</span><span class="mord">7</span></span></span></span>；(D)是直接对proposal resize到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>227</mn><mo>×</mo><mn>227</mn></mrow><annotation encoding="application/x-tex">227 \times 227</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord">2</span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">2</span><span class="mord">7</span></span></span></span>，不过在此之前先进行padding处理，padding的尺寸分别为0和16，像素值为proposal的像素均值。论文给出的结论是padding=16加各向异性缩放的效果最好。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-1/different%20object%20proposal%20transformations.PNG" alt="different object proposal transformations"></p><p>网络层面，R-CNN选用了Alexnet和VGG这两个网络，由于VGG采用了更小的卷积核和小的stride，因此最后的检测mAP也更高。在训练方面，R-CNN利用的是在ILSVC数据集上的预训练分类模型，等于是进行了较好的初始化，有了一个比较通用的特征提取器，然后在Pascal VOC这样的小数据集上进行fine-tuning，这样的迁移学习也算当时的一个contribution，但是现在来看已经属于比较正常的操作了。以Alexnet为例，proposal经过其中的5个卷积层之后，得到的是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>6</mn><mo>×</mo><mn>6</mn><mo>×</mo><mn>256</mn></mrow><annotation encoding="application/x-tex">6 \times 6 \times 256</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">6</span></span></span></span>的特征图矩阵，再经过fc6和fc7之后得到了4096个神经元，最后再经过一个有21个神经元的fc，即分类数，最终得到了适合该数据样本的分类器（和GT的IOU大于0.5的那些proposals都会标为正样本，否则为负样本）,但是并不能准确预测位置。</p><p>**SVM classification.**一般来说，根据图像分类的操作，都是将最后的全连接层改成需要分类个数的神经元，因此针对Pascal VOC来说，可以将最后的fc进行softmax，但是R-CNN却在fc7后面加了个SVM分类器，是什么原因导致这样做精度更高呢？根据论文的说法，Ross在微调CNN的时候，和GT的IOU大于0.5的那些proposals都会标为正样本，否则为负样本，这样的话对bndbox的限制非常宽松，也就是说监督信息不是严格有效的，因为CNN对小样本容易过拟合，因此这样的操作只是为了微调网络，尤其是最后的fc6和fc7，使其能够得到针对Pascal VOC数据的分类特征。采用SVM是因为SVM适用于少样本训练，而且由于是最后的分类，所以IOU的阈值设定也比较严格，目的是为了提供尽量正确的监督信息（GT为正样本，IOU小于0.3的负样本，这个0.3也是调参试出来的）。SVM分类器（<a href="https://blog.csdn.net/luoshixian099/article/details/51073885">可以与sigmoid函数结合，进行概率输出，在scikit-learn package中的SVM函数可以直接输出概率</a>，<a href="https://blog.csdn.net/v_JULY_v/article/details/7624837">理解SVM</a>）其实就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>4096</mn><mo>×</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">4096 \times N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mord">0</span><span class="mord">9</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>的权值矩阵，最后得到了每类的置信值，这样就得到了类别结果。此外还需注意的是，由于GT只有一个，而IOU小于0.3的proposal可能会有很多，这样就导致了训练SVM分类器的时候正负样本不均衡，论文中也提到，SVM的负样本是经过hard negative mining筛选的（负样本的处理是object detection中的一个技术细节和难点），具体怎么做的，我没有继续深究，我准备在Ross的下一篇文章“OHEM”进行梳理。</p><p>**NMS非极大值抑制。**SVM分类器输出的是2k个proposal的类别置信矩阵，后面需要对每一类做NMS处理，去除掉无用的proposals，留下最接近的proposals（一个物体可能被selective search提取出了很多类似的proposals）。具体步骤如下：</p><p>假设是2000个proposals，然后是21类（加一个background），那么一张图片最后过SVM得到了一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2000</mn><mo>×</mo><mn>21</mn></mrow><annotation encoding="application/x-tex">2000 \times 21</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">1</span></span></span></span>的矩阵，每一列代表这2k个proposals的每个类别的置信度，那么：</p><blockquote><p>1.对此矩阵按列按从大到小的顺序排列；<br>2.对每列，先选取该列最大的那么proposal，然后与该列后面每个得分对应的proposals计算IoU,如果大于设定阈值，则剔除该proposal，否则认定是这张图片存在该类别的多个物体；<br>3.对这一列剩下的次大的proposal进行2的操作，并不断重复，直到该列遍历完；<br>4.对21列（所有类）进行步骤2，3的操作</p></blockquote><p>经过NMS之后，就可以得到位置比较准确且类别置信度较高的一些proposals。</p><p>**Bounding box regression.**分类完成并且NMS之后需要对proposals的位置进行精修，因为selective search得到的proposal并不是精确的目标检测器，因此还需要对物体的位置做进一步的修正。</p><p>a).如何设计回归？首先是挑选与GT比较接近的proposal（框）进行回归，如果差的太远，是没办法进行学习的。其次也不是直接回归矩形框的四个坐标，而是学习一种框的变换，即从检测框到GT的平移和缩放，这样的话会使网络学习比较稳定，直接回归无规律的坐标可能导致网络不稳定。如下图所示，P代表送入网络的region proposal，G是标注的GT，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>G</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9467699999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">G</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span>是学习过后的regression模型预测出的更接近GT的bounding box。其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>P</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>P</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>P</mi><mi>w</mi></msub><mo separator="true">,</mo><msub><mi>P</mi><mi>h</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>G</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>G</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>G</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>G</mi><mi>w</mi></msub><mo separator="true">,</mo><msub><mi>G</mi><mi>h</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mover accent="true"><mi>G</mi><mo>^</mo></mover><mo>=</mo><mo stretchy="false">(</mo><mover accent="true"><msub><mi>G</mi><mi>x</mi></msub><mo>^</mo></mover><mo separator="true">,</mo><mover accent="true"><msub><mi>G</mi><mi>y</mi></msub><mo>^</mo></mover><mo separator="true">,</mo><mover accent="true"><msub><mi>G</mi><mi>w</mi></msub><mo>^</mo></mover><mo separator="true">,</mo><mover accent="true"><msub><mi>G</mi><mi>h</mi></msub><mo>^</mo></mover><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P=(P_{x},P_{y},P_{w},P_{h}), G=(G_{x},G_{y},G_{w},G_{h}), \hat{G}=(\hat{G_{x}},\hat{G_{y}},\hat{G_{w}},\hat{G_{h}})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.232878em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">G</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.232878em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，下标<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x,y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>代表矩形框中心坐标，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo separator="true">,</mo><mi>h</mi></mrow><annotation encoding="application/x-tex">w,h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span></span></span></span>代表矩形框的宽和高。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>x</mi></msub><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>d</mi><mi>y</mi></msub><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">d_{x}(P),d_{y}(P)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mclose">)</span></span></span></span>为待学习的平移变换，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>d</mi><mi>h</mi></msub><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">d_{w}(P),d_{h}(P)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mclose">)</span></span></span></span>为待学习的缩放变换，即：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mover accent="true"><mi>G</mi><mo>^</mo></mover><mi>x</mi></msub><mo>=</mo><msub><mi>P</mi><mi>w</mi></msub><msub><mi>d</mi><mi>x</mi></msub><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>P</mi><mi>x</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mover accent="true"><mi>G</mi><mo>^</mo></mover><mi>y</mi></msub><mo>=</mo><msub><mi>P</mi><mi>h</mi></msub><msub><mi>d</mi><mi>y</mi></msub><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>P</mi><mi>y</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mover accent="true"><mi>G</mi><mo>^</mo></mover><mi>w</mi></msub><mo>=</mo><msub><mi>P</mi><mi>w</mi></msub><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msub><mi>d</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mover accent="true"><mi>G</mi><mo>^</mo></mover><mi>h</mi></msub><mo>=</mo><msub><mi>P</mi><mi>h</mi></msub><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msub><mi>d</mi><mi>h</mi></msub><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l}{\hat{G}_{x}=P_{w} d_{x}(P)+P_{x}} \\ {\hat{G}_{y}=P_{h} d_{y}(P)+P_{y}} \\ {\hat{G}_{w}=P_{w} \exp \left(d_{w}(P)\right)} \\ {\hat{G}_{h}=P_{h} \exp \left(d_{h}(P)\right)}\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.227079999999999em;vertical-align:-2.3635399999999995em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.86354em;"><span style="top:-4.9167700000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">G</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.6099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">G</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.30323em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">G</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span style="top:-0.9964600000000006em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">G</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.3635399999999995em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p><p>(这里缩放变换用了exp可能还是因为网络回归小的值容易些，变化大的值不稳定）P实际上代表着proposal的信息，因为是对proposal进行修正，因此在回归学习时候，都可以看作是Alexnet最后一个pool层的线性函数，目的是学习对最后的feature map使其可以变换到真值附近的变换组合，即：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mo lspace="0em" rspace="0em">∗</mo></msub><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mo>∗</mo><mo>=</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>w</mi><mo separator="true">,</mo><mi>h</mi></mrow><annotation encoding="application/x-tex">d_{*}(P), *=x, y, w, h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∗</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mo lspace="0em" rspace="0em">⋆</mo></msub><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mi mathvariant="bold">w</mi><mo lspace="0em" rspace="0em">⋆</mo><mi mathvariant="normal">T</mi></msubsup><msub><mi mathvariant="bold-italic">ϕ</mi><mn>5</mn></msub><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">d_{\star}(P)=\mathbf{w}_{\star}^{\mathrm{T}} \boldsymbol{\phi}_{5}(P)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">⋆</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">⋆</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">T</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">ϕ</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mclose">)</span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo>=</mo><mi><munder><mo><mi mathvariant="normal">argmin</mi><mo>⁡</mo></mo><msub><mover accent="true"><mi mathvariant="bold">w</mi><mo>^</mo></mover><mo lspace="0em" rspace="0em">⋆</mo></msub></munder></mi><munderover><mo>∑</mo><mi>i</mi><mi>N</mi></munderover><msup><mrow><mo fence="true">(</mo><msubsup><mi>t</mi><mo lspace="0em" rspace="0em">⋆</mo><mi>i</mi></msubsup><mo>−</mo><msubsup><mover accent="true"><mi mathvariant="bold">w</mi><mo>^</mo></mover><mo lspace="0em" rspace="0em">⋆</mo><mi mathvariant="normal">T</mi></msubsup><msub><mi mathvariant="bold-italic">ϕ</mi><mn>5</mn></msub><mrow><mo fence="true">(</mo><msup><mi>P</mi><mi>i</mi></msup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mn>2</mn></msup><mo>+</mo><mi>λ</mi><msup><mrow><mo fence="true">∥</mo><msub><mover accent="true"><mi mathvariant="bold">w</mi><mo>^</mo></mover><mo lspace="0em" rspace="0em">⋆</mo></msub><mo fence="true">∥</mo></mrow><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">Loss = \underset{\hat{\mathbf{w}}_{\star}}{\operatorname{argmin}} \sum_{i}^{N}\left(t_{\star}^{i}-\hat{\mathbf{w}}_{\star}^{\mathrm{T}} \boldsymbol{\phi}_{5}\left(P^{i}\right)\right)^{2}+\lambda\left\|\hat{\mathbf{w}}_{\star}\right\|^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6678600000000001em;"><span style="top:-2.144044em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span></span></span><span style="top:-2.7134400000000003em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord mtight">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.18934285714285717em;"><span style="top:-2.357em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">⋆</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mop"><span class="mord mathrm">a</span><span class="mord mathrm">r</span><span class="mord mathrm" style="margin-right:0.01389em;">g</span><span class="mord mathrm">m</span><span class="mord mathrm">i</span><span class="mord mathrm">n</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0560559999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">⋆</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">⋆</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">T</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">ϕ</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0953389999999998em;"><span style="top:-3.344231em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.204008em;vertical-align:-0.25em;"></span><span class="mord mathdefault">λ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∥</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">⋆</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∥</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi mathvariant="bold">w</mi><mo lspace="0em" rspace="0em">⋆</mo><mi mathvariant="normal">T</mi></msubsup></mrow><annotation encoding="application/x-tex">\mathbf{w}_{\star}^{\mathrm{T}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.088331em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">w</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">⋆</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">T</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>就是要间接梯度下降学习的参数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold-italic">ϕ</mi><mn>5</mn></msub><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\boldsymbol{\phi}_{5}(P)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">ϕ</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mclose">)</span></span></span></span>代表最后pool层出来的结果，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">λ</span></span></span></span>是正则项系数，防止过拟合，在论文中Ross提到这个参数很关键，否则效果不好，论文中设的值是1000。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mo lspace="0em" rspace="0em">⋆</mo></msub></mrow><annotation encoding="application/x-tex">t_{\star}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">⋆</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是要去学习的准确的变换，即从P到G的变换：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>t</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mrow><mo fence="true">(</mo><msub><mi>G</mi><mi>x</mi></msub><mo>−</mo><msub><mi>P</mi><mi>x</mi></msub><mo fence="true">)</mo></mrow><mi mathvariant="normal">/</mi><msub><mi>P</mi><mi>w</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>t</mi><mi>y</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mrow><mo fence="true">(</mo><msub><mi>G</mi><mi>y</mi></msub><mo>−</mo><msub><mi>P</mi><mi>y</mi></msub><mo fence="true">)</mo></mrow><mi mathvariant="normal">/</mi><msub><mi>P</mi><mi>h</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>t</mi><mi>w</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msub><mi>G</mi><mi>w</mi></msub><mi mathvariant="normal">/</mi><msub><mi>P</mi><mi>w</mi></msub><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>t</mi><mi>h</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msub><mi>G</mi><mi>h</mi></msub><mi mathvariant="normal">/</mi><msub><mi>P</mi><mi>h</mi></msub><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned} t_{x} &amp;=\left(G_{x}-P_{x}\right) / P_{w} \\ t_{y} &amp;=\left(G_{y}-P_{y}\right) / P_{h} \\ t_{w} &amp;=\log \left(G_{w} / P_{w}\right) \\ t_{h} &amp;=\log \left(G_{h} / P_{h}\right) \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6em;vertical-align:-2.7500000000000004em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-0.9099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7500000000000004em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-0.9099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7500000000000004em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-1/bbox%20regression.png" alt="bounding box regerssion--learning the transformation"></p><p>b).怎么训练？为了回归器有效训练，每类样本只采取与GT之间IoU最大的且大于0.6的region proposal，输入的是P和G的坐标信息，以及Alexnet的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>o</mi><mi>o</mi><msub><mi>l</mi><mn>5</mn></msub></mrow><annotation encoding="application/x-tex">pool_{5}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>层特征，然后根据loss函数对每一类单独训练回归器。</p><h3 id="discussion">Discussion</h3><p>1.虽然整体繁琐，占用内存大，速度也慢，但是技术框架和细节为后面的改进工作奠定了整体基础，具有开创意义；</p><p>2.论文写得非常详实，没有难懂的地方和句子，通读以后对其工作和贡献了解得很清楚；</p><p>3.考虑问题很全面，实验的各个因素都考虑到了，而且做了很多对比试验（Ablation Study），让人信服，有理有据。Ross的写作技巧和框架对自己写论文有很大的借鉴意义。</p><p>4.Ross论文中的推荐的<a href="http://dhoiem.web.engr.illinois.edu/publications/eccv2012_detanalysis_derek.pdf">object detection errors analysis </a>，进一步了解目标检测的错误分析。</p><h2 id="sppnet"><a href="https://arxiv.org/pdf/1406.4729.pdf">SPPNet</a></h2><h3 id="introduction">Introduction</h3><ul><li><p>内容有参考<a href="https://zhuanlan.zhihu.com/p/24774302">blog1</a>和<a href="https://zhuanlan.zhihu.com/p/24780433">blog2</a>。</p></li><li><p>何恺明在ICCV2015上作的tutorial，<a href="http://kaiminghe.com/iccv15tutorial/iccv2015_tutorial_convolutional_feature_maps_kaiminghe.pdf">Convolutional Feature Maps --Elements of efficient (and accurate) CNN-based object detection</a>，讲解了SPPNet的一些内容，同时对比了R-CNN, Fast R-CNN和Faster R-CNN。</p></li></ul><p>SPPNet是在R-CNN的基础上进一步提高目标检测的速度和精度。何恺明等作者认为，R-CNN每次都要将Selective Search提取出的2k左右的region proposals进行crop和warp，然后分别过卷积这样的操作太费时间而且可能做了很多重复的计算，因此他们认为可不可以直接将full image过一次卷积网络，然后在feature map进行操作，毕竟图像的特征在卷积提取之后都是一样的，由此SPPNet应运而生。</p><p>SPPNet的好处是速度得到了大幅提升，而且简化了部分操作，但是随之而来的问题是：</p><ol><li><p>region proposal的大小不一，但是conv之后的fc层是固定的向量长度，怎么去适应？</p></li><li><p>解决这个固定尺度的问题后，那么怎么找region proposal对应的feature map区域？</p></li></ol><p>对于第一个问题，SPPNet提出了spatial pyramid pooling（SPP, 空间金字塔池化），通过多次pooling输出不同尺度（预设好尺寸）的特征图并进行concatenate叠操作（类似U-Net），得到了固定长度的特征向量，这也是该论文的主要contribution；对于第二个问题，SPPNet通过简化receptive field和对应中心坐标计算，来近似得到region proposal图像的top-left, right-bottom坐标对应在最后feature map上的坐标，从而确定区域。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-1/RCNN-SPP-1.PNG" alt="R-CNN和SPPNet的结构比较"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-1/RCNN-SPP-2.PNG" alt="R-CNN和SPPNet的不同region proposal处理方式比较"></p><h3 id="content">Content</h3><p><strong>SPP空间金字塔池化</strong></p><p>不同的regional proposal对应的feature map区域尺寸看成一个个不同尺寸的小feature map，然后在该map上做几次不同的maxpooling，得到尺度依次变小的特征图，不改变channel数，然后将这些不同尺度的金字塔特征图reshape成一维的向量，然后合并在一起形成固定维度的fc层。由于特征金字塔的尺度是预设的，所以不管region proposal或者image的尺寸如何，都不会影响最后的分类。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-1/SPP-object-detection.PNG" alt="基于R-CNN的SPP示意图"></p><p>此外，由于可以tolerate multi-scale，论文也采用了多尺度的图像去训练，并做了实验，结果也证明确实比单一尺度要好。</p><blockquote><p>We develop a simple multi-size training method. For a single network to accept variable input sizes, we approximate it by multiple networks that share all parameters, while each of these networks is trained using a fixed input size. In each epoch we train the network with a given input size, and switch to another input size for the next epoch. Experiments show that this multi-size training converges just as the traditional single-size training, and leads to better testing accuracy.</p></blockquote><blockquote><p>Note that the above single/multi-size solutions are for training only. At the testing stage, it is straightforward to apply SPP-net on images of any sizes</p></blockquote><blockquote><p>SPP is better than no-spp, and full-image representation is better than crop</p></blockquote><p><strong>region proposal 映射</strong></p><p>在进行SPP之前，网络需要知道最后卷出来的feature map中哪些部分和最初Selective Search得到的原始region proposal是对应的。论文对此方法的解释比较简略，只在附录最后做了提及，估计也是个工程性，实验性的处理。其大致思路前面也已经说过，就是找左上和右下的对应点，而这种对应的映射关系主要由网络的感受野（receptive field）决定。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-1/mapping-a-window-to-feature-maps.PNG" alt="论文附录中提到的映射思路"></p><p><em>感受野</em></p><blockquote><p><em>The</em> receptive field is defined as the region in the input space that a particular CNN’s feature is looking at (i.e. be affected by)</p></blockquote><p>简而言之，感受野就是当前你的特征图上的像素点对应的是前面特征图的哪些部分区域（这个点是从多少视野中抽象出来的），这个区域一般是矩形大小的。对应分类来说，一般网络越深、感受野越大越好（高层语义信息越准确），对于目标检测，如果感受野太大，那么小目标的信息可能丢失，因此需要针对具体的任务去分析调节。</p><p>对于卷积之后特征图大小计算，感受野概念和推导来源，可以参考下面的references，我在之后的内容中就直接给出公式和结论了。</p><ul><li><p><a href="https://zhuanlan.zhihu.com/p/23185164?refer=xiaoleimlnote">卷积神经网络(CNN)简介</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/44106492">卷积神经网络的感受野</a></p></li><li><p><a href="https://medium.com/mlreview/a-guide-to-receptive-field-arithmetic-for-convolutional-neural-networks-e0f514068807">A guide to receptive field arithmetic for Convolutional Neural Networks–需要梯子</a></p></li><li><p><a href="https://fomoro.com/research/article/receptive-field-calculator#3,1,1,VALID;2,2,1,VALID;3,1,1,VALID;2,2,1,VALID;3,1,1,VALID;3,1,1,VALID;2,2,1,VALID">感受野网页计算器</a></p></li><li><p><a href="https://arxiv.org/pdf/1603.07285.pdf">A guide to convolution arithmetic for deep learning</a></p></li></ul><p>假设特征图是正方形的，特征图尺寸是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>，感受野尺寸是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">RF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>，卷积核kernel_size是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>，步长stride是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span>，填充padding大小是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span></span></span></span>，感受野中心坐标为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span>，下标<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>代表从上到下的顺序标号，则：</p><p>经过一次卷积后特征图大小变为（向下取整，比如22.5取22）：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mo stretchy="false">⌊</mo><mo stretchy="false">(</mo><msub><mi>F</mi><mi>i</mi></msub><mo>+</mo><mn>2</mn><msub><mi>p</mi><mi>i</mi></msub><mo>−</mo><msub><mi>k</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><msub><mi>s</mi><mi>i</mi></msub><mo stretchy="false">⌋</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">F_{i+1} = \lfloor (F_{i}+2p_{i}-k_{i}) / s_{i} \rfloor + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p><p>当前特征图的像素点对应上一特征图的感受野尺寸是（根据上面的公式逆推，下标意义不完全准确）：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><msub><mi>F</mi><mi>i</mi></msub><mo>=</mo><mo stretchy="false">(</mo><mi>R</mi><msub><mi>F</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><msub><mi>s</mi><mi>i</mi></msub><mo>+</mo><msub><mi>k</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">RF_{i}=(RF_{i+1}-1) * s_{i} + k _{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>当前特征图在上一个特征图的感受野大小就是卷积核大小，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>。感受野计算一般不加padding，因为感受野是指在原图上的感受野，与填充无关，虽然逆推公式时候padding会有影响，但是将其忽略然后近似计算。如果要计算最后特征图在原图上的感受野，依次递归即可。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">举个例子：</span><br><span class="line">原图输入</span><br><span class="line">|</span><br><span class="line">|</span><br><span class="line">k1=3, s1=2;</span><br><span class="line">|</span><br><span class="line">|</span><br><span class="line">特征图1</span><br><span class="line">|</span><br><span class="line">|</span><br><span class="line">k2=3, s2=2;</span><br><span class="line">|</span><br><span class="line">|</span><br><span class="line">特征图2</span><br><span class="line">|</span><br><span class="line">|</span><br><span class="line">k3=3, s3=1;</span><br><span class="line">|</span><br><span class="line">|</span><br><span class="line">特征图3</span><br><span class="line">|</span><br><span class="line">|</span><br><span class="line"></span><br><span class="line">特征图3在原图上的感受野尺寸是多大？</span><br><span class="line">特征图3在特征图2上的感受野就是卷积核大小，即3；</span><br><span class="line">特征图3在特征图1上的感受野尺寸：(3-1)*2+3=7;</span><br><span class="line">特征图3在原图上的感受野尺寸：(7-1)*2+3=15;</span><br></pre></td></tr></table></figure><p>特征图像素点对应上一个特征图的感受野中心坐标：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub><mo>=</mo><msub><mi>s</mi><mi>i</mi></msub><mo>∗</mo><msub><mi>C</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>+</mo><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msub><mi>k</mi><mi>i</mi></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn><mo>−</mo><msub><mi>p</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C_{i}=s_{i} * C_{i+1} + ((k_{i}-1)/2-p_{i})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>这时候要考虑padding，因为坐标有影响。尺寸加上坐标就可以定位region proposal在特征图与特征图之间的映射关系。</p><blockquote><p>NIPS 2016的论文<a href="https://arxiv.org/abs/1701.04128">Understanding the Effective Receptive Field in Deep Convolutional Neural Networks</a>提出了有效感受野的概念，也就是说感受野内部的每个像素的作用和贡献不是相同的，有效感受野仅占理论感受野的一部分，一般中心较多，属高斯分布影响。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-1/receptive-field-solution.PNG" alt="How to compute the center of the receptive field"></p><p>上图是何恺明简化的计算中心点的公式，也就是计算region proposal左上和右下坐标点的方法。</p><p>设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub><mo>=</mo><mo stretchy="false">⌊</mo><mo stretchy="false">(</mo><msub><mi>k</mi><mi>i</mi></msub><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo><mo stretchy="false">⌋</mo></mrow><annotation encoding="application/x-tex">p_{i} = \lfloor (k_{i} /2) \rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord">2</span><span class="mclose">)</span><span class="mclose">⌋</span></span></span></span>，当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">k_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为奇数时，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>k</mi><mi>i</mi></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">p_{i}=(k_{i}-1)/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub><mo>=</mo><msub><mi>s</mi><mi>i</mi></msub><mo>×</mo><msub><mi>C</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">C_{i}=s_{i}\times C_{i+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>；当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">k_{i+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>为偶数时，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub><mo>=</mo><msub><mi>k</mi><mi>i</mi></msub><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">p_{i}=k_{i}/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord">2</span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub><mo>=</mo><msub><mi>s</mi><mi>i</mi></msub><mo>×</mo><msub><mi>C</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>−</mo><mn>0.5</mn></mrow><annotation encoding="application/x-tex">C_{i}=s_{i}\times C_{i+1}-0.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span></span></span></span>，由于坐标取的都是整数，所以近似认为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub><mo>=</mo><msub><mi>s</mi><mi>i</mi></msub><mo>×</mo><msub><mi>C</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">C_{i}=s_{i} \times C_{i+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>，也就是说感受野的中心坐标只跟步长以及后面的中心坐标有关，因此通过这种关系一步一步将原图的region proposal坐标映射到feature map上。另外，可能考虑到近似处理的原因，论文最后对映射到feature map上的坐标值做了进一步处理：</p><p>左上坐标值：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>=</mo><mo stretchy="false">⌊</mo><mi>x</mi><mi mathvariant="normal">/</mi><mi>s</mi><mo stretchy="false">⌋</mo><mo>+</mo><mn>1</mn><mo separator="true">,</mo><msup><mi>y</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>=</mo><mo stretchy="false">⌊</mo><mi>y</mi><mi mathvariant="normal">/</mi><mi>s</mi><mo stretchy="false">⌋</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^{&#x27;}=\lfloor x/s \rfloor + 1, y^{&#x27;} = \lfloor y/s \rfloor + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.94248em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.94248em;margin-right:0.05em;"><span class="pstrut" style="height:2.57948em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathdefault">x</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.13692em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.94248em;margin-right:0.05em;"><span class="pstrut" style="height:2.57948em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>；</p><p>右下坐标值：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>=</mo><mo stretchy="false">⌊</mo><mi>x</mi><mi mathvariant="normal">/</mi><mi>s</mi><mo stretchy="false">⌋</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><msup><mi>y</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>=</mo><mo stretchy="false">⌊</mo><mi>y</mi><mi mathvariant="normal">/</mi><mi>s</mi><mo stretchy="false">⌋</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^{&#x27;}=\lfloor x/s \rfloor - 1, y^{&#x27;} = \lfloor y/s \rfloor - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.94248em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.94248em;margin-right:0.05em;"><span class="pstrut" style="height:2.57948em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathdefault">x</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.13692em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.94248em;margin-right:0.05em;"><span class="pstrut" style="height:2.57948em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>；</p><p>也就是说，把区域缩小一点（左上点下移，右下点上移），应该是何恺明考虑到最后feature map上的点计算感受野映射回去的时候扩大了区域，所以做了一个这么经验化的处理。</p><p><strong>最后总结一下SPP方法，通过原图region proposal的左上和右下坐标，分别以各自作为中心坐标扩展出感受野大小的区域，然后映射到feature map上，找到对应的像素点，这样就定位出了原图region proposal对应的特征，然后对该特征进行预设金字塔尺寸的池化，最后对不同的特征图reshape，“叠”在一起给fc层，进行分类。</strong></p><h2 id="fast-r-cnn"><a href="https://www.cv-foundation.org/openaccess/content_iccv_2015/papers/Girshick_Fast_R-CNN_ICCV_2015_paper.pdf">Fast R-CNN</a></h2><h3 id="introduction">Introduction</h3><p>内容有参考：</p><ul><li><p><a href="https://zhuanlan.zhihu.com/p/24780395">blog1</a>, <a href="https://blog.csdn.net/WoPawn/article/details/52463853">blog2</a>, <a href="https://blog.deepsense.ai/region-of-interest-pooling-explained/">blog3-RoI pooling</a></p></li><li><p>Ross Girshick在ICCV 2015上对自己论文的讲解，在他的个人<a href="https://www.rossgirshick.info/">主页</a>可以找到slide</p></li></ul><p>Fast R-CNN吸收了SPPNet的优点，并针对R-CNN冗余的的多推理结构，以及带来的占用内存资源多，推理速度慢的问题进行了改进，采用shared computation和mutli-task  learning将整个流程（原始图像region proposal提取除外）合在了一个网络中，最终使得推理速度得到了显著提升，占用内存减小，训练也更加容易便捷。</p><p><strong>R-CNN的问题</strong></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-1/slow-RCNN.PNG" alt="R-CNN结构示意"></p><ul><li>分阶段训练，多个步骤，首先是softmax分类网络，然后时linear  SVM分类器，最后是bounding-box regression，而且每个阶段的训练样本都得按照各自的规则重新选取；</li><li>训练时间很长（84h），region proposals 要一个个地进行resize，然后一个个送进网络，占用大量硬盘空间；</li><li>训练好的结构推理时间长（利用vgg16 backbone一张图片47s）；</li></ul><p><strong>SPPNet的问题</strong></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-1/SPP-net.PNG" alt="SPPNet结构示意"></p><p>SPP进行了图像级别的计算共享，只需在最后的feature map上进行region-wise computation计算，加速了推理时间。但是由于SPPNet的其他部分完全照搬R-CNN，所以也存在训练繁琐，训练时间长，占用磁盘空间大的问题。此外，Ross认为，SPPNet引入了一个新的问题：在训练时，SPP layer以下的卷积层等layer的参数无法更新。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-1/sppnet-problem.PNG" alt="训练时SPPNet的spp layer以下的层参数无法更新"></p><p>其原因主要跟mini-batch sample样本的策略有关，Ross也在其ICCV 2015的oral中解释了。SPPNet在训练时，一个batch随机采样128个regional proposal，这样的话样本有很大概率是来自于不同的图片，特征图上的一个proposal对应到原图上的感受野通常很大，最坏的情况是感受野是整个图像，那么每个batch可能就要去计算很多个几乎是整幅图像的梯度，而且不同图像间不能共享卷积计算和内容，反向传播会很慢且很耗内存。</p><p><strong>Fast R-CNN的优缺点</strong></p><ul><li><p>单个网络训练，占用内存少；</p></li><li><p>推理速度快，精度更高；</p></li><li><p>region proposal依然耗时；</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-1/fast-RCNN-testing.PNG" alt="Fast R-CNN网络结构示意图"></p><h3 id="content">Content</h3><p>如上图，Fast R-CNN的推理流程如下：</p><p>输入任意size的图片和Selective Search产生的region  proposals；原图经过一系列卷积层得到最终的特征图，并根据原region proposal找到feature map上的对应特征区域；对特征区域进行RoI pooling，得到固定大小的特征图，并经过fc层得到固定大小的特征向量（可由SVD分解加速推理）；特征向量继续向后传递产生两个branch，一个用softmax估计region proposal的类别（N+1个神经元），另一个回归bounding-box的平移和伸缩变换系数（4个神经元）；最后利用NMS剔除多余的框。</p><p><strong>RoI pooling</strong></p><p>RoI pooling是特殊的SPP，因为只有一个尺度的pooling，目的是为了不同尺寸的region proposal产生固定size的输出，兼容后面的fc层。论文中提到使用多尺度pooling对精度会有较小的提升，但是会带来成倍的计算量，所以只用单尺度是一种trade-off。此外RoI pooling的网格尺寸是自适应的，利用原proposal大小和期望输出的大小进行计算。</p><p>由于RoI pooling采用max pooling，是可微分的，用于BP进行反向传播更新参数。但是由于一幅图像中不同proposal之间内容会有重叠，所以特征图上一个比较大的值可能出现在不同的pooling后的proposal上，因此论文提出直接将其相加。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-1/RoI-BP.PNG" alt="论文对RoI pooling 梯度计算的描述"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-1/differentiable-RoI.PNG" alt="梯度计算示意（前面提到的blog2也有相关内容的详细描述）"></p><p><strong>one-stage training–SGD &amp; multi-task loss</strong></p><p>如前所述，如果采取SPPNet mini-batch sample样本的方式，梯度计算会很慢，将会很难训练网络。Fast R-CNN采用了向同幅图片随机采多个region proposals（hierarchical sampling）来加快梯度计算和传递：先随机采两幅图片，然后从这两幅图像中分别再各自采取64（128/2）个proposals，这样的话感受野会有很大重叠，梯度计算就不会很慢，占用内存也不会太大。但是Ross认为这种方式可能会导致网络收敛很慢，因为proposals很多都是相关的，不过实际中并没有出现这个问题。</p><p>分类损失函数：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>c</mi><mi>l</mi><mi>s</mi></mrow></msub><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><mi>u</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mi>log</mi><mo>⁡</mo><msub><mi>p</mi><mi>u</mi></msub></mrow><annotation encoding="application/x-tex">L_{c l s}(p, u)=-\log p_{u}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">u</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，依然是交叉熵，分类采用softmax，未继续采用svm，实验证明采用前者精度更高，原因可能是因为多任务学习以及RoI pooling的作用。</p><p>回归损失函数不再是平方损失函数，而换成了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>m</mi><mi>o</mi><mi>o</mi><mi>t</mi><msub><mi>h</mi><mrow><mi>L</mi><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">smooth_{L1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>损失函数：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>l</mi><mi>o</mi><mi>c</mi></mrow></msub><mrow><mo fence="true">(</mo><msup><mi>t</mi><mi>u</mi></msup><mo separator="true">,</mo><mi>v</mi><mo fence="true">)</mo></mrow><mo>=</mo><munder><mo>∑</mo><mrow><mi>i</mi><mo>∈</mo><mo stretchy="false">{</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>w</mi><mo separator="true">,</mo><mi>h</mi><mo stretchy="false">}</mo></mrow></munder><msub><mo><mi mathvariant="normal">smooth</mi><mo>⁡</mo></mo><msub><mi>L</mi><mn>1</mn></msub></msub><mrow><mo fence="true">(</mo><msubsup><mi>t</mi><mi>i</mi><mi>u</mi></msubsup><mo>−</mo><msub><mi>v</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">L_{l o c}\left(t^{u}, v\right)=\sum_{i \in\{x, y, w, h\}} \operatorname{smooth}_{L_{1}}\left(t_{i}^{u}-v_{i}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.5660100000000003em;vertical-align:-1.516005em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.808995em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">∈</span><span class="mopen mtight">{</span><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">h</span><span class="mclose mtight">}</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516005em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop"><span class="mord mathrm">s</span><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">o</span><span class="mord mathrm">t</span><span class="mord mathrm">h</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mo><mi mathvariant="normal">smooth</mi><mo>⁡</mo></mo><msub><mi>L</mi><mn>1</mn></msub></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0.5</mn><msup><mi>x</mi><mn>2</mn></msup><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><mo>&lt;</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><mo>−</mo><mn>0.5</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> otherwise </mtext></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">\operatorname{smooth}_{L_{1}}(x)=\left\{\begin{array}{ll}{0.5 x^{2},} &amp; {|x|&lt;1} \\ {|x|-0.5,} &amp; {\text { otherwise }}\end{array}\right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mop"><span class="mop"><span class="mord mathrm">s</span><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">o</span><span class="mord mathrm">t</span><span class="mord mathrm">h</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mpunct">,</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord text"><span class="mord"> otherwise </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>回归分支输出预测的平移伸缩变换参数：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>t</mi><mi>u</mi></msup><mo>=</mo><mrow><mo fence="true">(</mo><msubsup><mi>t</mi><mi>x</mi><mi>u</mi></msubsup><mo separator="true">,</mo><msubsup><mi>t</mi><mi>y</mi><mi>u</mi></msubsup><mo separator="true">,</mo><msubsup><mi>t</mi><mi>w</mi><mi>u</mi></msubsup><mo separator="true">,</mo><msubsup><mi>t</mi><mi>h</mi><mi>u</mi></msubsup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">t^{u}=\left(t_{x}^{u}, t_{y}^{u}, t_{w}^{u}, t_{h}^{u}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.233108em;vertical-align:-0.383108em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span>，根据预测结果得到一个预测框，计算出真实平移伸缩参数：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mo>=</mo><mrow><mo fence="true">(</mo><msub><mi>v</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>y</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>w</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>h</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">v=\left(v_{x}, v_{y}, v_{w}, v_{h}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>，然后计算误差不断逼近即可。</p><p>训练中分类正样本是与GT的IoU属于[0.5,1]之间的proposal，负样本是与所有类别GT的IoU的最大值落在[0.1, 0.5)之间的proposal（0.1来自困难样本挖掘，论文中一笔带过），两者按照1：3配比（没有这个约束来平衡正负样本，训练出的模型精度会下降）。</p><p>Ross也在论文中做了对比实验，验证多任务学习确实多两者都有提升，也进一步说明这种一个流程下来的结构是符合期望也有不错的效果。</p><p>此外Ross也研究了多尺度训练和单尺度训练的问题（曾作为SPPNet的一个小contribution），也就是输入的原始图像的size不同，实验证明，deep neural network善于学习尺度不变性，对目标的scale不敏感，虽然多尺度效果效果确实好一点点，但是没必要以时间和硬件资源的牺牲来换取。</p><p><strong>SVD分解或许对提高目标检测的实时性有潜在的帮助</strong></p><p>由于开始提取出的region proposal比较多，所以大部分时间都会消耗在全连接层上（一张图片只要过一整遍卷积），为了提高速度，Ross实验了SVD分解全连接层，结果证明时间可以得到不小的提升，同时只损失很小的精度。</p><p>假设全连接层输入为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>，输出为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>，权重矩阵为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span></span>，尺寸为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi><mo>×</mo><mi>v</mi></mrow><annotation encoding="application/x-tex">u \times v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">u</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span>，则：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi>W</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">y = Wx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault">x</span></span></span></span></span></p><p>其计算复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi><mo>×</mo><mi>v</mi></mrow><annotation encoding="application/x-tex">u \times v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">u</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span>，现对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span></span>进行SVD分解，并用前<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>个特征值近似代替，则：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mo>=</mo><msub><mi>U</mi><mrow><mi>u</mi><mo>×</mo><mi>t</mi></mrow></msub><msub><mo>∑</mo><mrow><mi>t</mi><mo>×</mo><mi>t</mi></mrow></msub><msubsup><mi>V</mi><mrow><mi>v</mi><mo>×</mo><mi>t</mi></mrow><mi>T</mi></msubsup></mrow><annotation encoding="application/x-tex">W=U_{u \times t} \sum \nolimits_{t \times t}  V_{v \times t}^{T}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.7080410000000001em;vertical-align:-0.658041em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="mbin mtight">×</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol large-op" style="position:relative;top:-0.000004999999999977245em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.16915400000000003em;"><span style="top:-2.10029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">×</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.658041em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.891331em;"><span style="top:-2.4530000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mbin mtight">×</span><span class="mord mathdefault mtight">t</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.305331em;"><span></span></span></span></span></span></span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi>W</mi><mi>x</mi><mo>=</mo><mi>U</mi><mo>⋅</mo><mrow><mo fence="true">(</mo><mo>∑</mo><mo>⋅</mo><msup><mi>V</mi><mi>T</mi></msup><mo fence="true">)</mo></mrow><mo>⋅</mo><mi>x</mi><mo>=</mo><mi>U</mi><mo>⋅</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">y=W x=U \cdot\left(\sum \cdot V^{T}\right) \cdot x=U \cdot z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mop op-symbol large-op" style="position:relative;top:-0.000004999999999977245em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">⋅</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span></span></p><p>实际上上述操作将一个全连接层拆成两个小的全连接，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span>是中间的全连接层。经过SVD分解后的计算复杂度变为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi><mo>×</mo><mi>t</mi><mo>+</mo><mi>v</mi><mo>×</mo><mi>t</mi></mrow><annotation encoding="application/x-tex">u \times t + v \times t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">u</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69841em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>，如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>比<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">min(u,v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span>小不少的话，可以显著减少计算量。</p><p><strong>more proposals is harmful</strong></p><p>由于region proposal的提取直接影响着后面检测的准确度，为了更高的recall，就要尽可能让region proposal覆盖到所有图像中的object，所以生成越多可能越好，但是Ross在实验中发现并不是这样，逐步增多Selective Search生成的region proposal的数量，发现mAP先增大后减小，我猜想可能是因为太多的proposal导致了相似信息增多，使得网络训练出现过拟合。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-1/more-proposals-is-harmful.PNG" alt="多数量的proposal并不会增高检测精度"></p><h3 id="discussion">Discussion</h3><p>Ross官方吐槽：一体化proposal提取。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-1/further-work-fast-rcnn.PNG" alt="Fast R-CNN进一步可以改进的地方"></p><h2 id="faster-r-nn"><a href="https://arxiv.org/pdf/1506.01497.pdf">Faster R-NN</a></h2><h3 id="introduction">Introduction</h3><p>内容有参考：</p><ul><li><p><a href="https://zhuanlan.zhihu.com/p/31426458">blog1</a>, <a href="https://zhuanlan.zhihu.com/p/24916624">blog2</a>, <a href="https://blog.csdn.net/WoPawn/article/details/52223282">blog3</a>, <a href="https://arleyzhang.github.io/articles/21c44637/">blog4</a>, <a href="http://www.telesens.co/2018/03/11/object-detection-and-classification-using-r-cnns/">blog5</a>, <a href="https://blog.csdn.net/XiangJiaoJun_/article/details/85008477">blog6</a>;—时间短直接看blog1和blog5</p></li><li><p>Ross Girshick 在ICCV2015tutorial上的演讲<a href="http://mp7.watson.ibm.com/ICCV2015/slides/iccv15_tutorial_training_rbg.pdf">Training R-CNNs of Various Velocities: Slow, Fast, and Faster</a></p></li></ul><p>Faster  R-CNN的主要贡献在于提出anchor机制，利用RPN网络和Fast R-CNN一体化检测框架，实现一个完全end-to-end的目标检测网络。因此，阅读该论文需要解决两个主要问题，而且大部分内容应该着重解决第一个问题：</p><ul><li><p>RPN是如何工作的，具体设计流程和实现细节？</p></li><li><p>PRN加上Fast R-CNN怎么训练？</p></li></ul><h3 id="content">Content</h3><p><strong>Faster R-CNN是个非常复杂和精细的结构，包含了很多细节和参数，只通过读论文去完全了解是不现实的，想真正理解必须要去读下源码，如果能手撕出来的话就更好了。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-1/FasterRCNN_architecture.png" alt="FasterRCNN_architecture，图来自blog5"></p><p>上图是Faster R-CNN的整体网络框架，图片在进入网络前要减去RGB三通道像素均值，并适当resize处理。处理好的图像矩阵送入一系列卷积层进行特征提取，过max pooling缩小特征图尺寸，在特定的卷积层后，特征图送入RPN网络，再过一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">3\times 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>的卷积层，然后分别送入两个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1 \times 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>的卷积层对生成的anchor进行前景/背景的二分类，并对其进行靠近GT的坐标回归修正；之后从中挑出topN的已经修正过坐标的anchor给RoI pooling从最后的特征图（输入PRN的特征图和RoI pooling的特征图是一样的）中抠出相应的feature region然后合成固定长度的向量送给最后的fc层去分类所有的类别，回归所有类别的坐标，进行二次修正。</p><p><strong>RPN</strong></p><p>RPN的全称是Region Proposal Network，是用以替代R-CNN和Fast R-CNN中的Selective Search方法，实现端对端的object预选框的提取工作。神经网络擅长于分类，同时我们结合R-CNN等前人的工作，要想通过网络去提取出一系列预选框该怎么做？以往经典视觉是通过滑动窗口或者图像金字塔的方法，但是类似的方法移植到网络上太费时间：可以用不同的卷积核代表滑动窗口，然后卷完再分类；用不同尺寸的特征图代表图像金字塔，然后再分类，这样的话就等于几乎复制了一遍R-CNN这样的架构，速度可能会更慢。因此，任少卿采取了pyramids-of-filter，pyramids-of-images之外的另一种替代的方法：pyramids-of-reference-boxes，也就是说，在RPN里面，我们自己预先根据一定的规则，生成许多的矩形框，覆盖住整个图像的几乎每个object的内容，然后再用网络去识别哪些是“好的”，哪些是“坏的”，然后让“好的”尽量好点，送给Fast R-CNN去进一步识别检测，“坏的”直接丢弃掉。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-1/pyramids_of_achors.PNG" alt="pyramids-of-images, pyramids-of-filters, pyramids-of-reference-boxes"></p><p>这些参考框称为anchor，具体生成方式如下：</p><p>参照Faster R-CNN的网络结构图，假设输入给RPN的特征图尺寸比原图缩小了16倍，特征图上的每一个像素点，或者说grid，可以看作是原图的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>16</mn><mo>×</mo><mn>16</mn></mrow><annotation encoding="application/x-tex">16 \times 16</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">6</span></span></span></span>的gird的缩小版，然后以每个原图上的这些<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>16</mn><mo>×</mo><mn>16</mn></mrow><annotation encoding="application/x-tex">16 \times 16</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">6</span></span></span></span>的grid的中心为参考点，画出预设面积和宽高比的矩形框，这就作为一个初始的预选框。论文设置了三个anchor scale（代表面积）和三个宽高比，分别是[8, 16, 32]，[0.5, 1, 2]，其中anchor scale的base是16，也就是说预设的面积分别是：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>16</mn><mo>×</mo><mn>8</mn><mo>=</mo><mn>128</mn><mo separator="true">,</mo><mn>16</mn><mo>×</mo><mn>16</mn><mo>=</mo><mn>256</mn><mo separator="true">,</mo><mn>32</mn><mo>×</mo><mn>16</mn><mo>=</mo><mn>512</mn></mrow><annotation encoding="application/x-tex">16 \times 8 = 128, 16 \times 16 = 256, 32 \times 16 = 512</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">8</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">1</span><span class="mord">2</span></span></span></span>，宽高为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>r</mi><mi>e</mi><mi>a</mi><mo>×</mo><msqrt><mrow><mi>a</mi><mi>s</mi><mi>p</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>r</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi></mrow></msqrt><mo separator="true">,</mo><mi>a</mi><mi>r</mi><mi>e</mi><mi>a</mi><mo>×</mo><msqrt><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mi>a</mi><mi>s</mi><mi>p</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>r</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi></mrow></msqrt></mrow><annotation encoding="application/x-tex">area \times \sqrt{aspect ratio}, area \times \sqrt{1/aspectratio}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.22245999999999988em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8175400000000002em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">p</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span></span></span><span style="top:-2.77754em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.22245999999999988em;"><span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.30499999999999994em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord">1</span><span class="mord">/</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">p</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span></span></span><span style="top:-2.8950000000000005em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width="400em" height="1.28em" viewbox="0 0 400000 1296" preserveaspectratio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30499999999999994em;"><span></span></span></span></span></span></span></span></span>（这里说个题外话，在训练自己的数据集的时候，可能需要修改anchor scale和anchor aspect ratio，但是我自己平时实验发现，改anchor scale的作用稍微大点，比如检测小的目标的时候，改ratio效果就不怎么明显，我曾经统计了标注数据的长宽比例，然后根据此比例当作anchor aspect ratio训练，结果效果差不多，我猜想这可能就是二次回归修正的功劳，只要你覆盖到了，挑选到了就好说。）</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-1/anchors.png" alt="生成anchor示意图"></p><p>在第一次读论文的时候我以为是根据送进RPN的那个特征图的每个grid的感受野去得到原图的位置，然后画框，但是这样的话，每个grid在原图的位置就固定了，而每个grid代表的感受野不能像anchor那样去覆盖几乎所有的object，数量远不如anchor那么多，那么必然是会漏掉的。另外一点是跟PRN的网络结构有关。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-1/RPN_architecture.PNG" alt="RPN_architecture"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-1/RPN_Network.png" alt="详细的RPN_Network示意图"></p><p>看上面两个图，RPN不是用fc来分类和回归的，而是直接用全卷积来完成，有点类似FCN。一开始是对输入的特征图进行<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">3 \times 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>卷积，完成进一步特征提取，非线性化和降维之类的工作，然后再用两个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1 \times 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>卷积完成分类和回归，值得注意的是，里面的卷积操作不改变feature map的尺寸，也就是grid的数量不变，最后分类和回归卷积层输出的tensor的尺寸分别是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>9</mn><mo>×</mo><mn>2</mn><mo separator="true">,</mo><mi>h</mi><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><mn>9</mn><mo>×</mo><mn>4</mn><mo separator="true">,</mo><mi>h</mi><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(9 \times2, h, w), (9 \times 4, h, w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">9</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord">9</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span>，通道数分别为18（前景\背景2类，每个grid有9个anchor）和64（每个grid有9个anchor，每个anchor回归4个坐标），其后的reshape是便于softmax和回归处理。</p><p>也就是说，RPN通过全卷积，强制让网络去学习每个grid生成的9个预设anchor的质量，并进行适当的修正。实际上，我个人还是比较疑惑的，我不理解为什么这种形式可以去学习特征图在原图对应的anchor哪些是promising的，因为anchor只在训练时分配GT时有用，网络学习时并没有把anchor作为输入的一部分，但是事实证明，RPN确实可以学到，毕竟Faster R-CNN的检测效果摆在那儿。我大概猜测，特征图的每个grid经过<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">3 \times 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>卷积后，包含了这9个anchor的一些信息，再分别经过<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1 \times 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>卷积后又分别提取出了类别和坐标信息，网络隐式地学习到了anchor的存在以及他们的信息。</p><p>此外，论文中还提到anchor这种方式也具有平移不变性，就是你物体动了，我anchor也会跟着动，这对于图像分类问题来说是很好的一个特性，不管物体在哪个位置都要求较高的准确性。但是对于目标检测来说，还需要定位出物体在图片上的位置，因此平移不变性会抹掉这点。</p><p>RPN的训练和推理不是完全一样的。训练RPN时，预先产生的anchor数量很多，可能有上万个，这么多的框确实会包含到几乎所有的object信息，但是很多都是冗余的，也有很多是背景，因此不能全部拿去训练，否则不仅速度慢，效果可能还不好。</p><p>论文中训练的anchor总量只有256个（也就是说每次训练只有256个位置有GT，没有GT的就不去计算误差），但是每张图片生成的训练anchor的位置是不一样的，所以图片比较多，训练比较充足的情况下，基本上整个网络应该都是可以训练到的（但是我感觉有些anchor位置可能就是比较容易选中训练，比如原图中心部分）。</p><p>训练RPN时候需要先计算anchor的label和坐标变换系数：</p><ul><li><p>foreground认定：anchor box和GT box的IoU超过了设定阈值（论文是0.7），为了防止没有超过的，对于每一个GT box，anchor box跟它有最大IoU的也认为是前景框；</p></li><li><p>background认定：anchor box和GT box的IoU低于设定阈值（论文是0.3）；</p></li><li><p>落于两个阈值之间的认为是“don’t care”。此外，还有一个<code>TRAIN.RPN_FG_FRACTION</code>参数，一般是0.5，也就是每个batch size中采取的前景anchor只有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>256</mn><mo>×</mo><mn>0.5</mn><mo>=</mo><mn>128</mn></mrow><annotation encoding="application/x-tex">256 \times 0.5 =128</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">8</span></span></span></span>个，如果超过了，就随机挑128个。</p></li></ul><p>训练好的RPN需要给Fast R-CNN提供一些可靠的RoI，这时RPN进入推理阶段：</p><ul><li><p>将PRN输出的偏移量给原始的anchor，得到新的区域，同时带有置信度score；</p></li><li><p>对超出图像范围的框进行裁剪，保证框都在图像内部，这一步没有改变框的数量；</p></li><li><p>丢掉小于设定的最小尺寸(<code>TRAIN.RPN_MIN_SIZE = 8</code>)的anchor；</p></li><li><p>根据置信度，选择topK(<code>TRAIN.RPN_PRE_NMS_TOP_N = 12000</code>)个框，和设定的NMS(<code>TRAIN.RPN_NMS_THRESH = 0.7</code>)阈值，通过非极大抑制去除冗余的框；</p></li><li><p>从NMS之后的框中，选择得分为topN（<code>TRAIN.RPN_POST_NMS_TOP_N = 2000</code>）的框作为region proposal输入给Faster R-CNN；</p></li></ul><p>到此为止，RPN完成了类似Selective Search的工作。</p><p>类似于Fast R-CNN的操作，这些2000个region proposal并不会全部进行RoI pooling，而是从中挑出128个样本进行训练：</p><p>region proposal与任一GT box之间的IoU 大于阈值(<code>TRAIN.FG_THRESH=0.5</code>)认为是前景，在0.1(<code>TRAIN.BG_THRESH_LO</code>)和0.5(<code>TRAIN.BG_THRESH_HI</code>)之间认为是负样本；</p><p>从前景中挑出一定数量（batch size乘以比例）作为正样本，比例为<code>TRAIN.FG_FRACTION = 0.25</code>，如果正样本没有这么多，则全部选出来，其他的用负样本凑。</p><p>如果使用VGG16作为特征提取网络，那么送入RPN的特征图就是最后的特征图，然后利用RoI找到基于原图的128个region proposal对应在这个特征图上的特征向量，最后送到fc层进行分类和回归即可（回归坐标的时候有个bbox_inside_weights，只有前景的时候为1，背景为0，计算loss时候通过这个weight来抹掉背景）。</p><p>对于resnet101而言，网络相对而言已经很深了，上面提到的平移不变性此时在最后输出的特征图上基本已经消失了，包含的都是一些高层的语义信息，如果还是把最后的特征图给RPN，那么特征图再去卷积学习anchor的信息，然后提取，将会很难，最后的检测结果也不一定理想，所以此时送入RPN的特征图需要稍微往前些。一般我看的都是把Conv4出来的特征图送给RPN，然后RoI pooling提取出对应的特征区域后再过最后的Conv5，最后送入fc。</p><p>此外，RoI pooling也是影响Faster R-CNN精度的一个部分，后面出现了RoI Align（Mask R-CNN）, Crop pooling（<a href="https://arxiv.org/pdf/1506.02025.pdf">Spatial Transformer Networks</a>, <a href="https://zhuanlan.zhihu.com/p/37110107">blog</a>）, RoI warp（<a href="https://blog.csdn.net/Julialove102123/article/details/80567827">blog</a>）等取代，目的都是想尽可能地提高回归精度。这些细节我们后续再谈。</p><p>在利用Faster R-CNN进行预测的时候，跟训练Fast R-CNN部分差不多，但是region proposal的数量等参数会有所不同，比如PRN在NMS之前的nchor数量设置为6000，在NMS之后设置为300，然后Fast R-CNN直接对这300个进行推理，NMS之后输出预测框即可。</p><p><strong>如何训练Faster R-CNN?</strong></p><p>RPN网络的loss函数是二分类交叉熵和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>o</mi><mi>o</mi><mi>m</mi><mi>t</mi><mi>h</mi><mspace width="1em"><msub><mi>L</mi><mn>1</mn></msub></mspace></mrow><annotation encoding="application/x-tex">soomth \quad  L_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">o</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>回归损失：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>L</mi><mrow><mo fence="true">(</mo><mrow><mo fence="true">{</mo><msub><mi>p</mi><mi>i</mi></msub><mo fence="true">}</mo></mrow><mo separator="true">,</mo><mrow><mo fence="true">{</mo><msub><mi>t</mi><mi>i</mi></msub><mo fence="true">}</mo></mrow><mo fence="true">)</mo></mrow><mo>=</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mfrac><mn>1</mn><msub><mi>N</mi><mrow><mi>c</mi><mi>l</mi><mi>s</mi></mrow></msub></mfrac><munder><mo>∑</mo><mi>i</mi></munder><msub><mi>L</mi><mrow><mi>c</mi><mi>l</mi><mi>s</mi></mrow></msub><mrow><mo fence="true">(</mo><msub><mi>p</mi><mi>i</mi></msub><mo separator="true">,</mo><msubsup><mi>p</mi><mi>i</mi><mo lspace="0em" rspace="0em">∗</mo></msubsup><mo fence="true">)</mo></mrow><mo>+</mo><mi>λ</mi><mfrac><mn>1</mn><msub><mi>N</mi><mrow><mi>r</mi><mi>e</mi><mi>g</mi></mrow></msub></mfrac><munder><mo>∑</mo><mi>i</mi></munder><msubsup><mi>p</mi><mi>i</mi><mo lspace="0em" rspace="0em">∗</mo></msubsup><msub><mi>L</mi><mrow><mi>r</mi><mi>e</mi><mi>g</mi></mrow></msub><mrow><mo fence="true">(</mo><msub><mi>t</mi><mi>i</mi></msub><mo separator="true">,</mo><msubsup><mi>t</mi><mi>i</mi><mo lspace="0em" rspace="0em">∗</mo></msubsup><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><mtext>​</mtext></mrow><annotation encoding="application/x-tex">\begin{aligned} L\left(\left\{p_{i}\right\},\left\{t_{i}\right\}\right)=&amp; \frac{1}{N_{c l s}} \sum_{i} L_{c l s}\left(p_{i}, p_{i}^{*}\right) +\lambda \frac{1}{N_{r e g}} \sum_{i} p_{i}^{*} L_{r e g}\left(t_{i}, t_{i}^{*}\right) \end{aligned}​</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.899109em;vertical-align:-1.1995544999999999em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6995545000000003em;"><span style="top:-3.6995545000000005em;"><span class="pstrut" style="height:3.32144em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">}</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">}</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1995544999999999em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6995545000000003em;"><span style="top:-3.6995545000000005em;"><span class="pstrut" style="height:3.32144em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7386959999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">λ</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7386959999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7386959999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1995544999999999em;"><span></span></span></span></span></span></span></span><span class="mord">​</span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><msub><mi>N</mi><mrow><mi>c</mi><mi>l</mi><mi>s</mi></mrow></msub></mfrac><mo separator="true">,</mo><mfrac><mn>1</mn><msub><mi>N</mi><mrow><mi>r</mi><mi>e</mi><mi>g</mi></mrow></msub></mfrac><mo separator="true">,</mo><mi>λ</mi></mrow><annotation encoding="application/x-tex">\frac{1}{N_{c l s}}, \frac{1}{N_{r e g}},  \lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3874279999999999em;vertical-align:-0.5423199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4508599999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5423199999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">λ</span></span></span></span>分别是分类正负样本mini bacth size（256），anchor数量（大约2400）正则化系数和两个loss的权重系数，论文中说明前两个正则化系数可以不用，效果没差，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">λ</span></span></span></span>也不是敏感系数，取值扩大100倍也不会太影响精度。</p><p>回归部分依然是学习平移和缩放变换系数，按照我前面的说法，RPN是强制是学习有anchor这么个东西，然后再去学习辨别anchor，修正其位置。论文中给出的公式也说明，RPN应当是先学到anchor的位置，再去学GT的位置。当然，给回归部分的GT是anchor和对应GT box之间的变换系数。</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mi mathvariant="normal">x</mi></msub><mo>=</mo><mrow><mo fence="true">(</mo><mi>x</mi><mo>−</mo><msub><mi>x</mi><mi mathvariant="normal">a</mi></msub><mo fence="true">)</mo></mrow><mi mathvariant="normal">/</mi><msub><mi>w</mi><mi mathvariant="normal">a</mi></msub><mo separator="true">,</mo><mspace width="1em"><msub><mi>t</mi><mi mathvariant="normal">y</mi></msub><mo>=</mo><mrow><mo fence="true">(</mo><mi>y</mi><mo>−</mo><msub><mi>y</mi><mi mathvariant="normal">a</mi></msub><mo fence="true">)</mo></mrow><mi mathvariant="normal">/</mi><msub><mi>h</mi><mi mathvariant="normal">a</mi></msub><mspace linebreak="newline"></mspace><msub><mi>t</mi><mi mathvariant="normal">w</mi></msub><mo>=</mo><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mi>w</mi><mi mathvariant="normal">/</mi><msub><mi>w</mi><mi mathvariant="normal">a</mi></msub><mo fence="true">)</mo></mrow><mo separator="true">,</mo><mspace width="1em"><msub><mi>t</mi><mi mathvariant="normal">h</mi></msub><mo>=</mo><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mi>h</mi><mi mathvariant="normal">/</mi><msub><mi>h</mi><mi mathvariant="normal">a</mi></msub><mo fence="true">)</mo></mrow><mspace linebreak="newline"></mspace><msubsup><mi>t</mi><mi mathvariant="normal">x</mi><mo lspace="0em" rspace="0em">∗</mo></msubsup><mo>=</mo><mrow><mo fence="true">(</mo><msup><mi>x</mi><mo lspace="0em" rspace="0em">∗</mo></msup><mo>−</mo><msub><mi>x</mi><mi mathvariant="normal">a</mi></msub><mo fence="true">)</mo></mrow><mi mathvariant="normal">/</mi><msub><mi>w</mi><mi mathvariant="normal">a</mi></msub><mo separator="true">,</mo><mspace width="1em"><msubsup><mi>t</mi><mi mathvariant="normal">y</mi><mo lspace="0em" rspace="0em">∗</mo></msubsup><mo>=</mo><mrow><mo fence="true">(</mo><msup><mi>y</mi><mo lspace="0em" rspace="0em">∗</mo></msup><mo>−</mo><msub><mi>y</mi><mi mathvariant="normal">a</mi></msub><mo fence="true">)</mo></mrow><mi mathvariant="normal">/</mi><msub><mi>h</mi><mi mathvariant="normal">a</mi></msub><mspace linebreak="newline"></mspace><msubsup><mi>t</mi><mi mathvariant="normal">w</mi><mo lspace="0em" rspace="0em">∗</mo></msubsup><mo>=</mo><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msup><mi>w</mi><mo lspace="0em" rspace="0em">∗</mo></msup><mi mathvariant="normal">/</mi><msub><mi>w</mi><mi mathvariant="normal">a</mi></msub><mo fence="true">)</mo></mrow><mo separator="true">,</mo><mspace width="1em"><msubsup><mi>t</mi><mi mathvariant="normal">h</mi><mo lspace="0em" rspace="0em">∗</mo></msubsup><mo>=</mo><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msup><mi>h</mi><mo lspace="0em" rspace="0em">∗</mo></msup><mi mathvariant="normal">/</mi><msub><mi>h</mi><mi mathvariant="normal">a</mi></msub><mo fence="true">)</mo></mrow></mspace></mspace></mspace></mspace></mrow><annotation encoding="application/x-tex">t_{\mathrm{x}}=\left(x-x_{\mathrm{a}}\right) / w_{\mathrm{a}}, \quad t_{\mathrm{y}}=\left(y-y_{\mathrm{a}}\right) / h_{\mathrm{a}} \\t_{\mathrm{w}}=\log \left(w / w_{\mathrm{a}}\right), \quad t_{\mathrm{h}}=\log \left(h / h_{\mathrm{a}}\right) \\t_{\mathrm{x}}^{*}=\left(x^{*}-x_{\mathrm{a}}\right) / w_{\mathrm{a}}, \quad t_{\mathrm{y}}^{*}=\left(y^{*}-y_{\mathrm{a}}\right) / h_{\mathrm{a}} \\t_{\mathrm{w}}^{*}=\log \left(w^{*} / w_{\mathrm{a}}\right), \quad t_{\mathrm{h}}^{*}=\log \left(h^{*} / h_{\mathrm{a}}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">x</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">a</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">a</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight" style="margin-right:0.01389em;">y</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">a</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">a</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight" style="margin-right:0.01389em;">w</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">a</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">h</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">h</span><span class="mord">/</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">a</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.9856959999999999em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7386959999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">x</span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.133108em;vertical-align:-0.383108em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">a</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">a</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight" style="margin-right:0.01389em;">y</span></span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">a</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">a</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.9856959999999999em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7386959999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight" style="margin-right:0.01389em;">w</span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">a</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7386959999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">h</span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">a</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p><p>Fast R-CNN部分的loss在前一节已经说了，就不再赘述，所以Faster R-CNN一共有rpn_cls, rpn_box, rcnn_cls, rcnn_box这四个loss。</p><p>最后需要解决的是Faster R-CNN是如何联合训练的问题。RPN结合Fast R-CNN有点像GAN，但是两者之间不是对抗的关系，而是相互依存的，而且Fast R-CNN更依赖具有良好性能的RPN多一点。作者在论文中分别提到了3种方法，分别是：<em>Alternating training, Approximate joint training, Non-approximate training</em></p><p><em>Alternating training</em>是分别训练两个网络，比如用CNN特征提取网络VGG16去初始化RPN，训练让其收敛，再让RPN产生的proposal去训练Fast R-CNN，让其收敛…循环往复；<em>Approximate joint training, Non-approximate training</em>都是将其当成一体的，直接利用SGD训练，两种的区别在于前者丢弃RPN的bbox预测梯度，后者则不丢弃，这两点论文都未细说具体细节，比如丢弃RPN的回归梯度的话，anchor还需要向GT box修正吗？</p><p>根据其他博客的内容，官方源码给出的训练思路是这样的（类似第一种交替迭代训练方法），估计这也是目前常用的流程（可能要看完源码之后才清楚这件事）：</p><ul><li><p>利用在ImageNet上预训练好的CNN模型，训练RPN；</p></li><li><p>利用上一步训练好的RPN产生的proposals训练已被ImageNet预训练模型初始化的Fast R-CNN：</p></li><li><p>利用上一步的Fast R-CNN初始化RPN，不更新共享的特征提取网络，仅仅更新RPN独有的卷积层，重新训练RPN；</p></li><li><p>加入Fast R-CNN，形成一个整体，但是只训练Fast R-CNN特有的卷积层和fc层，共享卷积层参数冻结，proposals来自上一步训练好的RPN；</p></li></ul><p>上述过程类似迭代训练并且进行了两次，作者提到循环多次没有更多的提升。</p><h3 id="discussion">Discussion</h3><p>Faster R-CNN中最大的contribution可能就是anchor的使用了，解决了物体中尺度的多样性问题。此外，根据这篇<a href="https://zhuanlan.zhihu.com/p/73024408">博客</a>的内容，anchor的使用还顺带解决了<strong>gt box与gt box之间overlap过大导致gt box丢失问题</strong>。大意就是两个不同的物体标的框重合度很大，导致CNN特征图里面也分不清了，这样的话这两个物体可能一起存在特征图的一个grid里面，就会丢掉一个物体，但是anchor是在原图搜的，每个grid都有不同尺度的内容，因此可以一定程度缓解recall降低（漏检）的问题。当然“抠图”来进行二次回归的操作，也一定程度上解决了级联回归的feature alignment问题。</p><p>（最近的新文章: <a href="https://arxiv.org/pdf/1912.05190.pdf">IoU-uniform R-CNN: Breaking Through the Limitations of RPN</a>，还没来得及看，后面搞懂了再来开一篇说下，顺便也加上anchor  free）</p><p>基于pytorch的<a href="https://github.com/jwyang/faster-rcnn.pytorch/tree/pytorch-1.0">faster rcnn</a>中的<a href="https://github.com/jwyang/faster-rcnn.pytorch/blob/pytorch-1.0/lib/model/utils/config.py">config</a>文件，里面设置了几乎所有的参数：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Training options</span><br><span class="line">#</span><br><span class="line">__C.TRAIN = edict()</span><br><span class="line"></span><br><span class="line"># Initial learning rate</span><br><span class="line">__C.TRAIN.LEARNING_RATE = 0.001</span><br><span class="line"></span><br><span class="line"># Momentum</span><br><span class="line">__C.TRAIN.MOMENTUM = 0.9</span><br><span class="line"></span><br><span class="line"># Weight decay, for regularization</span><br><span class="line">__C.TRAIN.WEIGHT_DECAY = 0.0005</span><br><span class="line"></span><br><span class="line"># Factor for reducing the learning rate</span><br><span class="line">__C.TRAIN.GAMMA = 0.1</span><br><span class="line"></span><br><span class="line"># Step size for reducing the learning rate, currently only support one step</span><br><span class="line">__C.TRAIN.STEPSIZE = [30000]</span><br><span class="line"></span><br><span class="line"># Iteration intervals for showing the loss during training, on command line interface</span><br><span class="line">__C.TRAIN.DISPLAY = 10</span><br><span class="line"></span><br><span class="line"># Whether to double the learning rate for bias</span><br><span class="line">__C.TRAIN.DOUBLE_BIAS = True</span><br><span class="line"></span><br><span class="line"># Whether to initialize the weights with truncated normal distribution</span><br><span class="line">__C.TRAIN.TRUNCATED = False</span><br><span class="line"></span><br><span class="line"># Whether to have weight decay on bias as well</span><br><span class="line">__C.TRAIN.BIAS_DECAY = False</span><br><span class="line"></span><br><span class="line"># Whether to add ground truth boxes to the pool when sampling regions</span><br><span class="line">__C.TRAIN.USE_GT = False</span><br><span class="line"></span><br><span class="line"># Whether to use aspect-ratio grouping of training images, introduced merely for saving</span><br><span class="line"># GPU memory</span><br><span class="line">__C.TRAIN.ASPECT_GROUPING = False</span><br><span class="line"></span><br><span class="line"># The number of snapshots kept, older ones are deleted to save space</span><br><span class="line">__C.TRAIN.SNAPSHOT_KEPT = 3</span><br><span class="line"></span><br><span class="line"># The time interval for saving tensorflow summaries</span><br><span class="line">__C.TRAIN.SUMMARY_INTERVAL = 180</span><br><span class="line"></span><br><span class="line"># Scale to use during training (can list multiple scales)</span><br><span class="line"># The scale is the pixel size of an image&#x27;s shortest side</span><br><span class="line">__C.TRAIN.SCALES = (600,)</span><br><span class="line"></span><br><span class="line"># Max pixel size of the longest side of a scaled input image</span><br><span class="line">__C.TRAIN.MAX_SIZE = 1000</span><br><span class="line"></span><br><span class="line"># Trim size for input images to create minibatch</span><br><span class="line">__C.TRAIN.TRIM_HEIGHT = 600</span><br><span class="line">__C.TRAIN.TRIM_WIDTH = 600</span><br><span class="line"></span><br><span class="line"># Images to use per minibatch</span><br><span class="line">__C.TRAIN.IMS_PER_BATCH = 1</span><br><span class="line"></span><br><span class="line"># Minibatch size (number of regions of interest [ROIs])</span><br><span class="line">__C.TRAIN.BATCH_SIZE = 128</span><br><span class="line"></span><br><span class="line"># Fraction of minibatch that is labeled foreground (i.e. class &gt; 0)</span><br><span class="line">__C.TRAIN.FG_FRACTION = 0.25</span><br><span class="line"></span><br><span class="line"># Overlap threshold for a ROI to be considered foreground (if &gt;= FG_THRESH)</span><br><span class="line">__C.TRAIN.FG_THRESH = 0.5</span><br><span class="line"></span><br><span class="line"># Overlap threshold for a ROI to be considered background (class = 0 if</span><br><span class="line"># overlap in [LO, HI))</span><br><span class="line">__C.TRAIN.BG_THRESH_HI = 0.5</span><br><span class="line">__C.TRAIN.BG_THRESH_LO = 0.1</span><br><span class="line"></span><br><span class="line"># Use horizontally-flipped images during training?</span><br><span class="line">__C.TRAIN.USE_FLIPPED = True</span><br><span class="line"></span><br><span class="line"># Train bounding-box regressors</span><br><span class="line">__C.TRAIN.BBOX_REG = True</span><br><span class="line"></span><br><span class="line"># Overlap required between a ROI and ground-truth box in order for that ROI to</span><br><span class="line"># be used as a bounding-box regression training example</span><br><span class="line">__C.TRAIN.BBOX_THRESH = 0.5</span><br><span class="line"></span><br><span class="line"># Iterations between snapshots</span><br><span class="line">__C.TRAIN.SNAPSHOT_ITERS = 5000</span><br><span class="line"></span><br><span class="line"># solver.prototxt specifies the snapshot path prefix, this adds an optional</span><br><span class="line"># infix to yield the path: &lt;prefix&gt;[_&lt;infix&gt;]_iters_XYZ.caffemodel</span><br><span class="line">__C.TRAIN.SNAPSHOT_PREFIX = &#x27;res101_faster_rcnn&#x27;</span><br><span class="line"># __C.TRAIN.SNAPSHOT_INFIX = &#x27;&#x27;</span><br><span class="line"></span><br><span class="line"># Use a prefetch thread in roi_data_layer.layer</span><br><span class="line"># So far I haven&#x27;t found this useful; likely more engineering work is required</span><br><span class="line"># __C.TRAIN.USE_PREFETCH = False</span><br><span class="line"></span><br><span class="line"># Normalize the targets (subtract empirical mean, divide by empirical stddev)</span><br><span class="line">__C.TRAIN.BBOX_NORMALIZE_TARGETS = True</span><br><span class="line"># Deprecated (inside weights)</span><br><span class="line">__C.TRAIN.BBOX_INSIDE_WEIGHTS = (1.0, 1.0, 1.0, 1.0)</span><br><span class="line"># Normalize the targets using &quot;precomputed&quot; (or made up) means and stdevs</span><br><span class="line"># (BBOX_NORMALIZE_TARGETS must also be True)</span><br><span class="line">__C.TRAIN.BBOX_NORMALIZE_TARGETS_PRECOMPUTED = True</span><br><span class="line">__C.TRAIN.BBOX_NORMALIZE_MEANS = (0.0, 0.0, 0.0, 0.0)</span><br><span class="line">__C.TRAIN.BBOX_NORMALIZE_STDS = (0.1, 0.1, 0.2, 0.2)</span><br><span class="line"></span><br><span class="line"># Train using these proposals</span><br><span class="line">__C.TRAIN.PROPOSAL_METHOD = &#x27;gt&#x27;</span><br><span class="line"></span><br><span class="line"># Make minibatches from images that have similar aspect ratios (i.e. both</span><br><span class="line"># tall and thin or both short and wide) in order to avoid wasting computation</span><br><span class="line"># on zero-padding.</span><br><span class="line"></span><br><span class="line"># Use RPN to detect objects</span><br><span class="line">__C.TRAIN.HAS_RPN = True</span><br><span class="line"># IOU &gt;= thresh: positive example</span><br><span class="line">__C.TRAIN.RPN_POSITIVE_OVERLAP = 0.7</span><br><span class="line"># IOU &lt; thresh: negative example</span><br><span class="line">__C.TRAIN.RPN_NEGATIVE_OVERLAP = 0.3</span><br><span class="line"># If an anchor statisfied by positive and negative conditions set to negative</span><br><span class="line">__C.TRAIN.RPN_CLOBBER_POSITIVES = False</span><br><span class="line"># Max number of foreground examples</span><br><span class="line">__C.TRAIN.RPN_FG_FRACTION = 0.5</span><br><span class="line"># Total number of examples</span><br><span class="line">__C.TRAIN.RPN_BATCHSIZE = 256</span><br><span class="line"># NMS threshold used on RPN proposals</span><br><span class="line">__C.TRAIN.RPN_NMS_THRESH = 0.7</span><br><span class="line"># Number of top scoring boxes to keep before apply NMS to RPN proposals</span><br><span class="line">__C.TRAIN.RPN_PRE_NMS_TOP_N = 12000</span><br><span class="line"># Number of top scoring boxes to keep after applying NMS to RPN proposals</span><br><span class="line">__C.TRAIN.RPN_POST_NMS_TOP_N = 2000</span><br><span class="line"># Proposal height and width both need to be greater than RPN_MIN_SIZE (at orig image scale)</span><br><span class="line">__C.TRAIN.RPN_MIN_SIZE = 8</span><br><span class="line"># Deprecated (outside weights)</span><br><span class="line">__C.TRAIN.RPN_BBOX_INSIDE_WEIGHTS = (1.0, 1.0, 1.0, 1.0)</span><br><span class="line"># Give the positive RPN examples weight of p * 1 / &#123;num positives&#125;</span><br><span class="line"># and give negatives a weight of (1 - p)</span><br><span class="line"># Set to -1.0 to use uniform example weighting</span><br><span class="line">__C.TRAIN.RPN_POSITIVE_WEIGHT = -1.0</span><br><span class="line"># Whether to use all ground truth bounding boxes for training,</span><br><span class="line"># For COCO, setting USE_ALL_GT to False will exclude boxes that are flagged as &#x27;&#x27;iscrowd&#x27;&#x27;</span><br><span class="line">__C.TRAIN.USE_ALL_GT = True</span><br><span class="line"></span><br><span class="line"># Whether to tune the batch normalization parameters during training</span><br><span class="line">__C.TRAIN.BN_TRAIN = False</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Testing options</span><br><span class="line">#</span><br><span class="line">__C.TEST = edict()</span><br><span class="line"></span><br><span class="line"># Scale to use during testing (can NOT list multiple scales)</span><br><span class="line"># The scale is the pixel size of an image&#x27;s shortest side</span><br><span class="line">__C.TEST.SCALES = (600,)</span><br><span class="line"></span><br><span class="line"># Max pixel size of the longest side of a scaled input image</span><br><span class="line">__C.TEST.MAX_SIZE = 1000</span><br><span class="line"></span><br><span class="line"># Overlap threshold used for non-maximum suppression (suppress boxes with</span><br><span class="line"># IoU &gt;= this threshold)</span><br><span class="line">__C.TEST.NMS = 0.3</span><br><span class="line"></span><br><span class="line"># Experimental: treat the (K+1) units in the cls_score layer as linear</span><br><span class="line"># predictors (trained, eg, with one-vs-rest SVMs).</span><br><span class="line">__C.TEST.SVM = False</span><br><span class="line"></span><br><span class="line"># Test using bounding-box regressors</span><br><span class="line">__C.TEST.BBOX_REG = True</span><br><span class="line"></span><br><span class="line"># Propose boxes</span><br><span class="line">__C.TEST.HAS_RPN = False</span><br><span class="line"></span><br><span class="line"># Test using these proposals</span><br><span class="line">__C.TEST.PROPOSAL_METHOD = &#x27;gt&#x27;</span><br><span class="line"></span><br><span class="line">## NMS threshold used on RPN proposals</span><br><span class="line">__C.TEST.RPN_NMS_THRESH = 0.7</span><br><span class="line">## Number of top scoring boxes to keep before apply NMS to RPN proposals</span><br><span class="line">__C.TEST.RPN_PRE_NMS_TOP_N = 6000</span><br><span class="line"></span><br><span class="line">## Number of top scoring boxes to keep after applying NMS to RPN proposals</span><br><span class="line">__C.TEST.RPN_POST_NMS_TOP_N = 300</span><br><span class="line"></span><br><span class="line"># Proposal height and width both need to be greater than RPN_MIN_SIZE (at orig image scale)</span><br><span class="line">__C.TEST.RPN_MIN_SIZE = 16</span><br><span class="line"></span><br><span class="line"># Testing mode, default to be &#x27;nms&#x27;, &#x27;top&#x27; is slower but better</span><br><span class="line"># See report for details</span><br><span class="line">__C.TEST.MODE = &#x27;nms&#x27;</span><br><span class="line"></span><br><span class="line"># Only useful when TEST.MODE is &#x27;top&#x27;, specifies the number of top proposals to select</span><br><span class="line">__C.TEST.RPN_TOP_N = 5000</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># ResNet options</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">__C.RESNET = edict()</span><br><span class="line"></span><br><span class="line"># Option to set if max-pooling is appended after crop_and_resize.</span><br><span class="line"># if true, the region will be resized to a square of 2xPOOLING_SIZE,</span><br><span class="line"># then 2x2 max-pooling is applied; otherwise the region will be directly</span><br><span class="line"># resized to a square of POOLING_SIZE</span><br><span class="line">__C.RESNET.MAX_POOL = False</span><br><span class="line"></span><br><span class="line"># Number of fixed blocks during training, by default the first of all 4 blocks is fixed</span><br><span class="line"># Range: 0 (none) to 3 (all)</span><br><span class="line">__C.RESNET.FIXED_BLOCKS = 1</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># MobileNet options</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">__C.MOBILENET = edict()</span><br><span class="line"></span><br><span class="line"># Whether to regularize the depth-wise filters during training</span><br><span class="line">__C.MOBILENET.REGU_DEPTH = False</span><br><span class="line"></span><br><span class="line"># Number of fixed layers during training, by default the first of all 14 layers is fixed</span><br><span class="line"># Range: 0 (none) to 12 (all)</span><br><span class="line">__C.MOBILENET.FIXED_LAYERS = 5</span><br><span class="line"></span><br><span class="line"># Weight decay for the mobilenet weights</span><br><span class="line">__C.MOBILENET.WEIGHT_DECAY = 0.00004</span><br><span class="line"></span><br><span class="line"># Depth multiplier</span><br><span class="line">__C.MOBILENET.DEPTH_MULTIPLIER = 1.</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># MISC</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line"># The mapping from image coordinates to feature map coordinates might cause</span><br><span class="line"># some boxes that are distinct in image space to become identical in feature</span><br><span class="line"># coordinates. If DEDUP_BOXES &gt; 0, then DEDUP_BOXES is used as the scale factor</span><br><span class="line"># for identifying duplicate boxes.</span><br><span class="line"># 1/16 is correct for &#123;Alex,Caffe&#125;Net, VGG_CNN_M_1024, and VGG16</span><br><span class="line">__C.DEDUP_BOXES = 1. / 16.</span><br><span class="line"></span><br><span class="line"># Pixel mean values (BGR order) as a (1, 1, 3) array</span><br><span class="line"># We use the same pixel mean for all networks even though it&#x27;s not exactly what</span><br><span class="line"># they were trained with</span><br><span class="line">__C.PIXEL_MEANS = np.array([[[102.9801, 115.9465, 122.7717]]])</span><br><span class="line"></span><br><span class="line"># For reproducibility</span><br><span class="line">__C.RNG_SEED = 3</span><br><span class="line"></span><br><span class="line"># A small number that&#x27;s used many times</span><br><span class="line">__C.EPS = 1e-14</span><br><span class="line"></span><br><span class="line"># Root directory of project</span><br><span class="line">__C.ROOT_DIR = osp.abspath(osp.join(osp.dirname(__file__), &#x27;..&#x27;, &#x27;..&#x27;, &#x27;..&#x27;))</span><br><span class="line"></span><br><span class="line"># Data directory</span><br><span class="line">__C.DATA_DIR = osp.abspath(osp.join(__C.ROOT_DIR, &#x27;data&#x27;))</span><br><span class="line"></span><br><span class="line"># Name (or path to) the matlab executable</span><br><span class="line">__C.MATLAB = &#x27;matlab&#x27;</span><br><span class="line"></span><br><span class="line"># Place outputs under an experiments directory</span><br><span class="line">__C.EXP_DIR = &#x27;default&#x27;</span><br><span class="line"></span><br><span class="line"># Use GPU implementation of non-maximum suppression</span><br><span class="line">__C.USE_GPU_NMS = True</span><br><span class="line"></span><br><span class="line"># Default GPU device id</span><br><span class="line">__C.GPU_ID = 0</span><br><span class="line"></span><br><span class="line">__C.POOLING_MODE = &#x27;crop&#x27;</span><br><span class="line"></span><br><span class="line"># Size of the pooled region after RoI pooling</span><br><span class="line">__C.POOLING_SIZE = 7</span><br><span class="line"></span><br><span class="line"># Maximal number of gt rois in an image during Training</span><br><span class="line">__C.MAX_NUM_GT_BOXES = 20</span><br><span class="line"></span><br><span class="line"># Anchor scales for RPN</span><br><span class="line">__C.ANCHOR_SCALES = [8,16,32]</span><br><span class="line"></span><br><span class="line"># Anchor ratios for RPN</span><br><span class="line">__C.ANCHOR_RATIOS = [0.5,1,2]</span><br><span class="line"></span><br><span class="line"># Feature stride for RPN</span><br><span class="line">__C.FEAT_STRIDE = [16, ]</span><br><span class="line"></span><br><span class="line">__C.CUDA = False</span><br><span class="line"></span><br><span class="line">__C.CROP_RESIZE_WITH_MAX_POOL = True</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="ohem-online-hard-example-mining"><a href="https://arxiv.org/abs/1604.03540">OHEM(Online Hard Example Mining)</a></h2><h3 id="introduction">Introduction</h3><p>论文全称是&quot;Training Region-based Object Detectors with Online Hard Example Mining&quot;，<a href="https://github.com/abhi2610/ohem">code</a></p><p>内容有参考：<a href="https://blog.csdn.net/u012905422/article/details/52760669">blog1</a>, <a href="https://zhuanlan.zhihu.com/p/58162337">blog2</a></p><p>对样本进行挖掘，自动选出困难样本让网络学习，提高检测精度。</p><h3 id="content">Content</h3><p>传统机器学习方法，比如SVM，在进行分类训练时，会采取 ”hard negative mining“这样的bootstrapping策略对难以学习的样本进行选取。大致流程是先用正样本和随机采样的负样本组成初始训练数据集，训练一会之后（比如差不多收敛了），去掉容易分类的样本，然后加入一些现有模型不能很好判断的样本，重新进行训练，迭代几轮之后得到最后的分类模型。</p><p>Ross等人受到此方法的启发，想在基于region-conv-based这样的object detection方法上也进行困难样本的挖掘。</p><blockquote><p>Our motivation is the same as it has always been – detection datasets contain an overwhelming number of easy examples and a small number of hard examples</p></blockquote><p>原因有以下几点：</p><ul><li><p>基于深度学习的目标检测网络中，通常forground和background的region proposal数量很不均衡，负样本要比正样本多得多，这样会导致网络学习的focus被淹没；</p></li><li><p>每个样本对网络学习的贡献是不同的，学习过程中肯定出现容易和困难的样本，因此也需要网络自己去调节对他们的学习权重；</p></li><li><p>Fast R-CNN中对图像搜索出来的region proposal进行可正负样本1：3的配比，同时根据传统的hard negative mining得到了人工设置的IoU阈值0.1，去挑选负样本，虽然不是最优的方法，但是也是不能省去的部分，否则会掉点；</p></li></ul><p>因此，Ross等人专门在这篇paper中探讨样本选择问题，根据模型测试样本得到的误差大小来针对所有类别的样本自动进行挖掘（loss越大说明样本对该模型越难判断），故取名”online hard example mining“。但是不同于传统机器学习，此方法在神经网络上直接实施会存在以下问题:</p><ul><li><p>神经网络基于SGD随机梯度下降，在固定数据集上进行很多次迭代后才可以训练好的，如果先训练几个batch，然后froze参数，再去测试，然后挑出困难的样本，然后再去训练更新参数会大大拖慢模型产出的速度；</p></li><li><p>常规选择样本的方法是，首先将loss排序，然后选择loss比较大的一部分，其他的置0，这样就等于把其他样本认定为简单样本”丢掉了“，但是由于当时深度学习框架的限制，即使这些样本是0，但是依然占据空间，依然需要参与反向传播，并不能很好实现速加快和空间节省；</p></li></ul><p>考虑到这些现实问题，作者采取了折中的方法，由于计算loss和卷积层无关，卷积层只负责提取原始图像特征，loss计算只由RoI pooling+fc层决定，所以网络在卷积之后设置了两个RoI pooling+fc层，一个只读（读所有的proposal），用于计算loss，挑选样本（样本数量为B，类似Fast R-CNN的计算方式），不梯度下降，另一个负责正常的训练，样本来自于只读网络。两个之间权重参数是共享的，整体结构如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-1/OHEM_architecture.PNG" alt="Fast R-CNN+OHEM结构流程示意图"></p><p>考虑到RoI中可能存在一些具有重复区域的proposal，而这些样本可能会造成相同的loss，所以如果一个是困难样本，其他的IoU比较高的重复proposal也会被选进来，造成了样本的冗余，所以不仅需要排序loss，还需要对样本进行NMS处理。</p><blockquote><p>Given a list of RoIs and their losses, NMS works by iteratively selecting the RoI with the highest loss, and then removing all lower loss RoIs that have high overlap with the selected region. We use a relaxed IoU threshold of 0.7 to suppress only highly overlapping RoIs.</p></blockquote><p>作者根据上述思想在Pascal VOC和COCO数据集上对了一系列对比试验，包括对比hard negative mining(原Fast R-CNN设置的阈值0.1，用于选择background)，batch_size，B，以及加入了一些”bells and whistles&quot;（多尺度和迭代式检测框回归），结果都证明OHEM的效果良好，而且也容易实现，占用空间也不会很大，在某些类别的检测上有很大的精度提升（可能每个类的学习程度也不同，可能也可以挖掘下，open problem）。</p><p>此外，作者还提到如果不去选择的话，把样本全部都倒进去，那些容易的样本的loss很低，这样的话对梯度就没什么贡献，网络应该可以自己去focus那些困难的样本。作者据此也设计了实验，对不同方法的loss做了可视化，最终发现，OHEM的效果确实最好，lower loss，higher mAP。</p><h3 id="discussion">Discussion</h3><p>OHEM是在two-stage的检测框架上提出和实现的，主要关注困难的样本，抛弃容易的样本。这种主动选择样本的方式，一方面可能间接平衡了训练的样本比例，另一方面提升了网络学习的针对性。在one -stage检测框架上提出的focal loss，也是为了处理相似的问题，通过权重分配，加大对分错样本的惩罚力度，让网络主动挖掘那些样本比例较少的类别。不过focal loss接受了所有样本，并没有完全抛弃容易的样本，而且也更加容易部署，因此两者是否可以结合，产出更有效的学习criterion，也值得去思考一下。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;about&quot;&gt;About&lt;/h2&gt;
&lt;p&gt;Faster  R-CNN是目标检测领域中&amp;quot;two-stage&amp;quot;的代表性方法，其精度高，适应性强，兼具学术和工程价值。整个框架由于吸取了很多先前工作的经验，因此比较庞大，而且细节很多，因此需要认真研读下相关paper和Faster R-CNN的python代码。&lt;/p&gt;
&lt;p&gt;在此之前，先贴上一位博主做的“&lt;a href=&quot;https://nikasa1889.github.io/2017/05/02/The-Modern-History-of-Object-Recognition-%E2%80%94-Infographic-1/&quot;&gt;The Modern History of Object Recognition — Infographic&lt;/a&gt;”，其中也包括了“one-stage&amp;quot;的方法，不过2017年以后的没再更新了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/RCNNseries-1/HistoryOfObjectRecognition.png&quot; alt=&quot;modern history of object recognition&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="论文阅读" scheme="http://densecollections.top/categories/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="computer vision" scheme="http://densecollections.top/tags/computer-vision/"/>
    
    <category term="deep learning" scheme="http://densecollections.top/tags/deep-learning/"/>
    
    <category term="object detection" scheme="http://densecollections.top/tags/object-detection/"/>
    
    <category term="semantic segmentation" scheme="http://densecollections.top/tags/semantic-segmentation/"/>
    
  </entry>
  
  <entry>
    <title>FutureMapping2</title>
    <link href="http://densecollections.top/posts/FutureMappingofAJD-2/"/>
    <id>http://densecollections.top/posts/FutureMappingofAJD-2/</id>
    <published>2019-11-17T08:24:29.000Z</published>
    <updated>2022-09-09T03:29:27.175Z</updated>
    
    <content type="html"><![CDATA[<h2 id="about">About</h2><p>继第一篇<a href="https://arxiv.org/abs/1803.11288">FutureMapping</a>之后，视觉SLAM领域内的奠基者Andrew Davison最近又将他的和别人讨论的有关未来空间AI对地图构建，机器人协同定位，以及动态问题等新想法撰写成了新的论文<a href="https://arxiv.org/abs/1910.14139">FutureMapping2</a>，置顶在了自己的推特上，表示欢迎大家交流自己的想法。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/FutureMappingofAJD-2/Andrew-twitter.PNG" alt="Andrew-twitter"></p><p>总的来说，这篇文章干货还算是很多的，主要是着眼于factor graph（因子图）和Gaussian Belief Propagation（GBP，高斯置信传播）对整体，动态机器人建图等问题的潜力和前景，不仅在数学上进行一些tutorial，还给出了三个python demos。由于我对视觉SLAM只是了解整体特点，其中各种计算细节和优化方法并没有认真看过和代码书写过，因此读完这篇充满amazing reflections的文章之后我只能把握到整体的idea和一些实现方法。对于GBP和factor graph 结合构建的数学模型，我将在后续花时间弄懂后再对该blog进行补充。</p><p><strong>非常建议对SLAM或者机器视觉领域感兴趣的同行阅读此论文，相信会帮助您开阔思路！</strong></p><span id="more"></span><h2 id="content">Content</h2><h3 id="idea">Idea</h3><blockquote><p>Abstract:  We argue the case for Gaussian Belief Propagation (GBP) as a strong algorithmic framework for the distributed, generic and incremental probabilistic estimation we need in Spatial AI as we aim at high performance smart robots and devices which operate within the constraints of real products. Processor hardware is changing rapidly, and GBP has the right character to take advantage of highly distributed processing and storage while estimating global quantities, as well as great flexibility. We present a detailed tutorial on GBP, relating to the standard factor graph formulation used in robotics and computer vision, and give several simulation examples with code which demonstrate its properties.</p></blockquote><p>关键词：分布式，边缘计算，局部估计，GBP，因子图，概率模型</p><p><strong>（边缘计算，分布式的，局部计算和存储，整体计算和构建以一种‘graph’的方式展开）</strong></p><p>首先，背景是现在的spatial AI系统要试着处理异质的数据，通过不同的估计手段将其转换成一致性的表示方式，但是这受限于现在的处理器性能（实时，持续地处理带来计算负担，存储负担和转换负担）。Andrew认为目前有两种方式可以对此进行提升：</p><ul><li>One is to focus on scene representation, and to find new parameterisations of world models which allow high quality scene models to be built and maintained much more efficiently. 这是表征方式的问题，这也是学术界都在解决的问题，representation learning. 机器人，计算机如何利用自己的硬件特点来认识和表征周围的世界，这跟人认识世界不一定是一样的。</li><li>The other is to look towards the changing landscape in computing and sensing hardware. 另一个就是硬件设计，比如现在视觉SLAM中的“event camera”，利用事件来记录。这里Andrew也推荐了ETH苏黎世联邦理工大学 J. Martel的phD thesis，<a href="https://www.research-collection.ethz.ch/handle/20.500.11850/362900">传送门</a></li></ul><p>硬件问题上，Andrew并没有说太多，大都还是一些常见的设想，在后续的section中，Andrew主要是是针对第一点来说的。</p><blockquote><p>The purest representation of the knowledge in a <strong>Spatial AI problem is the factor graph itself, rather than probability distributions derived from it, which will always have to be stored with some approximation</strong>. What we are really seeking is an algorithm which implements Spatial AI in a distributed way on a computational resource like a graph processor, by storing the factor graph as the master representation and operating on it in place using local computation and message passing to implement estimation of variables as needed but taking account of global influence.</p></blockquote><p>(有关因子图的资料，推荐<a href="http://www.cs.cmu.edu/~kaess/pub/Dellaert17fnt.pdf">Factor Graphs for Robot Perception</a>， 关于高斯置信传播，Andrew是根据bishop的PRML一书来的，此外他在文中推荐的是比较老的参考文献<a href="http://web.cs.iastate.edu/~honavar/factorgraphs.pdf">Factor Graphs and the Sum-Product Algorithm</a>，我自己也在网上发现了一篇伯希来大学的phD论文<a href="https://arxiv.org/pdf/0811.2518.pdf"> Gaussian Belief Propagation: Theory and Application </a>，希望对后续理解有所帮助。）</p><p>Andrew认为可以通过因子图来进行局部估计，进行边缘计算，然后进行信息传递，通过这种方法来构建分布式和全局上的计算，从而达到认知和执行任务的目的。</p><p>—to be continued</p><h3 id="mathematics-models">Mathematics models</h3><h4 id="factor-graph">factor graph</h4><h4 id="gbp">GBP</h4><h3 id="examples">Examples</h3>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;about&quot;&gt;About&lt;/h2&gt;
&lt;p&gt;继第一篇&lt;a href=&quot;https://arxiv.org/abs/1803.11288&quot;&gt;FutureMapping&lt;/a&gt;之后，视觉SLAM领域内的奠基者Andrew Davison最近又将他的和别人讨论的有关未来空间AI对地图构建，机器人协同定位，以及动态问题等新想法撰写成了新的论文&lt;a href=&quot;https://arxiv.org/abs/1910.14139&quot;&gt;FutureMapping2&lt;/a&gt;，置顶在了自己的推特上，表示欢迎大家交流自己的想法。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/FutureMappingofAJD-2/Andrew-twitter.PNG&quot; alt=&quot;Andrew-twitter&quot;&gt;&lt;/p&gt;
&lt;p&gt;总的来说，这篇文章干货还算是很多的，主要是着眼于factor graph（因子图）和Gaussian Belief Propagation（GBP，高斯置信传播）对整体，动态机器人建图等问题的潜力和前景，不仅在数学上进行一些tutorial，还给出了三个python demos。由于我对视觉SLAM只是了解整体特点，其中各种计算细节和优化方法并没有认真看过和代码书写过，因此读完这篇充满amazing reflections的文章之后我只能把握到整体的idea和一些实现方法。对于GBP和factor graph 结合构建的数学模型，我将在后续花时间弄懂后再对该blog进行补充。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;非常建议对SLAM或者机器视觉领域感兴趣的同行阅读此论文，相信会帮助您开阔思路！&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="论文阅读" scheme="http://densecollections.top/categories/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/"/>
    
    
    <category term="SLAM" scheme="http://densecollections.top/tags/SLAM/"/>
    
    <category term="mapping" scheme="http://densecollections.top/tags/mapping/"/>
    
    <category term="AI system" scheme="http://densecollections.top/tags/AI-system/"/>
    
    <category term="computer vision" scheme="http://densecollections.top/tags/computer-vision/"/>
    
    <category term="hardware" scheme="http://densecollections.top/tags/hardware/"/>
    
  </entry>
  
  <entry>
    <title>实习痰涂片项目总结</title>
    <link href="http://densecollections.top/posts/worksummaryofintern/"/>
    <id>http://densecollections.top/posts/worksummaryofintern/</id>
    <published>2019-10-04T07:47:17.000Z</published>
    <updated>2022-09-09T03:27:49.616Z</updated>
    
    <content type="html"><![CDATA[<h2 id="classification">classification</h2><p>在上篇博客提到，该任务就是将原始数据的每张图片（256x256）进行grid级别的label预测，思路很简单，就是最后卷出的feature map是4x4的，不要过average global pooling layer，直接拉成1x16的向量过sigmoid激活函数即可（label也要变成16个字符，有点类似OCR)。</p><h3 id="dataset">dataset</h3><p>原始数据给的标注是json格式的框标注，但是框不是杆菌的具体位置，而是代表这个grid里面存在杆菌：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;frames&quot;:&#123;&quot;0_grid.png&quot;:[&#123;&quot;x1&quot;:162.42542787286064,&quot;y1&quot;:25.34963325183374,&quot;x2&quot;:170.24938875305622,&quot;y2&quot;:34.11246943765281,&quot;width&quot;:256,&quot;height&quot;:256,&quot;box&quot;:&#123;&quot;x1&quot;:162.42542787286064,&quot;y1&quot;:25.34963325183374,&quot;x2&quot;:170.24938875305622,&quot;y2&quot;:34.11246943765281&#125;,&quot;UID&quot;:&quot;fd548124&quot;,&quot;id&quot;:0,&quot;type&quot;:&quot;Rectangle&quot;,&quot;tags&quot;:[&quot;TB01&quot;],&quot;name&quot;:1&#125;,&#123;&quot;x1&quot;:214.3765281173594,&quot;y1&quot;:24.410757946210268,&quot;x2&quot;:224.07823960880197,&quot;y2&quot;:34.11246943765281,&quot;width&quot;:256,&quot;height&quot;:256,&quot;box&quot;:&#123;&quot;x1&quot;:214.3765281173594,&quot;y1&quot;:24.410757946210268,&quot;x2&quot;:224.07823960880197,&quot;y2&quot;:34.11246943765281&#125;,&quot;UID&quot;:&quot;5318dd81&quot;,&quot;id&quot;:1,&quot;type&quot;:&quot;Rectangle&quot;,&quot;tags&quot;:[&quot;TB01&quot;],&quot;name&quot;:2&#125;,...&#125;</span><br></pre></td></tr></table></figure><p>部分标注内容如上，主要包含了对应的文件夹下有哪些图片，图片上有无杆菌，杆菌的位置在哪个格子（要自己判断），以及一张图片有杆菌的话共有几个（“name”）。</p><span id="more"></span><p>首先找出哪些是positive的图片，并且根据坐标位置写出标签:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def find_write_positive_imgs(src_json_path, src_imgs_path, dst_csv_path, dst_imgs_path):</span><br><span class="line">    </span><br><span class="line">    data_csv = open(dst_csv_path, &#x27;a+&#x27;, newline=&#x27;&#x27;)</span><br><span class="line">    csv_writer = csv.writer(data_csv)</span><br><span class="line">    csv_writer.writerow([&quot;ImageName&quot;, &quot;LabelId&quot;])</span><br><span class="line">    </span><br><span class="line">    with open(src_json_path,&#x27;r&#x27;) as load_json:</span><br><span class="line">         load_dict = json.load(load_json)</span><br><span class="line"></span><br><span class="line">         img_names = load_dict[&#x27;visitedFrames&#x27;]</span><br><span class="line"></span><br><span class="line">         for img_name in img_names:</span><br><span class="line">         </span><br><span class="line">             #n_name represents the boxes quantities of the img &lt;&quot;name&quot; attribute in .json file&gt;</span><br><span class="line">             n_name=len(load_dict[&#x27;frames&#x27;][img_name])</span><br><span class="line">             </span><br><span class="line">             if n_name &gt; 0:</span><br><span class="line">                src_img_path = os.path.join(src_imgs_path, img_name)</span><br><span class="line">                img = cv2.imread(src_img_path)</span><br><span class="line">                H = img.shape[0]</span><br><span class="line">                W = img.shape[1]</span><br><span class="line">                dst_img_path = os.path.join(dst_imgs_path, img_name.replace(&#x27;.png&#x27;, &#x27;_22.png&#x27;))</span><br><span class="line">                cv2.imwrite(dst_img_path, img)</span><br><span class="line">                </span><br><span class="line">                labelid = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0] </span><br><span class="line">                for i in range(0,n_name):</span><br><span class="line">                    x1 = load_dict[&#x27;frames&#x27;][img_name][i][&#x27;x1&#x27;]</span><br><span class="line">                    y1 = load_dict[&#x27;frames&#x27;][img_name][i][&#x27;y1&#x27;]</span><br><span class="line">                    area_h0 = 0</span><br><span class="line">                    area_w0 = 0</span><br><span class="line">                    for area_h1 in range(H//4, H+1, H//4):</span><br><span class="line">                        if y1 &gt; area_h0 and y1 &lt; area_h1:</span><br><span class="line">                           row_id = (area_h1 * 4 / H) - 1</span><br><span class="line">                           for area_w1 in range(W//4, W+1, W//4):</span><br><span class="line">                               if x1 &gt; area_w0 and x1 &lt; area_w1:</span><br><span class="line">                                  col_id = (area_w1 * 4 / W) - 1</span><br><span class="line">                                  id = int(col_id + 4 * row_id)</span><br><span class="line">                                  labelid[id] = 1</span><br><span class="line">                                  break</span><br><span class="line">                               else:</span><br><span class="line">                                    area_w0 = area_w1</span><br><span class="line">                           break</span><br><span class="line">                        else:</span><br><span class="line">                            area_h0 = area_h1</span><br><span class="line">                  </span><br><span class="line">                csv_writer.writerow([img_name.replace(&#x27;.png&#x27;, &#x27;_22.png&#x27;), </span><br><span class="line">                                     &#x27;&#x27;.join(str(k) for k in labelid)])</span><br></pre></td></tr></table></figure><p>此外，由于最后找出的positive图片很少（好像只有320张），我又对其进行了数据扩增，先是原始旋转一圈，然后right-left翻转后又旋转了一圈，因此总共扩增到了8倍大小。之后进行一下train-val-test set的划分，一般生成随机数就可以按自己的意愿划分，也有专门的库，具体划分代码就不上了。</p><p>另外数据增强方面也考虑过rgb转hsv或者ycrcb的，但是我试了一个样例之后效果不是很好，毕竟这样做的目的就是为了将主要的前景和特征显示出来，奈何我的数据太差了些，不好操作，于是作罢。</p><p>准备好数据之后，要对数据进行抽取，我用的是pytorch，直接继承Dataset类就好：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class SSDataset(Dataset):</span><br><span class="line">      </span><br><span class="line">      def __init__(self, imgs_path, csv_path, </span><br><span class="line">                    img_transform=None, loader=default_loader):</span><br><span class="line">          with open(csv_path, &#x27;r&#x27;) as f:</span><br><span class="line">               #这里一定要按字符串读取，否则前面的0会丢掉</span><br><span class="line">               #类似于OCR的labe读取</span><br><span class="line">               data_info = pd.read_csv(f, dtype=str) </span><br><span class="line">               #第一列是image name</span><br><span class="line">               self.img_list = list(data_info.iloc[:,0])</span><br><span class="line">               #第二类是labelid</span><br><span class="line">               self.label_list = list(data_info.iloc[:,1])</span><br><span class="line">          self.img_transform = img_transform</span><br><span class="line">          #loader用PIL.Image.open()</span><br><span class="line">          #不要用cv2.imread()</span><br><span class="line">          #pytorch默认PIL格式</span><br><span class="line">          self.loader = loader</span><br><span class="line">          self.imgs_path = imgs_path</span><br><span class="line">      </span><br><span class="line">      def __getitem__(self, index):</span><br><span class="line">          img_path = os.path.join(self.imgs_path, self.img_list[index])</span><br><span class="line">          img = self.loader(img_path)</span><br><span class="line">          label = self.label_list[index]</span><br><span class="line">          if self.img_transform is not None:</span><br><span class="line">             img = self.img_transform(img)</span><br><span class="line">          return img, label</span><br><span class="line"></span><br><span class="line">      def __len__(self):</span><br><span class="line">         return len(self.label_list)</span><br></pre></td></tr></table></figure><p>但是定义的labelid是str，还需要转成tensor去计算loss:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def labelid_switch(labels_str):</span><br><span class="line">    b_s = len(labels_str)</span><br><span class="line">    pad_label = []</span><br><span class="line">    for i in range(0, b_s):</span><br><span class="line">        temp_label = [0]* 16</span><br><span class="line">        temp_label[:16] = labels_str[i]</span><br><span class="line">        temp_label = list(map(int, temp_label))</span><br><span class="line">        pad_label.append(temp_label)</span><br><span class="line">    pad_label = torch.Tensor(pad_label)</span><br><span class="line">    labels_float = pad_label.view(b_s, 16)</span><br><span class="line">    return labels_float</span><br></pre></td></tr></table></figure><h3 id="train">train</h3><p>训练模型是主要用的是resnet和vgg，这部分代码可以直接参考torchvision，然后改改后面的layer就好了。</p><p>loss function上我试了binary cross entropy和focal loss（毕竟整体上positive grids还是少于negative grids的），此外我也试了下<a href="https://github.com/facebookresearch/mixup-cifar10">mixup</a>，就是随机把batch里面的图片两两混合，计算loss的时候按照混合的比例分别计算相加，这也是一种应对过拟合，降低模型复杂度的办法（还有一种类似的方法叫sample pairing，只混合图片，不管label，我也试了，不过实际好像没mixup顶用）：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class BFocalLoss(nn.Module):</span><br><span class="line"> </span><br><span class="line">    def __init__(self, gamma=1,alpha=0.8):</span><br><span class="line">        super(BFocalLoss, self).__init__()</span><br><span class="line">        self.gamma = gamma</span><br><span class="line">        self.alpha = alpha</span><br><span class="line">    def forward(self, inputs, targets):</span><br><span class="line">        p = inputs</span><br><span class="line">        loss = -self.alpha*(1-p)**self.gamma*(targets*torch.log(p+1e-12))-\</span><br><span class="line">               (1-self.alpha)*p**self.gamma*((1-targets)*torch.log(1-p+1e-12))</span><br><span class="line">        loss = torch.sum(loss)</span><br><span class="line">        return loss</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def mixup_data(in_img, in_label, alpha=1.0):</span><br><span class="line">    #alpha in [0.1,0.4] in paper has better gain(for imagenet)</span><br><span class="line">    #for cifar-10 is 1.</span><br><span class="line">    if alpha &gt; 0:</span><br><span class="line">       lam = np.random.beta(alpha, alpha)</span><br><span class="line">    else:</span><br><span class="line">       lam = 1</span><br><span class="line">    </span><br><span class="line">    Batch_Size = in_img.size()[0]</span><br><span class="line">    Index = torch.randperm(Batch_Size)</span><br><span class="line">    mixed_x = lam * in_img + (1 - lam) * in_img[Index, :]</span><br><span class="line">    y_a, y_b = in_label, in_label[Index]</span><br><span class="line">    return mixed_x, y_a, y_b, lam</span><br><span class="line">    </span><br><span class="line">#计算loss  </span><br><span class="line">loss_mixup =  lam * criterion(pred, labels_a) + \</span><br><span class="line">                   (1 - lam) * criterion(pred, labels_b)</span><br></pre></td></tr></table></figure><p>接下来的事就是调参，对比实验，开tensorboard看loss的趋势了。（这里有一个现象，前期有一部分时间loss难以下降，总是在一个范围内波动，我猜想可能是因为数据扩增的原因。）</p><h3 id="test">test</h3><p>这部分就是加载模型，一张张图片测试，然后写出预测的csv即可，然后给出grid acc</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#部分代码如下：</span><br><span class="line">file_pre = open(PRE_TEST_CSV, &#x27;w&#x27;, newline=&#x27;&#x27;)</span><br><span class="line">pre_writer = csv.writer(file_pre)</span><br><span class="line">pre_writer.writerow([&quot;ImageName&quot;, &quot;LabelId&quot;])</span><br><span class="line"></span><br><span class="line">with open(SRC_TEST_CSV, &#x27;r&#x27;) as f_test:</span><br><span class="line">     test_data = pd.read_csv(f_test, dtype=str)</span><br><span class="line">     img_name = list(test_data.iloc[:,0])</span><br><span class="line">     labelid = list(test_data.iloc[:,1])</span><br><span class="line">     test_data_len = len(test_data.index)</span><br><span class="line"></span><br><span class="line">     num_right = 0 </span><br><span class="line">     positive_num = 0 </span><br><span class="line">     positive_num_right = 0</span><br><span class="line">     for i in range(0,test_data_len):</span><br><span class="line">         img_path = os.path.join(TEST_DATA_PATH, img_name[i])</span><br><span class="line">         img = Image.open(img_path)</span><br><span class="line">         img_tensor = transformations(img).float()</span><br><span class="line">         img_tensor = img_tensor.unsqueeze_(0)</span><br><span class="line">         </span><br><span class="line">         temp_label = [0]*16</span><br><span class="line">         temp_label[:16] = labelid[i]</span><br><span class="line">         temp_label = list(map(int, temp_label))</span><br><span class="line">         for temp in temp_label:</span><br><span class="line">             if temp &gt; 0:</span><br><span class="line">                positive_num += 1</span><br><span class="line">         label = torch.FloatTensor(temp_label)</span><br><span class="line">         label = label.view(1, 16)</span><br><span class="line">          </span><br><span class="line">         input = Variable(img_tensor)</span><br><span class="line">         input = input.to(device)</span><br><span class="line">         pred = net(input).data.cpu() #在CPU中比较</span><br><span class="line">         output = pred</span><br><span class="line">         pred_len = pred.size()[1]</span><br><span class="line">         out = []</span><br><span class="line">         for j in range(0, pred_len):</span><br><span class="line">             if pred[0][j] &lt; 0.5:</span><br><span class="line">                output[0][j] = 0</span><br><span class="line">                out.append(0)</span><br><span class="line">                if output[0][j] == label[0][j]:</span><br><span class="line">                   num_right += 1</span><br><span class="line">             else:</span><br><span class="line">                 output[0][j] = 1</span><br><span class="line">                 out.append(1)</span><br><span class="line">                 if output[0][j] == label[0][j]:</span><br><span class="line">                    num_right += 1</span><br><span class="line">                    positive_num_right += 1</span><br><span class="line">         pre_writer.writerow([img_name[i],&#x27;&#x27;.join(str(k) for k in out)]) </span><br><span class="line">    </span><br><span class="line">     print(&#x27;test acc is: &#x27;, num_right/(test_data_len*16))</span><br><span class="line">     print(&#x27;postivite acc is: &#x27;, positive_num_right, &#x27;/&#x27;, positive_num)</span><br></pre></td></tr></table></figure><h3 id="summary">summary</h3><p>实际上这个代码下来，调参还是挺费劲的，尤其是对我这种刚开始搞深度学习，经验还不够的新手来说，着实走了不少弯路。可是数据集实在太差，实在是想不出什么招。。所以硬撑了快两个月（实际上前大半个月我是直接分割grid成单独的图片，然后全部丢进去训练的。。这样搞不仅正负样本差距极大，而且切断了图片的连续性，效果奇差也在意料之中了，基本训不动，即使加了focal loss也没什么卵用）最后最高也才得到90%的acc。</p><h2 id="weakly-semantic-segmentation">weakly semantic segmentation</h2><p>好歹8月下旬那会找到了一个公开的sputum smear的数据集，还带着框的标注：</p><ul><li>Makerere University, Uganda<ul><li><a href="http://air.ug/microscopy/">homepage</a></li><li><a href="http://proceedings.mlr.press/v56/Quinn16.pdf">paper</a></li><li><a href="https://github.com/jqug/microscopy-object-detection/blob/master/CNN%20training%20%26%20evaluation%20-%20tuberculosis.ipynb">code</a></li></ul></li></ul><p>跟CTO交流后，他觉得这数据集质量不错，干脆就提议做弱监督分割，毕竟object detection现在都做烂了，而且开源这数据集的小哥自己也把object detection的acc刷的不错了，所以没必要再调包重复同样的事情了。我当时其实没啥思路，但是觉得应该挺有意思的，于是就接了下来。</p><p>后来通过调研发现，原来在自然图像上早就有人做了weakly segmentation(又是我恺明哥那些人…)，而且效果还不错，唯一可惜的就是完整的代码基本没人开源，不过后来参考GitHub上的一些相关代码也慢慢搭建出了整个框架。</p><p>整个项目思路主要参考的是这两篇论文：戴季峰的<a href="https://www.cv-foundation.org/openaccess/content_iccv_2015/papers/Dai_BoxSup_Exploiting_Bounding_ICCV_2015_paper.pdf">BoxSup</a>和Max Planck Institute的<a href="http://openaccess.thecvf.com/content_cvpr_2017/papers/Khoreva_Simple_Does_It_CVPR_2017_paper.pdf">Simple Does It</a>，主要的思路就是先设定几个从bounding box annotations生成segment proposals的方法（主要是opencv中GrabCut），然后利用此label去进行supervised training，最后过一下<a href="https://github.com/lucasb-eyer/pydensecrf">denseCRF</a>优化一下，让boundary更加丝滑。当然也可以试试递归训练，让performance不错的model去预测生成新的training set中的label，然后进行下一轮的训练。</p><p>因为代码比较庞杂，分块不好展示，完整的代码就直接放在我的<a href="https://github.com/Richardyu114/weakly-segmentation-with-bounding-box">github</a>上。</p><h3 id="pre-processing">pre-processing</h3><p>原始的数据集中有1217张阳性图片，此外这些图片的标注还有47张莫名奇妙多了些20x20的框（可能是标的时候手抖了），因此要先一个个去掉。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/worksummaryofintern/1.jpg" alt="看到了吗，左下角和右上角都多了个小框"></p><p>之后，对这些图片进行大致masks的生成，我这里给了三种方法：</p><ul><li><em>Box_segments</em>: 把整个box里面的像素都认为是杆菌（要把box的坐标都转成int，得对上像素）</li><li><em>Sbox_segments</em>:取box里面的80%的矩形框，认为该框里面的像素都是杆菌（同样，坐标都是int类型）</li><li><em>GrabCut_segments</em>: 利用经典的计算机视觉方法<a href="https://cvg.ethz.ch/teaching/cvl/2012/grabcut-siggraph04.pdf">GrabCut</a>来得到杆菌的分割区域，但是该方法一般对图片的里面的单个的大物体比较友好，而杆菌又细又长，同时又包含着染色质，所以利用颜色分布的GrabCut分割出的杆菌要么会大点，要么就没有。大点的我不管，没有的我在这里就直接用<em>Box_segments</em>代替了。</li></ul><p>GrabCut部分代码如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def grabcut(img_name):</span><br><span class="line">        masks = [] </span><br><span class="line">        # one image has many object that need to grabcut</span><br><span class="line">        for i, ann_info in enumerate(ANNS[img_name], start=1):</span><br><span class="line">               img = cv.imread((img_dir +img_name).rstrip()+&#x27;.jpg&#x27;)</span><br><span class="line">               grab_name = ann_info[1]</span><br><span class="line">               xmin = ann_info[3]</span><br><span class="line">               ymin = ann_info[2]</span><br><span class="line">               xmax = ann_info[5]</span><br><span class="line">               ymax = ann_info[4]</span><br><span class="line">               &quot;&quot;&quot;get int box coor&quot;&quot;&quot;</span><br><span class="line">               img_w = img.shape[1]</span><br><span class="line">               img_h = img.shape[0]</span><br><span class="line">               xmin, ymin, xmax, ymax = get_int_coor(xmin, ymin, xmax, ymax, img_w, img_h)           </span><br><span class="line">               box_w = xmax - xmin</span><br><span class="line">               box_h = ymax - ymin</span><br><span class="line">               # cv.grabcut&#x27;s para</span><br><span class="line">               mask = np.zeros(img.shape[:2], np.uint8)</span><br><span class="line">               # rect is the tuple</span><br><span class="line">               rect = (xmin, ymin, box_w, box_h)</span><br><span class="line">               bgdModel = np.zeros((1, 65), np.float64)</span><br><span class="line">               fgdModel = np.zeros((1, 65), np.float64)</span><br><span class="line">               #for small bbox:</span><br><span class="line">               if box_w * box_h &lt; MINI_AREA:</span><br><span class="line">                   img_mask = mask[ymin:ymax, xmin:xmax] = 1</span><br><span class="line">                # for big box that area == img.area(one object bbox is just the whole image)</span><br><span class="line">               elif box_w * box_h == img.shape[1] * img.shape[0]:</span><br><span class="line">                      rect = [RECT_SHRINK, RECT_SHRINK, box_w - RECT_SHRINK * 2, box_h - RECT_SHRINK * 2]</span><br><span class="line">                      cv.grabCut(img, mask, rect, bgdModel,fgdModel, ITER_NUM, cv.GC_INIT_WITH_RECT)</span><br><span class="line">                      # astype(&#x27;uint8&#x27;) keep the image pixel in range[0,255]</span><br><span class="line">                      img_mask =  np.where((mask == 0) | (mask == 2), 0, 1).astype(&#x27;uint8&#x27;)</span><br><span class="line">                # for normal bbox:</span><br><span class="line">               else:</span><br><span class="line">                       cv.grabCut(img, mask, rect, bgdModel,fgdModel, ITER_NUM, cv.GC_INIT_WITH_RECT)</span><br><span class="line">                       img_mask = np.where((mask == 0) | (mask == 2), 0, 1).astype(&#x27;uint8&#x27;)</span><br><span class="line">                       # if the grabcut output is just background(it happens in my dataset)</span><br><span class="line">                       if np.sum(img_mask) == 0:</span><br><span class="line">                           img_mask = np.where((mask == 0), 0, 1).astype(&#x27;uint8&#x27;)</span><br><span class="line">                        # couting IOU</span><br><span class="line">                        # if the grabcut output too small region, it need reset to bbox mask</span><br><span class="line">                       box_mask = np.zeros((img.shape[0], img.shape[1]))</span><br><span class="line">                       box_mask[ymin:ymax, xmin:xmax] = 1</span><br><span class="line">                       sum_area = box_mask + img_mask</span><br><span class="line">                       intersection = np.where((sum_area==2), 1, 0).astype(&#x27;uint8&#x27;)</span><br><span class="line">                       union = np.where((sum_area==0), 0, 1).astype(&#x27;uint8&#x27;)</span><br><span class="line">                       IOU = np.sum(intersection) / np.sum(union)</span><br><span class="line">                       if IOU &lt;= IOU_THRESHOLD:</span><br><span class="line">                           img_mask = box_mask</span><br><span class="line">                # for draw mask on the image later           </span><br><span class="line">               img = cv.cvtColor(img, cv.COLOR_BGR2RGB) </span><br><span class="line">               masks.append([img_mask, grab_name, rect])</span><br><span class="line">        </span><br><span class="line">        num_object = i</span><br><span class="line">        &quot;&quot;&quot;for multi-objects intersection and fix the label &quot;&quot;&quot;</span><br><span class="line">        masks.sort(key=lambda mask: np.sum(mask[0]), reverse=True)</span><br><span class="line">        for j in range(num_object):</span><br><span class="line">              for k in range(j+1, num_object):</span><br><span class="line">                      masks[j][0] = masks[j][0] - masks[k][0]</span><br><span class="line">              masks[j][0] = np.where((masks[j][0]==1), 1, 0).astype(&#x27;uint8&#x27;)</span><br><span class="line">              &quot;&quot;&quot;get class name  id&quot;&quot;&quot;</span><br><span class="line">              grab_name = masks[j][1]</span><br><span class="line">              class_id = grab_name.split(&#x27;_&#x27;)[-1]</span><br><span class="line">              class_id = int(class_id.split(&#x27;.&#x27;)[0])</span><br><span class="line"></span><br><span class="line">              #set the numpy value to class_id</span><br><span class="line">              masks[j][0] = np.where((masks[j][0]==1), class_id, 0).astype(&#x27;uint8&#x27;)</span><br><span class="line">              # save grabcut_inst(one object in a image)</span><br><span class="line">              scipy.misc.toimage(masks[j][0], cmin=0, cmax=255, pal=tbvoc_info.colors_map,</span><br><span class="line">                                                      mode=&#x27;P&#x27; ).save((grabcut_dir).rstrip()+masks[j][1])</span><br><span class="line">        </span><br><span class="line">        &quot;&quot;&quot;merge masks&quot;&quot;&quot;</span><br><span class="line">        # built array(img.shape size)</span><br><span class="line">        mask_ = np.zeros(img.shape[:2])</span><br><span class="line">        for mask in masks:</span><br><span class="line">                mask_ = mask_ + mask[0]</span><br><span class="line">        # save segmetation_label(every object in a image)</span><br><span class="line">        scipy.misc.toimage(mask_, cmin=0, cmax=255, pal=tbvoc_info.colors_map,</span><br><span class="line">                                                mode=&#x27;P&#x27;).save((segmentation_label_dir+img_name).rstrip()+&#x27;.png&#x27;)</span><br></pre></td></tr></table></figure><p>这里面我是用scipy来保存masks的，我用的版本是0.19.0，超过这个版本的scipy就没有toimage()这个函数了，据说PIL有可以替代的函数，但是我看两个的功效好像不一样，就没去折腾了。</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/worksummaryofintern/2.jpg" alt="原图，带框标注"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/worksummaryofintern/3.png" alt="GrabCut生成的segmentation label"></p><p>读取数据部分进行了resize处理，原图尺寸是1632x1224，1224不能被32整除，五次下采样和上采样的时候会出现feature map维度不匹配的错误，因此resize成了1632x1216。这里要注意，原图是利用双线性插值进行resize的，masks图是利用最近邻进行resize的（实际上我是生成好masks后训练时才意识到这个问题，实际上可以在最开始就把dataset的数据resize好，这样masks的误差可能就小点），PIL和cv2里面都有类似的函数。</p><p>数据读取部分代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class TBDataset(Dataset):</span><br><span class="line">      def __init__(self, txt_dir, width, height,  transform=None):</span><br><span class="line">          self.img_names = []</span><br><span class="line">          with open(txt_dir, &#x27;r&#x27;) as f_txt:</span><br><span class="line">               for img_name in f_txt:</span><br><span class="line">                   self.img_names.append(img_name)</span><br><span class="line">          </span><br><span class="line">          self.transform = transform</span><br><span class="line">          self.txt_dir = txt_dir</span><br><span class="line">          self.width = width</span><br><span class="line">          self.height = height</span><br><span class="line">                   </span><br><span class="line">      def __getitem__(self, index):</span><br><span class="line">          img_name = self.img_names[index]</span><br><span class="line">          img = Image.open(os.path.join(img_dir, img_name).rstrip()+&#x27;.jpg&#x27;)</span><br><span class="line">          # the resize function like bilinear</span><br><span class="line">          img = img.resize((self.width, self.height), Image.LANCZOS)</span><br><span class="line">          img = np.array(img)</span><br><span class="line">          label = Image.open(os.path.join(label_dir, img_name).rstrip()+&#x27;.png&#x27;)</span><br><span class="line">          # for consider class_id is not consecutive and just fixed by user</span><br><span class="line">          label = label.resize((self.width, self.height), Image.NEAREST)</span><br><span class="line">          label = np.array(label)</span><br><span class="line">          if self.transform is not None:</span><br><span class="line">             img = self.transform(img)</span><br><span class="line">          #img = torch.FloatTensor(img)</span><br><span class="line">          label = torch.FloatTensor(label)</span><br><span class="line">          return img, label</span><br><span class="line">                             </span><br><span class="line">      def __len__(self):</span><br><span class="line">          return len(self.img_names)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="train">train</h3><p>训练部分模型用的是FCN和UNet，因为考虑到只有二分类，后面也可以考虑deeplab，UNet++等等。FCN用的是VGG-16 backbone，下采样5次，UNet下采样4次，都是按照论文来的，没做什么改动。模型最后输出的是一个1632x1216的feature map，然后直接过sigmoid激活函数，再和1632x1216的mask图片（读进来的是一个二维0-1矩阵，代表每个像素点的label）进行loss计算，然后BP，更新参数学习。loss也用了交叉熵和focal loss.</p><h3 id="post-processing">post-processing</h3><p>对模型预测出的结果再过一遍denseCRF，优化分割的同时也会去掉一些false-positive</p><p>部分代码如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def run_densecrf(img_dir, img_name, masks_pro):</span><br><span class="line">        height = masks_pro.shape[0]</span><br><span class="line">        width = masks_pro.shape[1]</span><br><span class="line"></span><br><span class="line">        # must use cv2.imread()</span><br><span class="line">        # if use PIL.Image.open(), the algorithm will break</span><br><span class="line">        #TODO --need to fix the image problem</span><br><span class="line">        img = cv.imread(os.path.join(img_dir, img_name).rstrip()+&#x27;.jpg&#x27;)</span><br><span class="line">        img = cv.resize(img, (1632,1216), interpolation = cv.INTER_LINEAR)</span><br><span class="line"></span><br><span class="line">        # expand to [1,H,W]</span><br><span class="line">        masks_pro = np.expand_dims(masks_pro, 0)</span><br><span class="line">        # masks_pro = masks_pro[:, :, np.newaxis]</span><br><span class="line">        # append to array---shape(2,H,W)</span><br><span class="line">        # one depth represents the class 0, the other represents the class 1</span><br><span class="line">        masks_pro = np.append(1-masks_pro, masks_pro, axis=0)</span><br><span class="line">        #[Classes, H, W]</span><br><span class="line">        # U needs to be flat</span><br><span class="line">        U = masks_pro.reshape(2, -1)</span><br><span class="line">        # deepcopy and the order is C-order(from rows to colums)</span><br><span class="line">        U = U.copy(order=&#x27;C&#x27;)</span><br><span class="line">        # for binary classification, the value after sigmoid may be very small</span><br><span class="line">        U = np.where((U &lt; 1e-12), 1e-12, U)</span><br><span class="line">        d = dcrf.DenseCRF2D(width, height, 2)</span><br><span class="line"></span><br><span class="line">        # make sure the array be c-order which will faster the processing speed</span><br><span class="line">        # reference: https://zhuanlan.zhihu.com/p/59767914</span><br><span class="line">        U = np.ascontiguousarray(U)</span><br><span class="line">        img = np.ascontiguousarray(img)</span><br><span class="line"></span><br><span class="line">        d.setUnaryEnergy(-np.log(U))</span><br><span class="line">        d.addPairwiseGaussian(sxy=3, compat=3)</span><br><span class="line">        d.addPairwiseBilateral(sxy=80, srgb=13, rgbim=img, compat=10)</span><br><span class="line">        Q = d.inference(5)</span><br><span class="line">        # compare each value between two rows by colum</span><br><span class="line">        # and inference each pixel belongs to which class(0 or 1)</span><br><span class="line">        map = np.argmax(Q, axis=0).reshape((height, width))</span><br><span class="line">        proba = np.array(map)</span><br><span class="line"></span><br><span class="line">        return proba</span><br></pre></td></tr></table></figure><p>这里主要用到了二元势pairwise potential，比较每个像素和其他像素的关系，具体原理可以去看看原代码和论文。</p><p>此外，我还顺手进行了下迭代训练。实际上，对于我这个数据集，基本上用GrabCut生成label训练一遍效果就不错了，不过为了看下更新label再训练一轮会不会得到更好的结果，在固定的epoch结束后将训练好得模型设为eval模式，然后预测train set的数据，然后再返回train模式继续训练。需要注意的是，更新label的时候，可能会有漏诊和误诊，我就直接将预测的mask和<em>Box_segments</em>得到的mask相加，只取为2的部分，这样就去掉了假阳性，然后漏诊的部分再用box补回来。</p><p>从实验结果来看，一般我这个是更新3次label（每10个epoch更新一次）就差不多了，再多也没什么提升。总体上来说，这个操作可以提高单张图片同时存在多个杆菌的分割效果，但是提升力度也没什么太令人满意的地方。可能是我的更新姿势不对？</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def update_label(predict_model, device):</span><br><span class="line">       </span><br><span class="line">       &quot;&quot;&quot;load train_pairs.txt info for check the missed diagnosis objects&quot;&quot;&quot;</span><br><span class="line">       #ann_info:[image name, image name_num_ class_id.png, bbox_ymin,</span><br><span class="line">       #                    bbox_xmin,bbox_ymax, bbox_xmax, class_name]</span><br><span class="line">       print(&#x27;start to update...&#x27;)</span><br><span class="line">       ANNS = &#123;&#125;</span><br><span class="line">       with open(dataset_pairs_dir, &#x27;r&#x27;) as da_p_txt:</span><br><span class="line">                 for ann_info in da_p_txt:</span><br><span class="line">                        # split the string line, get the list</span><br><span class="line">                        ann_info = ann_info.rstrip().split(&#x27;###&#x27;)</span><br><span class="line">                        if ann_info[0].rstrip()  not in ANNS:</span><br><span class="line">                            ANNS[ann_info[0].rstrip()] = []</span><br><span class="line">                        ANNS[ann_info[0].rstrip()].append(ann_info)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       predict_model.eval()</span><br><span class="line"></span><br><span class="line">       </span><br><span class="line"></span><br><span class="line">       # define the same image transformations</span><br><span class="line">       transformations = transforms.Compose([</span><br><span class="line">                                             transforms.ToTensor(),</span><br><span class="line">                                             transforms.Normalize(mean=[0.485, 0.456, 0.406], </span><br><span class="line">                                             std=[0.229, 0.224, 0.225])</span><br><span class="line">                                             ])</span><br><span class="line"></span><br><span class="line">       update_num = 0</span><br><span class="line">       print(&#x27;updating progress:&#x27;)</span><br><span class="line">       with open(dataset_txt_dir, &#x27;r&#x27;) as da_txt:</span><br><span class="line">                 # don&#x27;t use the code line below</span><br><span class="line">                 # or it will close the file and the whole programm end here (I guess)</span><br><span class="line">                 # I debug here for two hours......</span><br><span class="line">                 #lines = len(da_txt.readlines())</span><br><span class="line">                 for update_name in da_txt:</span><br><span class="line">                         update_num += 1</span><br><span class="line">                         # in RGB [W, H, depth]</span><br><span class="line">                         img = Image.open(os.path.join(img_dir, update_name).rstrip()+&#x27;.jpg&#x27;)</span><br><span class="line">                         img_w = img.size[0]</span><br><span class="line">                         img_h = img.size[1]</span><br><span class="line">                         img = img.resize((1632, 1216), Image.LANCZOS)</span><br><span class="line">                         input_ = transformations(img).float()</span><br><span class="line">                         # add batch_size dimension</span><br><span class="line">                         #[3, H, W]--&gt;[1, 3, H, W]</span><br><span class="line">                         input_ = input_.unsqueeze_(0)</span><br><span class="line">                         input_ = input_.to(device)</span><br><span class="line">                         pred = predict_model(input_).view([1216, 1632]).data.cpu()</span><br><span class="line">                         #pred.shape[H,W]</span><br><span class="line">                         pred = np.array(pred)</span><br><span class="line">                         &quot;&quot;&quot;crf smooth prediction&quot;&quot;&quot;</span><br><span class="line">                         crf_pred = run_densecrf(img_dir, update_name,  pred)</span><br><span class="line"></span><br><span class="line">                         &quot;&quot;&quot;start to update&quot;&quot;&quot;</span><br><span class="line">                         last_label = Image.open(os.path.join(label_dir, update_name).rstrip()+&#x27;.png&#x27;)</span><br><span class="line">                         last_label = last_label.resize((1632, 1216), Image.NEAREST)</span><br><span class="line">                         last_label = np.array(last_label)</span><br><span class="line"></span><br><span class="line">                         # predicted label without false-positive segments</span><br><span class="line">                         updated_label = crf_pred + last_label</span><br><span class="line">                         updated_label = np.where((updated_label==2), 1, 0).astype(&#x27;uint8&#x27;)</span><br><span class="line">                         # predicted label with missed diagnosis </span><br><span class="line">                         # we just use the box segments as missed diagnosis for now</span><br><span class="line">                         info4check = ANNS[update_name.rstrip()]</span><br><span class="line">                         masks_missed = np.zeros((1216, 1632), np.uint8)</span><br><span class="line">                         for box4check in info4check:</span><br><span class="line">                                xmin = box4check[3]</span><br><span class="line">                                ymin = box4check[2]</span><br><span class="line">                                xmax = box4check[5]</span><br><span class="line">                                ymax = box4check[4]</span><br><span class="line">                                xmin, ymin, xmax, ymax = get_int_coor(xmin, ymin, </span><br><span class="line">                                                                       xmax, ymax, img_w, img_h)</span><br><span class="line">                                xmin = int(xmin * 1632 / img_w)</span><br><span class="line">                                xmax = int(xmax * 1632 / img_w)</span><br><span class="line">                                ymin = int(ymin * 1216 / img_h)</span><br><span class="line">                                ymax = int(ymax * 1216 / img_h)</span><br><span class="line">                                if np.sum(updated_label[ymin:ymax, xmin:xmax]) == 0:</span><br><span class="line">                                    masks_missed[ymin:ymax, xmin:xmax] = 1</span><br><span class="line"></span><br><span class="line">                         updated_label = updated_label + masks_missed</span><br><span class="line">                         scipy.misc.toimage(updated_label, cmin=0, cmax=255, pal=colors_map, </span><br><span class="line">                                                            mode=&#x27;P&#x27;).save(os.path.join(label_dir, </span><br><span class="line">                                                                           update_name).rstrip()+ &#x27;.png&#x27;)</span><br><span class="line">                         print(&#x27;&#123;&#125; / &#123;&#125;&#x27;.format(update_num, len(ANNS)), end=&#x27;\r&#x27;)</span><br></pre></td></tr></table></figure><h3 id="metric">metric</h3><p>一般的segmentation论文都是用IoU来进行比较的，但是这个数据集没有segmentation groundtruth，所以我就自己定义了个检测的acc：预测的mask和框有交叉(np.sum(region of box)!=0)，就认为检测出了一个，然后算average acc，通过这个指标和test set上的预测结果来大致衡量哪些方法组合在一起不错。最后总结下来，还是GrabCut+FCN+FL(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>=</mo><mn>0.75</mn><mo separator="true">,</mo><mi>γ</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\alpha=0.75,\gamma=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">7</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>)更好些，不过我没加大UNet的深度和通道数，否则的话我猜想可能UNet会占上风。</p><p>篇幅有限，放几个还不错的预测结果：</p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/worksummaryofintern/4.png" alt="GrabCut+FCN+FL"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/worksummaryofintern/5.png" alt="GrabCut+FCN+FL"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/worksummaryofintern/6.png" alt="GrabCut+UNet+FL，UNet的结果似乎要圆润一些"></p><p><img src="https://cdn.jsdelivr.net/gh/Richardyu114/PicBed_blog/worksummaryofintern/7.png" alt="GrabCut+FCN+FL更新3次label，效果。。也就马马虎虎吧"></p><h3 id="summary">summary</h3><p>总的来说，最后的弱监督分割还是收获挺多的，尤其是自己的工程能力得到了锻炼，代码组织和书写也得到了一定地提升，最后相关成果也写成论文投了ISBI会议，如果能中的话，还是很舒服的^-^</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;classification&quot;&gt;classification&lt;/h2&gt;
&lt;p&gt;在上篇博客提到，该任务就是将原始数据的每张图片（256x256）进行grid级别的label预测，思路很简单，就是最后卷出的feature map是4x4的，不要过average global pooling layer，直接拉成1x16的向量过sigmoid激活函数即可（label也要变成16个字符，有点类似OCR)。&lt;/p&gt;
&lt;h3 id=&quot;dataset&quot;&gt;dataset&lt;/h3&gt;
&lt;p&gt;原始数据给的标注是json格式的框标注，但是框不是杆菌的具体位置，而是代表这个grid里面存在杆菌：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;frames&amp;quot;:&amp;#123;&amp;quot;0_grid.png&amp;quot;:[&amp;#123;&amp;quot;x1&amp;quot;:162.42542787286064,&amp;quot;y1&amp;quot;:25.34963325183374,&amp;quot;x2&amp;quot;:170.24938875305622,&amp;quot;y2&amp;quot;:34.11246943765281,&amp;quot;width&amp;quot;:256,&amp;quot;height&amp;quot;:256,&amp;quot;box&amp;quot;:&amp;#123;&amp;quot;x1&amp;quot;:162.42542787286064,&amp;quot;y1&amp;quot;:25.34963325183374,&amp;quot;x2&amp;quot;:170.24938875305622,&amp;quot;y2&amp;quot;:34.11246943765281&amp;#125;,&amp;quot;UID&amp;quot;:&amp;quot;fd548124&amp;quot;,&amp;quot;id&amp;quot;:0,&amp;quot;type&amp;quot;:&amp;quot;Rectangle&amp;quot;,&amp;quot;tags&amp;quot;:[&amp;quot;TB01&amp;quot;],&amp;quot;name&amp;quot;:1&amp;#125;,&amp;#123;&amp;quot;x1&amp;quot;:214.3765281173594,&amp;quot;y1&amp;quot;:24.410757946210268,&amp;quot;x2&amp;quot;:224.07823960880197,&amp;quot;y2&amp;quot;:34.11246943765281,&amp;quot;width&amp;quot;:256,&amp;quot;height&amp;quot;:256,&amp;quot;box&amp;quot;:&amp;#123;&amp;quot;x1&amp;quot;:214.3765281173594,&amp;quot;y1&amp;quot;:24.410757946210268,&amp;quot;x2&amp;quot;:224.07823960880197,&amp;quot;y2&amp;quot;:34.11246943765281&amp;#125;,&amp;quot;UID&amp;quot;:&amp;quot;5318dd81&amp;quot;,&amp;quot;id&amp;quot;:1,&amp;quot;type&amp;quot;:&amp;quot;Rectangle&amp;quot;,&amp;quot;tags&amp;quot;:[&amp;quot;TB01&amp;quot;],&amp;quot;name&amp;quot;:2&amp;#125;,...&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;部分标注内容如上，主要包含了对应的文件夹下有哪些图片，图片上有无杆菌，杆菌的位置在哪个格子（要自己判断），以及一张图片有杆菌的话共有几个（“name”）。&lt;/p&gt;</summary>
    
    
    
    <category term="工作总结" scheme="http://densecollections.top/categories/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="computer vision" scheme="http://densecollections.top/tags/computer-vision/"/>
    
    <category term="deep learning" scheme="http://densecollections.top/tags/deep-learning/"/>
    
    <category term="CNN" scheme="http://densecollections.top/tags/CNN/"/>
    
    <category term="medical image analysis" scheme="http://densecollections.top/tags/medical-image-analysis/"/>
    
  </entry>
  
</feed>
